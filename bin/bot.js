// Generated by Haxe 3.3.0 (git build development @ 1ab02da)
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
DateTools.__name__ = ["DateTools"];
DateTools.getMonthDays = function(d) {
	var month = d.getMonth();
	var year = d.getFullYear();
	if(month != 1) {
		return DateTools.DAYS_OF_MONTH[month];
	}
	if(year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {
		return 29;
	} else {
		return 28;
	}
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0?s:HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0?HxOverrides.substr(s,pos,null):HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10?"0" + m:"" + m) + "-" + (d < 10?"0" + d:"" + d) + " " + (h < 10?"0" + h:"" + h) + ":" + (mi < 10?"0" + mi:"" + mi) + ":" + (s < 10?"0" + s:"" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) if(tmp.next() == elt) {
		return true;
	}
	return false;
};
var Main = function() { };
Main.__name__ = ["Main"];
Main.main = function() {
	var defaultTokens = process.env.SLACKBOT_TOKENS;
	if(null != defaultTokens) {
		defaultTokens.split(" ");
	}
	var db = new msb_Db(process.env.SLACKBOT_ARANGO_CONNECTION_STRING);
	thx_promise__$Promise_Promise_$Impl_$.failure(thx_promise__$Promise_Promise_$Impl_$.flatMapEither(db.init(),function(_) {
		return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(new msb_Api().loadSetsFromFileSystem(Main.CARDS_FILE),$bind(db,db.uploadSets),function(err) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err);
		});
	},function(err1) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err1);
	}),function(e) {
		haxe_Log.trace("error",{ fileName : "Main.hx", lineNumber : 27, className : "Main", methodName : "main", customParams : [e]});
	});
};
Math.__name__ = ["Math"];
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
Type.__name__ = ["Type"];
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var haxe_StackItem = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null?"null":"" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null?"null":"" + file;
		b.b += " line ";
		b.b += line == null?"null":"" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null?"null":"" + cname;
		b.b += ".";
		b.b += meth == null?"null":"" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null?"null":"" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function"?haxe_StackItem.LocalFunction():meth == "Global code"?null:haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,__class__: haxe_IMap
};
var haxe__$Int32_Int32_$Impl_$ = {};
haxe__$Int32_Int32_$Impl_$.__name__ = ["haxe","_Int32","Int32_Impl_"];
haxe__$Int32_Int32_$Impl_$.mul = function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
var haxe_Log = function() { };
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Utf8 = function() { };
haxe_Utf8.__name__ = ["haxe","Utf8"];
haxe_Utf8.compare = function(a,b) {
	if(a > b) {
		return 1;
	} else if(a == b) {
		return 0;
	} else {
		return -1;
	}
};
var haxe_io_Bytes = function() { };
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.prototype = {
	b: null
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
var haxe_ds_BalancedTree = function() {
};
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				return false;
			} else throw(e);
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null?0:node._height);
		} else if(c < 0) {
			return this.balance(this.setLoop(k,v,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.setLoop(k,v,node.right));
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw new js__$Boot_HaxeError("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw new js__$Boot_HaxeError("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null?0:l._height;
		var hr = r == null?0:r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var tmp = _this == null?0:_this._height;
			var _this1 = l.right;
			if(tmp >= (_this1 == null?0:_this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var tmp1 = _this2 == null?0:_this2._height;
			var _this3 = r.left;
			if(tmp1 > (_this3 == null?0:_this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr?hl:hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var tmp1 = _this == null?0:_this._height;
		var _this1 = this.right;
		if(tmp1 > (_this1 == null?0:_this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = { __ename__ : ["haxe","ds","Option"], __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null?i.fileName + ":" + i.lineNumber + ": ":"";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_node_Fs = require("fs");
var js_node_buffer_Buffer = require("buffer").Buffer;
var msb_Api = function() {
	this.setsByCode = new haxe_ds_StringMap();
	this.cardsByName = new haxe_ds_StringMap();
	this.cards = [];
	this.sets = [];
};
msb_Api.__name__ = ["msb","Api"];
msb_Api.generateMap = function(list) {
	var cards = new haxe_ds_StringMap();
	var _g = 0;
	while(_g < list.length) {
		var card = list[_g];
		++_g;
		var cleanedName = msb_Api.cleanName(card.name);
		if(__map_reserved[cleanedName] != null?cards.existsReserved(cleanedName):cards.h.hasOwnProperty(cleanedName)) {
			continue;
		}
		if(__map_reserved[cleanedName] != null) {
			cards.setReserved(cleanedName,card);
		} else {
			cards.h[cleanedName] = card;
		}
	}
	return cards;
};
msb_Api.cleanName = function(name) {
	name = name.toLowerCase();
	name = thx_text_Diactrics.clean(name);
	name = name.replace(msb_Api.pattern.r,"");
	name = StringTools.trim(name);
	return name;
};
msb_Api.prototype = {
	setsByCode: null
	,cardsByName: null
	,cards: null
	,sets: null
	,queryCards: function(query) {
		return thx_promise__$Promise_Promise_$Impl_$.value(msb_Queries.query(this.cards,query));
	}
	,count: function() {
		return thx_promise__$Promise_Promise_$Impl_$.value(this.cards.length);
	}
	,getCard: function(name) {
		var cleanedName = msb_Api.cleanName(name);
		var _this = this.cardsByName;
		var card = __map_reserved[cleanedName] != null?_this.getReserved(cleanedName):_this.h[cleanedName];
		if(null != card) {
			return thx_promise__$Promise_Promise_$Impl_$.value(card);
		} else {
			return thx_promise__$Promise_Promise_$Impl_$.error(new thx_Error("Card not found \"" + name + "\"",null,{ fileName : "Api.hx", lineNumber : 45, className : "msb.Api", methodName : "getCard"}));
		}
	}
	,loadSetsFromFileSystem: function(path) {
		return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
			js_node_Fs.readFile(path,"utf8",function(err,content) {
				if(null != err) {
					reject(thx_Error.fromDynamic(err,{ fileName : "Api.hx", lineNumber : 52, className : "msb.Api", methodName : "loadSetsFromFileSystem"}));
					return;
				}
				try {
					resolve(thx_Objects.toMap(JSON.parse(content)));
				} catch( e ) {
					haxe_CallStack.lastException = e;
					reject(thx_Error.fromDynamic(err,{ fileName : "Api.hx", lineNumber : 58, className : "msb.Api", methodName : "loadSetsFromFileSystem"}));
				}
			});
		});
	}
	,loadSets: function(source) {
		this.setsByCode = source;
		var _this = this.setsByCode;
		this.sets = thx_Iterators.toArray(new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys()));
		var array = this.sets.map(function(set) {
			return set.cards;
		});
		this.cards = thx_Arrays.order(Array.prototype.concat.apply([],array).map(function(o) {
			return thx_Objects.combine(o,{ normalizedName : null != o.name?msb_Api.cleanName(o.name):"", normalizedText : null != o.text?msb_Api.cleanName(o.text):"", normalizedFlavor : null != o.flavor?msb_Api.cleanName(o.flavor):""});
		}),function(a,b) {
			return b.multiverseid - a.multiverseid;
		});
		this.cardsByName = msb_Api.generateMap(this.cards);
	}
	,artists: null
	,loadArtists: function() {
		if(null != this.artists) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.artists);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.artists = this.extractStrings(function(card) {
			return card.artist;
		}));
	}
	,convertedManaCosts: null
	,loadConvertedManaCosts: function() {
		if(null != this.convertedManaCosts) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.convertedManaCosts);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.convertedManaCosts = thx_Arrays.order(this.extractStrings(function(card) {
			return "" + card.cmc;
		}).map(Std.parseFloat),thx_Floats.compare));
	}
	,colorIdentities: null
	,loadColorIdentities: function() {
		if(null != this.colorIdentities) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.colorIdentities);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.colorIdentities = this.extractStringArrays(function(card) {
			return card.colorIdentity;
		}));
	}
	,colors: null
	,loadColors: function() {
		if(null != this.colors) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.colors);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.colors = this.extractStringArrays(function(card) {
			return card.colors;
		}));
	}
	,layouts: null
	,loadLayouts: function() {
		if(null != this.layouts) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.layouts);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.layouts = this.extractStrings(function(card) {
			return card.layout;
		}));
	}
	,formats: null
	,loadFormats: function() {
		if(null != this.formats) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.formats);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.formats = this.extractStringArrays(function(card) {
			if(null == card.legalities) {
				return [];
			} else {
				return card.legalities.map(function(leg) {
					return leg.format;
				});
			}
		}));
	}
	,legalities: null
	,loadLegalities: function() {
		if(null != this.legalities) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.legalities);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.legalities = this.extractStringArrays(function(card) {
			if(null == card.legalities) {
				return [];
			} else {
				return card.legalities.map(function(leg) {
					return leg.legality;
				});
			}
		}));
	}
	,manaCosts: null
	,loadManaCosts: function() {
		if(null != this.manaCosts) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.manaCosts);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.manaCosts = this.extractStrings(function(card) {
			return card.manaCost;
		}));
	}
	,powers: null
	,loadPowers: function() {
		if(null != this.powers) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.powers);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.powers = this.extractStrings(function(card) {
			return card.power;
		}));
	}
	,toughness: null
	,loadToughness: function() {
		if(null != this.toughness) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.toughness);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.toughness = this.extractStrings(function(card) {
			return card.toughness;
		}));
	}
	,rarities: null
	,loadRarities: function() {
		if(null != this.rarities) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.rarities);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.rarities = this.extractStrings(function(card) {
			return card.rarity;
		}));
	}
	,subtypes: null
	,loadSubtypes: function() {
		if(null != this.subtypes) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.subtypes);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.subtypes = this.extractStringArrays(function(card) {
			return card.subtypes;
		}));
	}
	,types: null
	,loadTypes: function() {
		if(null != this.types) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.types);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.types = this.extractStrings(function(card) {
			return card.type;
		}));
	}
	,allTypes: null
	,loadAllTypes: function() {
		if(null != this.allTypes) {
			return thx_promise__$Promise_Promise_$Impl_$.value(this.allTypes);
		}
		return thx_promise__$Promise_Promise_$Impl_$.value(this.allTypes = this.extractStringArrays(function(card) {
			return card.types;
		}));
	}
	,extractStringArrays: function(extractor) {
		return thx_Arrays.order(thx__$Set_Set_$Impl_$.toArray(this.extractArrays(extractor,thx__$Set_Set_$Impl_$.createString())),thx_Strings.compare);
	}
	,extractStrings: function(extractor) {
		var set = this.extractValues(extractor,thx__$Set_Set_$Impl_$.createString());
		set.remove("undefined");
		return thx_Arrays.order(thx__$Set_Set_$Impl_$.toArray(set),thx_Strings.compare);
	}
	,extractArrays: function(extractor,set) {
		return thx_Arrays.reduce(this.cards,function(acc,card) {
			var values = extractor(card);
			if(null == values) {
				return acc;
			}
			var _g = 0;
			while(_g < values.length) {
				var v = values[_g];
				++_g;
				thx__$Set_Set_$Impl_$.add(acc,v);
			}
			return acc;
		},set);
	}
	,extractValues: function(extractor,set) {
		return thx_Arrays.reduce(this.cards,function(acc,card) {
			var value = extractor(card);
			if(null != value) {
				thx__$Set_Set_$Impl_$.add(acc,value);
			}
			return acc;
		},set);
	}
	,__class__: msb_Api
};
var msb_Db = function(connectionString) {
	this.db = new npm_arango_Database(connectionString);
};
msb_Db.__name__ = ["msb","Db"];
msb_Db.prototype = {
	db: null
	,init: function() {
		var this1 = this.ensureDatabase();
		var success = $bind(this,this.ensureCollections);
		return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(_) {
			return success();
		},function(err) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err);
		});
	}
	,ensureDatabase: function() {
		var _gthis = this;
		return thx_promise__$Promise_Promise_$Impl_$.always(thx_promise__$Promise_Promise_$Impl_$.flatMapEither(thx_promise_PromiseAPlus.promise(this.db.listDatabases(),{ fileName : "Db.hx", lineNumber : 42, className : "msb.Db", methodName : "ensureDatabase"}),function(names) {
			if(thx_Arrays.contains(names,msb_Db.MTG_DATABASE)) {
				return thx_promise__$Promise_Promise_$Impl_$.nil;
			} else {
				return thx_promise_PromiseNil.nil(thx_promise_PromiseAPlus.promise(_gthis.db.createDatabase(msb_Db.MTG_DATABASE),{ fileName : "Db.hx", lineNumber : 48, className : "msb.Db", methodName : "ensureDatabase"}));
			}
		},function(err) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err);
		}),function() {
			_gthis.db.useDatabase(msb_Db.MTG_DATABASE);
		});
	}
	,ensureCollections: function() {
		var _gthis = this;
		return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(thx_promise_PromiseAPlus.promise(this.db.listCollections(),{ fileName : "Db.hx", lineNumber : 56, className : "msb.Db", methodName : "ensureCollections"}),function(collections) {
			var names = collections.map(function(_) {
				return _.name;
			});
			return thx_promise_PromiseNil.nil(thx_promise__$Promise_Promise_$Impl_$.sequence(msb_Db.MTG_COLLECTIONS.filter(function(collection) {
				return !thx_Arrays.contains(names,collection);
			}).map(function(name) {
				return thx_promise_PromiseAPlus.promise(_gthis.db.collection(name).create(),{ fileName : "Db.hx", lineNumber : 62, className : "msb.Db", methodName : "ensureCollections"});
			})));
		},function(err) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err);
		});
	}
	,uploadSets: function(sets) {
		var _gthis = this;
		var f = $bind(this,this.truncateCollection);
		var success = function() {
			return f("sets");
		};
		var this1 = thx_promise__$Promise_Promise_$Impl_$.flatMapEither(thx_promise__$Promise_Promise_$Impl_$.nil,function(_) {
			return success();
		},function(err) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err);
		});
		var f1 = $bind(this,this.truncateCollection);
		var success1 = function() {
			return f1("cards");
		};
		var this2 = thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(_1) {
			return success1();
		},function(err1) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err1);
		});
		var success2 = function() {
			return thx_promise__$Promise_Promise_$Impl_$.sequence(thx_Iterators.map(new haxe_ds__$StringMap_StringMapIterator(sets,sets.arrayKeys()),$bind(_gthis,_gthis.uploadSet)));
		};
		var this3 = thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this2,function(_2) {
			return success2();
		},function(err2) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err2);
		});
		var f2 = $bind(this,this.truncateCollection);
		var success3 = function() {
			return f2("refs");
		};
		var this4 = thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this3,function(_3) {
			return success3();
		},function(err3) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err3);
		});
		var success4 = $bind(this,this.createCardRefs);
		return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this4,function(_4) {
			return success4();
		},function(err4) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err4);
		});
	}
	,uploadSet: function(cardSet) {
		var _gthis = this;
		var cards = null == cardSet.cards?[]:cardSet.cards;
		var record = { _key : cardSet.code, name : cardSet.name, code : cardSet.code, gathererCode : cardSet.gathererCode, oldCode : cardSet.oldCode, magicCardsInfoCode : cardSet.magicCardsInfoCode, releaseDate : cardSet.releaseDate, border : cardSet.border, type : cardSet.type, block : cardSet.block, onlineOnly : cardSet.onlineOnly, booster : cardSet.booster, cards : cards.map(function(_) {
			return _.id;
		})};
		var this1 = thx_promise_PromiseAPlus.promise(this.db.collection("sets").save(record),{ fileName : "Db.hx", lineNumber : 94, className : "msb.Db", methodName : "uploadSet"});
		var success = function() {
			if(null == cardSet.releaseDate) {
				haxe_Log.trace("" + cardSet.name + " (" + cards.length + " cards)",{ fileName : "Db.hx", lineNumber : 98, className : "msb.Db", methodName : "uploadSet"});
			} else {
				haxe_Log.trace("" + cardSet.name + " - " + cardSet.releaseDate + " (" + cards.length + " cards)",{ fileName : "Db.hx", lineNumber : 100, className : "msb.Db", methodName : "uploadSet"});
			}
			var f = $bind(_gthis,_gthis.uploadSetCard);
			var a2 = cardSet.code;
			return thx_promise__$Promise_Promise_$Impl_$.sequence(cards.map(function(a1) {
				return f(a1,a2);
			}));
		};
		return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(_1) {
			return success();
		},function(err) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err);
		});
	}
	,truncateCollection: function(name) {
		return thx_promise_PromiseAPlusVoid.promise(this.db.collection(name).truncate(),{ fileName : "Db.hx", lineNumber : 106, className : "msb.Db", methodName : "truncateCollection"});
	}
	,createCardRefs: function() {
		return thx_promise_PromiseAPlus.promise(this.db.query("\n      FOR card IN cards\n        COLLECT cleanedName = card.cleanedName INTO g\n        INSERT {\n          _key : cleanedName,\n          name: g[0].card.name,\n          cards: (FOR c in g SORT c.card.multiverseid DESC RETURN c.card._key)\n        } IN refs"),{ fileName : "Db.hx", lineNumber : 109, className : "msb.Db", methodName : "createCardRefs"});
	}
	,uploadSetCard: function(card,code) {
		var name = StringTools.replace(msb_Api.cleanName(card.name)," ","_");
		return thx_promise_PromiseAPlus.promise(this.db.collection("cards").save(thx_Objects.combine(card,{ _key : card.id, cleanedName : name, 'set' : code})),{ fileName : "Db.hx", lineNumber : 122, className : "msb.Db", methodName : "uploadSetCard"});
	}
	,__class__: msb_Db
};
var msb_Queries = function() { };
msb_Queries.__name__ = ["msb","Queries"];
msb_Queries.parse = function(q) {
	return msb_Query.Name(msb_TextSearch.Contains(q));
};
msb_Queries.query = function(cards,q) {
	return cards.filter(msb_Queries.generateFilter(q));
};
msb_Queries.generateFilter = function(q) {
	switch(q[1]) {
	case 0:
		return msb_Queries.queryTextSearch(q[2],function(card) {
			return card.artist;
		});
	case 1:
		return msb_Queries.queryTextSearch(q[2],function(card1) {
			return card1.normalizedFlavor;
		});
	case 2:
		return msb_Queries.queryTextSearch(q[2],function(card2) {
			return card2.normalizedName;
		});
	case 3:
		return msb_Queries.queryTextSearch(q[2],function(card3) {
			return card3.normalizedText;
		});
	case 4:
		return msb_Queries.queryNumberSearch(q[2],function(card4) {
			return card4.cmc;
		});
	case 5:
		var filters = q[2].map(msb_Queries.generateFilter);
		return function(card5) {
			var _g = 0;
			while(_g < filters.length) {
				var filter = filters[_g];
				++_g;
				if(!filter(card5)) {
					return false;
				}
			}
			return true;
		};
	case 6:
		var filters1 = q[2].map(msb_Queries.generateFilter);
		return function(card6) {
			var _g1 = 0;
			while(_g1 < filters1.length) {
				var filter1 = filters1[_g1];
				++_g1;
				if(filter1(card6)) {
					return true;
				}
			}
			return false;
		};
	case 7:
		var filter2 = msb_Queries.generateFilter(q[2]);
		return function(card7) {
			return !filter2(card7);
		};
	}
};
msb_Queries.queryNumberSearch = function(search,extractor) {
	switch(search[1]) {
	case 0:
		var value = search[2];
		return function(card) {
			return extractor(card) > value;
		};
	case 1:
		var value1 = search[2];
		return function(card1) {
			return extractor(card1) >= value1;
		};
	case 2:
		var value2 = search[2];
		return function(card2) {
			return extractor(card2) < value2;
		};
	case 3:
		var value3 = search[2];
		return function(card3) {
			return extractor(card3) <= value3;
		};
	case 4:
		var value4 = search[2];
		return function(card4) {
			return extractor(card4) == value4;
		};
	case 5:
		var maxInclusive = search[3];
		var minInclusive = search[2];
		return function(card5) {
			var value5 = extractor(card5);
			if(value5 >= minInclusive) {
				return value5 <= maxInclusive;
			} else {
				return false;
			}
		};
	}
};
msb_Queries.queryTextSearch = function(search,extractor) {
	switch(search[1]) {
	case 0:
		var text = msb_Api.cleanName(search[2]);
		return function(card) {
			return extractor(card) == text;
		};
	case 1:
		var text1 = msb_Api.cleanName(search[2]);
		return function(card1) {
			return extractor(card1).indexOf(text1) >= 0;
		};
	case 2:
		var text2 = msb_Api.cleanName(search[2]);
		return function(card2) {
			return StringTools.startsWith(extractor(card2),text2);
		};
	case 3:
		var text3 = msb_Api.cleanName(search[2]);
		return function(card3) {
			return StringTools.endsWith(extractor(card3),text3);
		};
	}
};
var msb_Query = { __ename__ : ["msb","Query"], __constructs__ : ["Artist","Flavor","Name","Text","CMC","And","Or","Negate"] };
msb_Query.Artist = function(search) { var $x = ["Artist",0,search]; $x.__enum__ = msb_Query; return $x; };
msb_Query.Flavor = function(search) { var $x = ["Flavor",1,search]; $x.__enum__ = msb_Query; return $x; };
msb_Query.Name = function(search) { var $x = ["Name",2,search]; $x.__enum__ = msb_Query; return $x; };
msb_Query.Text = function(search) { var $x = ["Text",3,search]; $x.__enum__ = msb_Query; return $x; };
msb_Query.CMC = function(search) { var $x = ["CMC",4,search]; $x.__enum__ = msb_Query; return $x; };
msb_Query.And = function(qs) { var $x = ["And",5,qs]; $x.__enum__ = msb_Query; return $x; };
msb_Query.Or = function(qs) { var $x = ["Or",6,qs]; $x.__enum__ = msb_Query; return $x; };
msb_Query.Negate = function(q) { var $x = ["Negate",7,q]; $x.__enum__ = msb_Query; return $x; };
var msb_TextSearch = { __ename__ : ["msb","TextSearch"], __constructs__ : ["Match","Contains","StartWith","EndWith"] };
msb_TextSearch.Match = function(text) { var $x = ["Match",0,text]; $x.__enum__ = msb_TextSearch; return $x; };
msb_TextSearch.Contains = function(text) { var $x = ["Contains",1,text]; $x.__enum__ = msb_TextSearch; return $x; };
msb_TextSearch.StartWith = function(text) { var $x = ["StartWith",2,text]; $x.__enum__ = msb_TextSearch; return $x; };
msb_TextSearch.EndWith = function(text) { var $x = ["EndWith",3,text]; $x.__enum__ = msb_TextSearch; return $x; };
var msb_NumberSearch = { __ename__ : ["msb","NumberSearch"], __constructs__ : ["GT","GTE","LT","LTE","Equals","Between"] };
msb_NumberSearch.GT = function(value) { var $x = ["GT",0,value]; $x.__enum__ = msb_NumberSearch; return $x; };
msb_NumberSearch.GTE = function(value) { var $x = ["GTE",1,value]; $x.__enum__ = msb_NumberSearch; return $x; };
msb_NumberSearch.LT = function(value) { var $x = ["LT",2,value]; $x.__enum__ = msb_NumberSearch; return $x; };
msb_NumberSearch.LTE = function(value) { var $x = ["LTE",3,value]; $x.__enum__ = msb_NumberSearch; return $x; };
msb_NumberSearch.Equals = function(value) { var $x = ["Equals",4,value]; $x.__enum__ = msb_NumberSearch; return $x; };
msb_NumberSearch.Between = function(minInclusive,maxInclusive) { var $x = ["Between",5,minInclusive,maxInclusive]; $x.__enum__ = msb_NumberSearch; return $x; };
var npm_arango_Database = require("arangojs").Database;
var thx_Arrays = function() { };
thx_Arrays.__name__ = ["thx","Arrays"];
thx_Arrays.append = function(array,element) {
	array.push(element);
	return array;
};
thx_Arrays.appendIf = function(array,cond,element) {
	if(cond) {
		array.push(element);
	}
	return array;
};
thx_Arrays.applyIndexes = function(array,indexes,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = false;
	}
	if(indexes.length != array.length) {
		throw new thx_Error("`Arrays.applyIndexes` can only be applied to two arrays with the same length",null,{ fileName : "Arrays.hx", lineNumber : 53, className : "thx.Arrays", methodName : "applyIndexes"});
	}
	var result = [];
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var index = indexes[i];
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			result[index] = array[i];
		}
	} else {
		var _g11 = 0;
		var _g2 = array.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			result[indexes[i1]] = array[i1];
		}
	}
	return result;
};
thx_Arrays.monoid = function() {
	return { zero : [], append : function(a,b) {
		return a.concat(b);
	}};
};
thx_Arrays.after = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) + 1);
};
thx_Arrays.atIndex = function(array,i) {
	if(i >= 0 && i < array.length) {
		return haxe_ds_Option.Some(array[i]);
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Arrays.getOption = function(array,i) {
	var value = array[i];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.each = function(arr,effect) {
	var tmp = HxOverrides.iter(arr);
	while(tmp.hasNext()) effect(tmp.next());
};
thx_Arrays.eachi = function(arr,effect) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		effect(arr[i],i);
	}
};
thx_Arrays.all = function(arr,predicate) {
	var tmp = HxOverrides.iter(arr);
	while(tmp.hasNext()) if(!predicate(tmp.next())) {
		return false;
	}
	return true;
};
thx_Arrays.any = function(arr,predicate) {
	var tmp = HxOverrides.iter(arr);
	while(tmp.hasNext()) if(predicate(tmp.next())) {
		return true;
	}
	return false;
};
thx_Arrays.at = function(arr,indexes) {
	return indexes.map(function(i) {
		return arr[i];
	});
};
thx_Arrays.before = function(array,element) {
	return array.slice(0,thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.commonsFromStart = function(self,other,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var count = 0;
	var _g = 0;
	var _g1 = thx_Arrays.zip(self,other);
	while(_g < _g1.length) {
		var pair = _g1[_g];
		++_g;
		if(equality(pair._0,pair._1)) {
			++count;
		} else {
			break;
		}
	}
	return self.slice(0,count);
};
thx_Arrays.compact = function(arr) {
	return arr.filter(function(v) {
		return null != v;
	});
};
thx_Arrays.compare = function(a,b) {
	var v = a.length - b.length;
	if(v != 0) {
		return v;
	}
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		v = thx_Dynamics.compare(a[i],b[i]);
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Arrays.contains = function(array,element,eq) {
	if(null == eq) {
		return thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) >= 0;
	} else {
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) if(eq(array[_g1++],element)) {
			return true;
		}
		return false;
	}
};
thx_Arrays.containsAll = function(array,elements,eq) {
	var tmp = $iterator(elements)();
	while(tmp.hasNext()) if(!thx_Arrays.contains(array,tmp.next(),eq)) {
		return false;
	}
	return true;
};
thx_Arrays.containsAny = function(array,elements,eq) {
	var tmp = $iterator(elements)();
	while(tmp.hasNext()) if(thx_Arrays.contains(array,tmp.next(),eq)) {
		return true;
	}
	return false;
};
thx_Arrays.create = function(length,fillWith) {
	var arr = length > 0?new Array(length):[];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		arr[i] = fillWith;
	}
	return arr;
};
thx_Arrays.cross = function(a,b) {
	var r = [];
	var tmp = HxOverrides.iter(a);
	while(tmp.hasNext()) {
		var va = tmp.next();
		var tmp1 = HxOverrides.iter(b);
		while(tmp1.hasNext()) r.push([va,tmp1.next()]);
	}
	return r;
};
thx_Arrays.crossMulti = function(array) {
	var acopy = array.slice();
	var result = acopy.shift().map(function(v) {
		return [v];
	});
	while(acopy.length > 0) {
		var array1 = acopy.shift();
		var tresult = result;
		result = [];
		var tmp = HxOverrides.iter(array1);
		while(tmp.hasNext()) {
			var v1 = tmp.next();
			var _g = 0;
			while(_g < tresult.length) {
				var ar = tresult[_g];
				++_g;
				var t = ar.slice();
				t.push(v1);
				result.push(t);
			}
		}
	}
	return result;
};
thx_Arrays.distinct = function(array,predicate) {
	var result = [];
	if(array.length <= 1) {
		return array.slice();
	}
	if(null == predicate) {
		predicate = thx_Functions.equality;
	}
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) {
		var v = [tmp.next()];
		if(!thx_Arrays.any(result,(function(v1) {
			return function(r) {
				return predicate(r,v1[0]);
			};
		})(v))) {
			result.push(v[0]);
		}
	}
	return result;
};
thx_Arrays.eachPair = function(array,callback) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g3 = i;
		var _g2 = array.length;
		while(_g3 < _g2) if(!callback(array[i],array[_g3++])) {
			return;
		}
	}
};
thx_Arrays.equals = function(a,b,equality) {
	if(a == null || b == null || a.length != b.length) {
		return false;
	}
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(!equality(a[i],b[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.extract = function(a,predicate) {
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(a[i])) {
			return a.splice(i,1)[0];
		}
	}
	return null;
};
thx_Arrays.filterNull = function(a) {
	var arr = [];
	var tmp = HxOverrides.iter(a);
	while(tmp.hasNext()) {
		var v = tmp.next();
		if(null != v) {
			arr.push(v);
		}
	}
	return arr;
};
thx_Arrays.filterOption = function(a) {
	return thx_Arrays.reduce(a,function(acc,maybeV) {
		switch(maybeV[1]) {
		case 0:
			acc.push(maybeV[2]);
			break;
		case 1:
			break;
		}
		return acc;
	},[]);
};
thx_Arrays.find = function(array,predicate) {
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) {
		var element = tmp.next();
		if(predicate(element)) {
			return element;
		}
	}
	return null;
};
thx_Arrays.findi = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i],i)) {
			return array[i];
		}
	}
	return null;
};
thx_Arrays.findiOption = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i],i)) {
			return haxe_ds_Option.Some(array[i]);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findOption = function(array,predicate) {
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) {
		var element = tmp.next();
		if(predicate(element)) {
			return haxe_ds_Option.Some(element);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findIndex = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i])) {
			return i;
		}
	}
	return -1;
};
thx_Arrays.findLast = function(array,predicate) {
	var len = array.length;
	var j;
	var _g1 = 0;
	while(_g1 < len) {
		j = len - _g1++ - 1;
		if(predicate(array[j])) {
			return array[j];
		}
	}
	return null;
};
thx_Arrays.first = function(array) {
	return array[0];
};
thx_Arrays.flatMap = function(array,callback) {
	var array1 = array.map(callback);
	return Array.prototype.concat.apply([],array1);
};
thx_Arrays.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx_Arrays.from = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.groupByAppend = function(arr,resolver,map) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var v = arr[_g1++];
		var key = resolver(v);
		var acc = map.get(key);
		if(null == acc) {
			map.set(key,[v]);
		} else {
			acc.push(v);
		}
	}
	return map;
};
thx_Arrays.spanByIndex = function(arr,spanKey) {
	var acc = [];
	var cur = null;
	var j = -1;
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var k = spanKey(i);
		if(k == null) {
			throw new thx_Error("spanKey function returned null for index " + i,null,{ fileName : "Arrays.hx", lineNumber : 568, className : "thx.Arrays", methodName : "spanByIndex"});
		}
		if(cur == k) {
			acc[j].push(arr[i]);
		} else {
			cur = k;
			++j;
			acc.push([arr[i]]);
		}
	}
	return acc;
};
thx_Arrays.hasElements = function(array) {
	if(null != array) {
		return array.length > 0;
	} else {
		return false;
	}
};
thx_Arrays.head = function(array) {
	return array[0];
};
thx_Arrays.ifEmpty = function(array,alt) {
	if(null != array && 0 != array.length) {
		return array;
	} else {
		return alt;
	}
};
thx_Arrays.initial = function(array) {
	return array.slice(0,array.length - 1);
};
thx_Arrays.intersperse = function(array,value) {
	var tmp = thx_Arrays.create(array.length * 2 - 1,value);
	return thx_Arrays.reducei(array,function(acc,v,i) {
		acc[i * 2] = v;
		return acc;
	},tmp);
};
thx_Arrays.isEmpty = function(array) {
	if(null != array) {
		return array.length == 0;
	} else {
		return true;
	}
};
thx_Arrays.last = function(array) {
	return array[array.length - 1];
};
thx_Arrays.mapi = function(array,callback) {
	return array.map(callback);
};
thx_Arrays.mapRight = function(array,callback) {
	var i = array.length;
	var result = [];
	while(--i >= 0) result.push(callback(array[i]));
	return result;
};
thx_Arrays.order = function(array,sort) {
	var n = array.slice();
	n.sort(sort);
	return n;
};
thx_Arrays.pull = function(array,toRemove,equality) {
	var tmp = HxOverrides.iter(toRemove);
	while(tmp.hasNext()) thx_Arrays.removeAll(array,tmp.next(),equality);
};
thx_Arrays.pushIf = function(array,condition,value) {
	if(condition) {
		array.push(value);
	}
	return array;
};
thx_Arrays.rank = function(array,compare,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = true;
	}
	var arr = array.map(function(v,i) {
		return { _0 : v, _1 : i};
	});
	arr.sort(function(a,b) {
		return compare(a._0,b._0);
	});
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		return thx_Arrays.reducei(arr,function(acc,x,i1) {
			var index = i1 > 0 && compare(arr[i1 - 1]._0,x._0) == 0?acc[arr[i1 - 1]._1]:i1;
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			acc[x._1] = index;
			return acc;
		},[]);
	} else {
		return thx_Arrays.reducei(arr,function(acc1,x1,i2) {
			acc1[x1._1] = i2 > 0 && compare(arr[i2 - 1]._0,x1._0) == 0?acc1[arr[i2 - 1]._1]:i2;
			return acc1;
		},[]);
	}
};
thx_Arrays.reduce = function(array,f,initial) {
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) initial = f(initial,tmp.next());
	return initial;
};
thx_Arrays.foldLeft = function(array,init,f) {
	return thx_Arrays.reduce(array,f,init);
};
thx_Arrays.foldLeftEither = function(array,init,f) {
	var acc = thx_Either.Right(init);
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) {
		var a = tmp.next();
		switch(acc[1]) {
		case 0:
			return acc;
		case 1:
			acc = f(acc[2],a);
			break;
		}
	}
	return acc;
};
thx_Arrays.foldMap = function(array,f,m) {
	var array1 = array.map(f);
	var init = thx__$Monoid_Monoid_$Impl_$.get_zero(m);
	var _e = m;
	return thx_Arrays.reduce(array1,function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	},init);
};
thx_Arrays.fold = function(array,m) {
	return thx_Arrays.foldMap(array,thx_Functions.identity,m);
};
thx_Arrays.nel = function(array) {
	return thx__$Nel_Nel_$Impl_$.fromArray(array);
};
thx_Arrays.foldS = function(array,s) {
	return thx_Options.map(thx_Arrays.nel(array),function(x) {
		return thx__$Nel_Nel_$Impl_$.fold(x,s);
	});
};
thx_Arrays.resize = function(array,length,fill) {
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_Arrays.reducei = function(array,f,initial) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		initial = f(initial,array[i],i);
	}
	return initial;
};
thx_Arrays.reduceRight = function(array,f,initial) {
	var i = array.length;
	while(--i >= 0) initial = f(initial,array[i]);
	return initial;
};
thx_Arrays.removeAll = function(array,element,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var i = array.length;
	while(--i >= 0) if(equality(array[i],element)) {
		array.splice(i,1);
	}
};
thx_Arrays.rest = function(array) {
	return array.slice(1);
};
thx_Arrays.reversed = function(array) {
	var result = array.slice();
	result.reverse();
	return result;
};
thx_Arrays.sample = function(array,n) {
	var b = array.length;
	if(n < b) {
		n = n;
	} else {
		n = b;
	}
	var copy = array.slice();
	var result = [];
	var _g1 = 0;
	var _g = n;
	while(_g1 < _g) {
		++_g1;
		result.push(copy.splice(Std.random(copy.length),1)[0]);
	}
	return result;
};
thx_Arrays.sampleOne = function(array) {
	return array[Std.random(array.length)];
};
thx_Arrays.string = function(arr) {
	return "[" + arr.map(thx_Dynamics.string).join(", ") + "]";
};
thx_Arrays.shuffle = function(a) {
	var t = thx_Ints.range(a.length);
	var array = [];
	while(t.length > 0) {
		var pos = Std.random(t.length);
		var index = t[pos];
		t.splice(pos,1);
		array.push(a[index]);
	}
	return array;
};
thx_Arrays.split = function(array,parts) {
	return thx_Arrays.splitBy(array,Math.ceil(array.length / parts));
};
thx_Arrays.splitBy = function(array,len) {
	var res = [];
	var b = array.length;
	if(len < b) {
		len = len;
	} else {
		len = b;
	}
	var _g1 = 0;
	var _g = Math.ceil(array.length / len);
	while(_g1 < _g) {
		var p = _g1++;
		res.push(array.slice(p * len,(p + 1) * len));
	}
	return res;
};
thx_Arrays.splitByPad = function(arr,len,pad) {
	var res = thx_Arrays.splitBy(arr,len);
	while(res[res.length - 1].length < len) res[res.length - 1].push(pad);
	return res;
};
thx_Arrays.tail = function(array) {
	return array.slice(1);
};
thx_Arrays.take = function(arr,n) {
	return arr.slice(0,n);
};
thx_Arrays.takeLast = function(arr,n) {
	return arr.slice(arr.length - n);
};
thx_Arrays.traverseOption = function(arr,f) {
	var tmp = haxe_ds_Option.Some([]);
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Options.ap(f(t),thx_Options.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},tmp);
};
thx_Arrays.traverseValidation = function(arr,f,s) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t),thx__$Validation_Validation_$Impl_$.ap(acc,thx_Either.Right(function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),function(e1,e2) {
			throw new js__$Boot_HaxeError("Unreachable");
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.traverseValidationIndexed = function(arr,f,s) {
	return thx_Arrays.reducei(arr,function(acc,t,i) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t,i),thx__$Validation_Validation_$Impl_$.ap(acc,thx_Either.Right(function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),function(e1,e2) {
			throw new js__$Boot_HaxeError("Unreachable");
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.rotate = function(arr) {
	var result = [];
	var _g1 = 0;
	var _g = arr[0].length;
	while(_g1 < _g) {
		var i = _g1++;
		var row = [];
		result.push(row);
		var _g3 = 0;
		var _g2 = arr.length;
		while(_g3 < _g2) row.push(arr[_g3++][i]);
	}
	return result;
};
thx_Arrays.sliding2 = function(arr,f) {
	if(arr.length < 2) {
		return [];
	} else {
		var result = [];
		var _g1 = 0;
		var _g = arr.length - 1;
		while(_g1 < _g) {
			var i = _g1++;
			result.push(f(arr[i],arr[i + 1]));
		}
		return result;
	}
};
thx_Arrays.unzip = function(array) {
	var a1 = [];
	var a2 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	return { _0 : a1, _1 : a2};
};
thx_Arrays.unzip3 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	return { _0 : a1, _1 : a2, _2 : a3};
};
thx_Arrays.unzip4 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	return { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
};
thx_Arrays.unzip5 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	return { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
};
thx_Arrays.zip = function(array1,array2) {
	var a = array1.length;
	var b = array2.length;
	var length = a < b?a:b;
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		array.push({ _0 : array1[i], _1 : array2[i]});
	}
	return array;
};
thx_Arrays.zip3 = function(array1,array2,array3) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length]);
	var array = [];
	var _g1 = 0;
	while(_g1 < length) {
		var i = _g1++;
		array.push({ _0 : array1[i], _1 : array2[i], _2 : array3[i]});
	}
	return array;
};
thx_Arrays.zip4 = function(array1,array2,array3,array4) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length]);
	var array = [];
	var _g1 = 0;
	while(_g1 < length) {
		var i = _g1++;
		array.push({ _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i]});
	}
	return array;
};
thx_Arrays.zip5 = function(array1,array2,array3,array4,array5) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length,array5.length]);
	var array = [];
	var _g1 = 0;
	while(_g1 < length) {
		var i = _g1++;
		array.push({ _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i], _4 : array5[i]});
	}
	return array;
};
thx_Arrays.zipAp = function(ax,fx) {
	var result = [];
	var _g1 = 0;
	var a = ax.length;
	var b = fx.length;
	var _g = a < b?a:b;
	while(_g1 < _g) {
		var i = _g1++;
		result.push(fx[i](ax[i]));
	}
	return result;
};
thx_Arrays.zip2Ap = function(f,ax,bx) {
	return thx_Arrays.zipAp(bx,ax.map(thx_Functions2.curry(f)));
};
thx_Arrays.zip3Ap = function(f,ax,bx,cx) {
	var f1 = f;
	return thx_Arrays.zipAp(cx,thx_Arrays.zip2Ap(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	},ax,bx));
};
thx_Arrays.zip4Ap = function(f,ax,bx,cx,dx) {
	var f1 = f;
	return thx_Arrays.zipAp(dx,thx_Arrays.zip3Ap(function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	},ax,bx,cx));
};
thx_Arrays.zip5Ap = function(f,ax,bx,cx,dx,ex) {
	var f1 = f;
	return thx_Arrays.zipAp(ex,thx_Arrays.zip4Ap(function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	},ax,bx,cx,dx));
};
thx_Arrays.withPrepend = function(arr,el) {
	return [el].concat(arr);
};
thx_Arrays["with"] = function(arr,el) {
	return arr.concat([el]);
};
thx_Arrays.withSlice = function(arr,other,start,length) {
	if(length == null) {
		length = 0;
	}
	return arr.slice(0,start).concat(other).concat(arr.slice(start + length));
};
thx_Arrays.withInsert = function(arr,el,pos) {
	return arr.slice(0,pos).concat([el]).concat(arr.slice(pos));
};
thx_Arrays.maxBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.max(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.minBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.min(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.toMap = function(arr,keyOrder) {
	var m = thx_fp_MapImpl.Tip;
	var collisions = [];
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var tuple = arr[_g1++];
		if(thx_Options.isNone(thx_fp__$Map_Map_$Impl_$.lookup(m,tuple._0,keyOrder))) {
			m = thx_fp__$Map_Map_$Impl_$.insert(m,tuple._0,tuple._1,keyOrder);
		} else {
			collisions.push(tuple._0);
		}
	}
	return thx_Options.toFailure(thx__$Nel_Nel_$Impl_$.fromArray(collisions),m);
};
var thx_ArrayFloats = function() { };
thx_ArrayFloats.__name__ = ["thx","ArrayFloats"];
thx_ArrayFloats.average = function(arr) {
	return thx_ArrayFloats.sum(arr) / arr.length;
};
thx_ArrayFloats.compact = function(arr) {
	return arr.filter(function(v) {
		if(null != v) {
			return isFinite(v);
		} else {
			return false;
		}
	});
};
thx_ArrayFloats.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Floats.order));
};
thx_ArrayFloats.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Floats.order));
};
thx_ArrayFloats.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayFloats.standardDeviation = function(array) {
	if(array.length < 2) {
		return 0.0;
	}
	var mean = thx_ArrayFloats.average(array);
	return Math.sqrt(thx_Arrays.reduce(array,function(acc,val) {
		return acc + Math.pow(val - mean,2);
	},0) / (array.length - 1));
};
thx_ArrayFloats.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0.0);
};
var thx_ArrayInts = function() { };
thx_ArrayInts.__name__ = ["thx","ArrayInts"];
thx_ArrayInts.average = function(arr) {
	return thx_ArrayInts.sum(arr) / arr.length;
};
thx_ArrayInts.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Ints.order));
};
thx_ArrayInts.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Ints.order));
};
thx_ArrayInts.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayInts.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0);
};
var thx_ArrayStrings = function() { };
thx_ArrayStrings.__name__ = ["thx","ArrayStrings"];
thx_ArrayStrings.compact = function(arr) {
	return arr.filter(function(v) {
		return !thx_Strings.isEmpty(v);
	});
};
thx_ArrayStrings.max = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.maxBy(arr,thx_Strings.order),null);
};
thx_ArrayStrings.min = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.minBy(arr,thx_Strings.order),null);
};
var thx_Bools = function() { };
thx_Bools.__name__ = ["thx","Bools"];
thx_Bools.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a) {
		return -1;
	} else {
		return 1;
	}
};
thx_Bools.toInt = function(v) {
	if(v) {
		return 1;
	} else {
		return 0;
	}
};
thx_Bools.canParse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return true;
	} else {
		switch(_g) {
		case "0":case "1":case "false":case "off":case "on":case "true":
			return true;
		default:
			return false;
		}
	}
};
thx_Bools.parse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return false;
	} else {
		switch(_g) {
		case "1":case "on":case "true":
			return true;
		case "0":case "false":case "off":
			return false;
		default:
			throw new js__$Boot_HaxeError("unable to parse \"" + _g + "\"");
		}
	}
};
thx_Bools.xor = function(a,b) {
	return a != b;
};
thx_Bools.option = function(cond,a) {
	if(cond) {
		return haxe_ds_Option.Some(a);
	} else {
		return haxe_ds_Option.None;
	}
};
var thx_Dates = function() { };
thx_Dates.__name__ = ["thx","Dates"];
thx_Dates.compare = function(a,b) {
	var a1 = a.getTime();
	var b1 = b.getTime();
	if(a1 < b1) {
		return -1;
	} else if(a1 > b1) {
		return 1;
	} else {
		return 0;
	}
};
thx_Dates.create = function(year,month,day,hour,minute,second) {
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	if(day == null) {
		day = 1;
	}
	if(month == null) {
		month = 0;
	}
	minute += Math.floor(second / 60);
	second %= 60;
	if(second < 0) {
		second += 60;
	}
	hour += Math.floor(minute / 60);
	minute %= 60;
	if(minute < 0) {
		minute += 60;
	}
	day += Math.floor(hour / 24);
	hour %= 24;
	if(hour < 0) {
		hour += 24;
	}
	if(day == 0) {
		--month;
		if(month < 0) {
			month = 11;
			--year;
		}
		day = thx_Dates.daysInMonth(year,month);
	}
	year += Math.floor(month / 12);
	month %= 12;
	if(month < 0) {
		month += 12;
	}
	var days = thx_Dates.daysInMonth(year,month);
	while(day > days) {
		if(day > days) {
			day -= days;
			++month;
		}
		if(month > 11) {
			month -= 12;
			++year;
		}
		days = thx_Dates.daysInMonth(year,month);
	}
	return new Date(year,month,day,hour,minute,second);
};
thx_Dates.daysRange = function(start,end) {
	if(thx_Dates.compare(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx_Dates.sameDay(start,end)) {
		days.push(start);
		start = thx_Dates.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx_Dates.equals = function(self,other) {
	return self.getTime() == other.getTime();
};
thx_Dates.nearEquals = function(self,other,units,period) {
	if(units == null) {
		units = 1;
	}
	if(null == period) {
		period = thx_TimePeriod.Second;
	}
	if(units < 0) {
		units = -units;
	}
	var min = thx_Dates.jump(self,period,-units);
	var max = thx_Dates.jump(self,period,units);
	if(thx_Dates.compare(min,other) <= 0) {
		return thx_Dates.compare(max,other) >= 0;
	} else {
		return false;
	}
};
thx_Dates.greater = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.more = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.less = function(self,other) {
	return thx_Dates.compare(self,other) < 0;
};
thx_Dates.greaterEquals = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.moreEqual = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.lessEquals = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.lessEqual = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.isLeapYear = function(year) {
	if(year % 4 != 0) {
		return false;
	}
	if(year % 100 == 0) {
		return year % 400 == 0;
	}
	return true;
};
thx_Dates.isInLeapYear = function(d) {
	return thx_Dates.isLeapYear(d.getFullYear());
};
thx_Dates.daysInMonth = function(year,month) {
	switch(month) {
	case 1:
		if(thx_Dates.isLeapYear(year)) {
			return 29;
		} else {
			return 28;
		}
		break;
	case 0:case 2:case 4:case 6:case 7:case 9:case 11:
		return 31;
	case 3:case 5:case 8:case 10:
		return 30;
	default:
		throw new js__$Boot_HaxeError("Invalid month \"" + month + "\".  Month should be a number, Jan=0, Dec=11");
	}
};
thx_Dates.numDaysInMonth = function(month,year) {
	return thx_Dates.daysInMonth(year,month);
};
thx_Dates.daysInThisMonth = function(d) {
	return thx_Dates.daysInMonth(d.getFullYear(),d.getMonth());
};
thx_Dates.numDaysInThisMonth = function(d) {
	return thx_Dates.daysInThisMonth(d);
};
thx_Dates.sameYear = function(self,other) {
	return self.getFullYear() == other.getFullYear();
};
thx_Dates.sameMonth = function(self,other) {
	if(thx_Dates.sameYear(self,other)) {
		return self.getMonth() == other.getMonth();
	} else {
		return false;
	}
};
thx_Dates.sameDay = function(self,other) {
	if(thx_Dates.sameMonth(self,other)) {
		return self.getDate() == other.getDate();
	} else {
		return false;
	}
};
thx_Dates.sameHour = function(self,other) {
	if(thx_Dates.sameDay(self,other)) {
		return self.getHours() == other.getHours();
	} else {
		return false;
	}
};
thx_Dates.sameMinute = function(self,other) {
	if(thx_Dates.sameHour(self,other)) {
		return self.getMinutes() == other.getMinutes();
	} else {
		return false;
	}
};
thx_Dates.snapNext = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapNext(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.snapPrev = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapPrev(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.snapTo = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapTo(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.jump = function(date,period,amount) {
	var sec = date.getSeconds();
	var min = date.getMinutes();
	var hour = date.getHours();
	var day = date.getDate();
	var month = date.getMonth();
	var year = date.getFullYear();
	switch(period[1]) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hour += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		month += amount;
		break;
	case 6:
		year += amount;
		break;
	}
	return thx_Dates.create(year,month,day,hour,min,sec);
};
thx_Dates.max = function(self,other) {
	if(self.getTime() > other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.min = function(self,other) {
	if(self.getTime() < other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.snapToWeekDay = function(date,day,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = date.getDay();
	var s = day;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapNextWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s < d) {
		s += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapPrevWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s > d) {
		s -= 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.prevYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,-1);
};
thx_Dates.nextYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,1);
};
thx_Dates.prevMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,-1);
};
thx_Dates.nextMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,1);
};
thx_Dates.prevWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,-1);
};
thx_Dates.nextWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,1);
};
thx_Dates.prevDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,-1);
};
thx_Dates.nextDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,1);
};
thx_Dates.prevHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,-1);
};
thx_Dates.nextHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,1);
};
thx_Dates.prevMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,-1);
};
thx_Dates.nextMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,1);
};
thx_Dates.prevSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,-1);
};
thx_Dates.nextSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,1);
};
thx_Dates.withYear = function(date,year) {
	return thx_Dates.create(year,date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withMonth = function(date,month) {
	return thx_Dates.create(date.getFullYear(),month,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withDay = function(date,day) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),day,date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withHour = function(date,hour) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),hour,date.getMinutes(),date.getSeconds());
};
thx_Dates.withMinute = function(date,minute) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),minute,date.getSeconds());
};
thx_Dates.withSecond = function(date,second) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),second);
};
thx_Dates.parseDate = function(s) {
	try {
		return thx_Either.Right(HxOverrides.strDate(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return thx_Either.Left("" + s + " could not be parsed to a valid Date value.");
	}
};
var thx_Dynamics = function() { };
thx_Dynamics.__name__ = ["thx","Dynamics"];
thx_Dynamics.equals = function(a,b) {
	if(!thx_Types.sameType(a,b)) {
		return false;
	}
	if(a == b) {
		return true;
	}
	var _g = Type["typeof"](a);
	switch(_g[1]) {
	case 0:case 1:case 2:case 3:
		return false;
	case 4:
		var fa = Reflect.fields(a);
		var fb = Reflect.fields(b);
		var _g1 = 0;
		while(_g1 < fa.length) {
			var field = fa[_g1];
			++_g1;
			HxOverrides.remove(fb,field);
			if(!Object.prototype.hasOwnProperty.call(b,field)) {
				return false;
			}
			var va = Reflect.field(a,field);
			if(Reflect.isFunction(va)) {
				continue;
			}
			var vb = Reflect.field(b,field);
			if(!thx_Dynamics.equals(va,vb)) {
				return false;
			}
		}
		if(fb.length > 0) {
			return false;
		}
		var t = false;
		var tmp;
		t = thx_Iterators.isIterator(a);
		if(!t) {
			tmp = thx_Iterables.isIterable(a);
		} else {
			tmp = true;
		}
		if(tmp) {
			if(t && !thx_Iterators.isIterator(b)) {
				return false;
			}
			if(!t && !thx_Iterables.isIterable(b)) {
				return false;
			}
			var aa = t?thx_Iterators.toArray(a):thx_Iterators.toArray($iterator(a)());
			var ab = t?thx_Iterators.toArray(b):thx_Iterators.toArray($iterator(b)());
			if(aa.length != ab.length) {
				return false;
			}
			var _g11 = 0;
			var _g2 = aa.length;
			while(_g11 < _g2) {
				var i = _g11++;
				if(!thx_Dynamics.equals(aa[i],ab[i])) {
					return false;
				}
			}
			return true;
		}
		return true;
	case 5:
		return Reflect.compareMethods(a,b);
	case 6:
		var c = _g[2];
		var ca = Type.getClassName(c);
		var cb = Type.getClassName(b == null?null:js_Boot.getClass(b));
		if(ca != cb) {
			return false;
		}
		if(typeof(a) == "string") {
			return false;
		}
		if((a instanceof Array) && a.__enum__ == null) {
			var aa1 = a;
			var ab1 = b;
			if(aa1.length != ab1.length) {
				return false;
			}
			var _g12 = 0;
			var _g3 = aa1.length;
			while(_g12 < _g3) {
				var i1 = _g12++;
				if(!thx_Dynamics.equals(aa1[i1],ab1[i1])) {
					return false;
				}
			}
			return true;
		}
		if(js_Boot.__instanceof(a,Date)) {
			return a.getTime() == b.getTime();
		}
		if(js_Boot.__instanceof(a,haxe_IMap)) {
			var ha = a;
			var hb = b;
			var ka = thx_Iterators.toArray(ha.keys());
			var kb = thx_Iterators.toArray(hb.keys());
			if(ka.length != kb.length) {
				return false;
			}
			var _g4 = 0;
			while(_g4 < ka.length) {
				var key = ka[_g4];
				++_g4;
				if(!hb.exists(key) || !thx_Dynamics.equals(ha.get(key),hb.get(key))) {
					return false;
				}
			}
			return true;
		}
		var t1 = false;
		var tmp1;
		t1 = thx_Iterators.isIterator(a);
		if(!t1) {
			tmp1 = thx_Iterables.isIterable(a);
		} else {
			tmp1 = true;
		}
		if(tmp1) {
			var va1 = t1?thx_Iterators.toArray(a):thx_Iterators.toArray($iterator(a)());
			var vb1 = t1?thx_Iterators.toArray(b):thx_Iterators.toArray($iterator(b)());
			if(va1.length != vb1.length) {
				return false;
			}
			var _g13 = 0;
			var _g5 = va1.length;
			while(_g13 < _g5) {
				var i2 = _g13++;
				if(!thx_Dynamics.equals(va1[i2],vb1[i2])) {
					return false;
				}
			}
			return true;
		}
		var f = null;
		var tmp2;
		if(Object.prototype.hasOwnProperty.call(a,"equals")) {
			f = Reflect.field(a,"equals");
			tmp2 = Reflect.isFunction(f);
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			return f.apply(a,[b]);
		}
		var fields = Type.getInstanceFields(a == null?null:js_Boot.getClass(a));
		var _g6 = 0;
		while(_g6 < fields.length) {
			var field1 = fields[_g6];
			++_g6;
			var va2 = Reflect.field(a,field1);
			if(Reflect.isFunction(va2)) {
				continue;
			}
			var vb2 = Reflect.field(b,field1);
			if(!thx_Dynamics.equals(va2,vb2)) {
				return false;
			}
		}
		return true;
	case 7:
		var e = _g[2];
		var ea = Type.getEnumName(e);
		var teb = Type.getEnum(b);
		var eb = Type.getEnumName(teb);
		if(ea != eb) {
			return false;
		}
		if(a[1] != b[1]) {
			return false;
		}
		var pa = a.slice(2);
		var pb = b.slice(2);
		var _g14 = 0;
		var _g7 = pa.length;
		while(_g14 < _g7) {
			var i3 = _g14++;
			if(!thx_Dynamics.equals(pa[i3],pb[i3])) {
				return false;
			}
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
		break;
	}
};
thx_Dynamics.clone = function(v,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 0:
		return null;
	case 4:
		return thx_Objects.copyTo(v,{ });
	case 6:
		var c = _g[2];
		switch(Type.getClassName(c)) {
		case "Array":
			return v.map(function(v1) {
				return thx_Dynamics.clone(v1,cloneInstances);
			});
		case "Date":case "String":
			return v;
		default:
			if(cloneInstances) {
				var o = Type.createEmptyInstance(c);
				var _g1 = 0;
				var _g11 = Type.getInstanceFields(c);
				while(_g1 < _g11.length) {
					var field = _g11[_g1];
					++_g1;
					o[field] = thx_Dynamics.clone(Reflect.field(v,field),cloneInstances);
				}
				return o;
			} else {
				return v;
			}
		}
		break;
	case 1:case 2:case 3:case 5:case 7:case 8:
		return v;
	}
};
thx_Dynamics.compare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	}
	if(null == b) {
		return 1;
	}
	if(!thx_Types.sameType(a,b)) {
		return haxe_Utf8.compare(thx_Types.toString(Type["typeof"](a)),thx_Types.toString(Type["typeof"](b)));
	}
	var _g = Type["typeof"](a);
	switch(_g[1]) {
	case 1:
		return a - b;
	case 2:
		var a1 = a;
		var b1 = b;
		if(a1 < b1) {
			return -1;
		} else if(a1 > b1) {
			return 1;
		} else {
			return 0;
		}
		break;
	case 3:
		return thx_Bools.compare(a,b);
	case 4:
		return thx_Objects.compare(a,b);
	case 6:
		switch(Type.getClassName(_g[2])) {
		case "Array":
			return thx_Arrays.compare(a,b);
		case "Date":
			return thx_Dates.compare(a,b);
		case "String":
			return haxe_Utf8.compare(a,b);
		default:
			if(Object.prototype.hasOwnProperty.call(a,"compare")) {
				return Reflect.field(a,"compare").apply(a,[b]);
			} else {
				return haxe_Utf8.compare(Std.string(a),Std.string(b));
			}
		}
		break;
	case 7:
		return thx_Enums.compare(a,b);
	default:
		return 0;
	}
};
thx_Dynamics.string = function(v) {
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 0:
		return "null";
	case 1:case 2:case 3:
		return "" + Std.string(v);
	case 4:
		return thx_Objects.string(v);
	case 5:
		return "<function>";
	case 6:
		switch(Type.getClassName(_g[2])) {
		case "Array":
			return thx_Arrays.string(v);
		case "Date":
			return HxOverrides.dateStr(v);
		case "String":
			return v;
		default:
			if(js_Boot.__instanceof(v,haxe_IMap)) {
				return thx_Maps.string(v);
			} else {
				return Std.string(v);
			}
		}
		break;
	case 7:
		return thx_Enums.string(v);
	case 8:
		return "<unknown>";
	}
};
var thx_DynamicsT = function() { };
thx_DynamicsT.__name__ = ["thx","DynamicsT"];
thx_DynamicsT.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_DynamicsT.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_DynamicsT.fields = function(o) {
	return Reflect.fields(o);
};
thx_DynamicsT.merge = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_DynamicsT.size = function(o) {
	return Reflect.fields(o).length;
};
thx_DynamicsT.values = function(o) {
	return Reflect.fields(o).map(function(key) {
		return Reflect.field(o,key);
	});
};
thx_DynamicsT.tuples = function(o) {
	return Reflect.fields(o).map(function(key) {
		return { _0 : key, _1 : Reflect.field(o,key)};
	});
};
var thx_Either = { __ename__ : ["thx","Either"], __constructs__ : ["Left","Right"] };
thx_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = thx_Either; return $x; };
thx_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = thx_Either; return $x; };
var thx_Eithers = function() { };
thx_Eithers.__name__ = ["thx","Eithers"];
thx_Eithers.isLeft = function(either) {
	switch(either[1]) {
	case 0:
		return true;
	case 1:
		return false;
	}
};
thx_Eithers.isRight = function(either) {
	switch(either[1]) {
	case 0:
		return false;
	case 1:
		return true;
	}
};
thx_Eithers.toLeft = function(either) {
	switch(either[1]) {
	case 0:
		return haxe_ds_Option.Some(either[2]);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Eithers.toRight = function(either) {
	switch(either[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		return haxe_ds_Option.Some(either[2]);
	}
};
thx_Eithers.toLeftUnsafe = function(either) {
	switch(either[1]) {
	case 0:
		return either[2];
	case 1:
		return null;
	}
};
thx_Eithers.toRightUnsafe = function(either) {
	switch(either[1]) {
	case 0:
		return null;
	case 1:
		return either[2];
	}
};
thx_Eithers.map = function(either,f) {
	switch(either[1]) {
	case 0:
		return thx_Either.Left(either[2]);
	case 1:
		return thx_Either.Right(f(either[2]));
	}
};
thx_Eithers.flatMap = function(either,f) {
	switch(either[1]) {
	case 0:
		return thx_Either.Left(either[2]);
	case 1:
		return f(either[2]);
	}
};
thx_Eithers.leftMap = function(either,f) {
	switch(either[1]) {
	case 0:
		return thx_Either.Left(f(either[2]));
	case 1:
		return thx_Either.Right(either[2]);
	}
};
thx_Eithers.orThrow = function(either,message) {
	switch(either[1]) {
	case 0:
		throw new thx_Error("" + message + ": " + Std.string(either[2]),null,{ fileName : "Eithers.hx", lineNumber : 93, className : "thx.Eithers", methodName : "orThrow"});
		break;
	case 1:
		return either[2];
	}
};
thx_Eithers.toVNel = function(either) {
	switch(either[1]) {
	case 0:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(either[2]));
	case 1:
		return thx_Either.Right(either[2]);
	}
};
thx_Eithers.cata = function(either,l,r) {
	switch(either[1]) {
	case 0:
		return l(either[2]);
	case 1:
		return r(either[2]);
	}
};
var thx_Enums = function() { };
thx_Enums.__name__ = ["thx","Enums"];
thx_Enums.string = function(e) {
	var cons = e[0];
	var params = [];
	var _g = 0;
	var _g1 = e.slice(2);
	while(_g < _g1.length) {
		var param = _g1[_g];
		++_g;
		params.push(thx_Dynamics.string(param));
	}
	return cons + (params.length == 0?"":"(" + params.join(", ") + ")");
};
thx_Enums.compare = function(a,b) {
	var v = a[1] - b[1];
	if(v != 0) {
		return v;
	}
	return thx_Arrays.compare(a.slice(2),b.slice(2));
};
thx_Enums.sameConstructor = function(a,b) {
	return a[1] == b[1];
};
thx_Enums.min = function(a,b) {
	if(thx_Enums.compare(a,b) < 0) {
		return a;
	} else {
		return b;
	}
};
thx_Enums.max = function(a,b) {
	if(thx_Enums.compare(a,b) > 0) {
		return a;
	} else {
		return b;
	}
};
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
thx_Error.__name__ = ["thx","Error"];
thx_Error.fromDynamic = function(err,pos) {
	if(js_Boot.__instanceof(err,thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	pos: null
	,stackItems: null
	,toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var thx__$Ord_Ord_$Impl_$ = {};
thx__$Ord_Ord_$Impl_$.__name__ = ["thx","_Ord","Ord_Impl_"];
thx__$Ord_Ord_$Impl_$.order = function(this1,a0,a1) {
	return this1(a0,a1);
};
thx__$Ord_Ord_$Impl_$.max = function(this1,a0,a1) {
	switch(this1(a0,a1)[1]) {
	case 1:
		return a0;
	case 0:case 2:
		return a1;
	}
};
thx__$Ord_Ord_$Impl_$.min = function(this1,a0,a1) {
	switch(this1(a0,a1)[1]) {
	case 1:
		return a1;
	case 0:case 2:
		return a0;
	}
};
thx__$Ord_Ord_$Impl_$.equal = function(this1,a0,a1) {
	return this1(a0,a1) == thx_OrderingImpl.EQ;
};
thx__$Ord_Ord_$Impl_$.contramap = function(this1,f) {
	return function(b0,b1) {
		return this1(f(b0),f(b1));
	};
};
thx__$Ord_Ord_$Impl_$.inverse = function(this1) {
	return function(a0,a1) {
		return this1(a1,a0);
	};
};
thx__$Ord_Ord_$Impl_$.intComparison = function(this1,a0,a1) {
	switch(this1(a0,a1)[1]) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
thx__$Ord_Ord_$Impl_$.fromIntComparison = function(f) {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(f(a,b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparable = function() {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(a.compareTo(b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparableOrd = function() {
	return function(a,b) {
		return a.compareTo(b);
	};
};
var thx__$Ord_Ordering_$Impl_$ = {};
thx__$Ord_Ordering_$Impl_$.__name__ = ["thx","_Ord","Ordering_Impl_"];
thx__$Ord_Ordering_$Impl_$.fromInt = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.fromFloat = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.toInt = function(this1) {
	switch(this1[1]) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
var thx_OrderingImpl = { __ename__ : ["thx","OrderingImpl"], __constructs__ : ["LT","GT","EQ"] };
thx_OrderingImpl.LT = ["LT",0];
thx_OrderingImpl.LT.__enum__ = thx_OrderingImpl;
thx_OrderingImpl.GT = ["GT",1];
thx_OrderingImpl.GT.__enum__ = thx_OrderingImpl;
thx_OrderingImpl.EQ = ["EQ",2];
thx_OrderingImpl.EQ.__enum__ = thx_OrderingImpl;
var thx_Floats = function() { };
thx_Floats.__name__ = ["thx","Floats"];
thx_Floats.angleDifference = function(a,b,turn) {
	if(turn == null) {
		turn = 360.0;
	}
	var r = (b - a) % turn;
	if(r < 0) {
		r += turn;
	}
	if(r > turn / 2) {
		r -= turn;
	}
	return r;
};
thx_Floats.ceilTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.ceil(f * p) / p;
};
thx_Floats.canParse = function(s) {
	return thx_Floats.pattern_parse.match(s);
};
thx_Floats.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.compare = function(a,b) {
	if(a < b) {
		return -1;
	} else if(a > b) {
		return 1;
	} else {
		return 0;
	}
};
thx_Floats.floorTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.floor(f * p) / p;
};
thx_Floats.interpolate = function(f,a,b) {
	return (b - a) * f + a;
};
thx_Floats.interpolateAngle = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,a + thx_Floats.angleDifference(a,b,turn)),turn);
};
thx_Floats.interpolateAngleWidest = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolateAngle(f,a,b,turn) - turn / 2,turn);
};
thx_Floats.interpolateAngleCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b < a) {
		b += turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.interpolateAngleCCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b > a) {
		b -= turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.nearEquals = function(a,b,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(isFinite(a)) {
		return Math.abs(a - b) <= tollerance;
	}
	if(isNaN(a)) {
		return isNaN(b);
	}
	if(isNaN(b)) {
		return false;
	}
	if(!isFinite(b)) {
		return a > 0 == b > 0;
	}
	return false;
};
thx_Floats.nearEqualAngles = function(a,b,turn,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(turn == null) {
		turn = 360.0;
	}
	return Math.abs(thx_Floats.angleDifference(a,b,turn)) <= tollerance;
};
thx_Floats.nearZero = function(n,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	return Math.abs(n) <= tollerance;
};
thx_Floats.normalize = function(v) {
	if(v < 0) {
		return 0;
	} else if(v > 1) {
		return 1;
	} else {
		return v;
	}
};
thx_Floats.parse = function(s) {
	if(s.substring(0,1) == "+") {
		s = s.substring(1);
	}
	return parseFloat(s);
};
thx_Floats.root = function(base,index) {
	return Math.pow(base,1 / index);
};
thx_Floats.roundTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.round(f * p) / p;
};
thx_Floats.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Floats.toString = function(v) {
	return "" + v;
};
thx_Floats.toFloat = function(s) {
	return thx_Floats.parse(s);
};
thx_Floats.trunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.ftrunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.wrap = function(v,min,max) {
	var range = max - min + 1;
	if(v < min) {
		v += range * ((min - v) / range + 1);
	}
	return min + (v - min) % range;
};
thx_Floats.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_Functions0 = function() { };
thx_Functions0.__name__ = ["thx","Functions0"];
thx_Functions0.after = function(callback,n) {
	return function() {
		if(--n == 0) {
			callback();
		}
	};
};
thx_Functions0.join = function(fa,fb) {
	return function() {
		fa();
		fb();
	};
};
thx_Functions0.once = function(f) {
	return function() {
		var t = f;
		f = thx_Functions.noop;
		t();
	};
};
thx_Functions0.negate = function(callback) {
	return function() {
		return !callback();
	};
};
thx_Functions0.times = function(n,callback) {
	return function() {
		return thx_Ints.range(n).map(function(_) {
			return callback();
		});
	};
};
thx_Functions0.timesi = function(n,callback) {
	return function() {
		return thx_Ints.range(n).map(function(i) {
			return callback(i);
		});
	};
};
var thx_Functions1 = function() { };
thx_Functions1.__name__ = ["thx","Functions1"];
thx_Functions1.compose = function(fa,fb) {
	return function(v) {
		return fa(fb(v));
	};
};
thx_Functions1.map = function(fab,fbc) {
	return function(a) {
		return fbc(fab(a));
	};
};
thx_Functions1.contramap = function(fbc,fab) {
	return function(a) {
		return fbc(fab(a));
	};
};
thx_Functions1.join = function(fa,fb) {
	return function(v) {
		fa(v);
		fb(v);
	};
};
thx_Functions1.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v) {
			return "" + Std.string(v);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v1) {
		var key = resolver(v1);
		if(__map_reserved[key] != null?map.existsReserved(key):map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null?map.getReserved(key):map.h[key];
		}
		var result = callback(v1);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions1.negate = function(callback) {
	return function(v) {
		return !callback(v);
	};
};
thx_Functions1.noop = function(_) {
};
thx_Functions1.times = function(n,callback) {
	return function(value) {
		return thx_Ints.range(n).map(function(_) {
			return callback(value);
		});
	};
};
thx_Functions1.timesi = function(n,callback) {
	return function(value) {
		return thx_Ints.range(n).map(function(i) {
			return callback(value,i);
		});
	};
};
thx_Functions1.swapArguments = function(callback) {
	return function(a2,a1) {
		return callback(a1,a2);
	};
};
var thx_Functions2 = function() { };
thx_Functions2.__name__ = ["thx","Functions2"];
thx_Functions2.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2) {
			return "" + Std.string(v1) + ":" + Std.string(v2);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21) {
		var key = resolver(v11,v21);
		if(__map_reserved[key] != null?map.existsReserved(key):map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null?map.getReserved(key):map.h[key];
		}
		var result = callback(v11,v21);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions2.curry = function(f) {
	return function(a) {
		return function(b) {
			return f(a,b);
		};
	};
};
thx_Functions2.negate = function(callback) {
	return function(v1,v2) {
		return !callback(v1,v2);
	};
};
var thx_Functions3 = function() { };
thx_Functions3.__name__ = ["thx","Functions3"];
thx_Functions3.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2,v3) {
			return "" + Std.string(v1) + ":" + Std.string(v2) + ":" + Std.string(v3);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21,v31) {
		var key = resolver(v11,v21,v31);
		if(__map_reserved[key] != null?map.existsReserved(key):map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null?map.getReserved(key):map.h[key];
		}
		var result = callback(v11,v21,v31);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions3.negate = function(callback) {
	return function(v1,v2,v3) {
		return !callback(v1,v2,v3);
	};
};
thx_Functions3.curry = function(f) {
	return function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	};
};
var thx_Functions4 = function() { };
thx_Functions4.__name__ = ["thx","Functions4"];
thx_Functions4.curry = function(f) {
	return function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
};
var thx_Functions5 = function() { };
thx_Functions5.__name__ = ["thx","Functions5"];
thx_Functions5.curry = function(f) {
	return function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
};
var thx_Functions6 = function() { };
thx_Functions6.__name__ = ["thx","Functions6"];
thx_Functions6.curry = function(f) {
	return function(a,b,c,d,e) {
		return function(f0) {
			return f(a,b,c,d,e,f0);
		};
	};
};
var thx_Functions7 = function() { };
thx_Functions7.__name__ = ["thx","Functions7"];
thx_Functions7.curry = function(f) {
	return function(a,b,c,d,e,f0) {
		return function(g) {
			return f(a,b,c,d,e,f0,g);
		};
	};
};
var thx_Functions8 = function() { };
thx_Functions8.__name__ = ["thx","Functions8"];
thx_Functions8.curry = function(f) {
	return function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f(a,b,c,d,e,f0,g,h);
		};
	};
};
var thx_Functions9 = function() { };
thx_Functions9.__name__ = ["thx","Functions9"];
thx_Functions9.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f(a,b,c,d,e,f0,g,h,i);
		};
	};
};
var thx__$Functions_Reader_$Impl_$ = {};
thx__$Functions_Reader_$Impl_$.__name__ = ["thx","_Functions","Reader_Impl_"];
thx__$Functions_Reader_$Impl_$.flatMap = function(this1,f) {
	return function(a) {
		return (f(this1(a)))(a);
	};
};
var thx_Functions = function() { };
thx_Functions.__name__ = ["thx","Functions"];
thx_Functions.equality = function(a,b) {
	return a == b;
};
thx_Functions.identity = function(value) {
	return value;
};
thx_Functions.noop = function() {
};
var thx_Ints = function() { };
thx_Ints.__name__ = ["thx","Ints"];
thx_Ints.abs = function(v) {
	if(v < 0) {
		return -v;
	} else {
		return v;
	}
};
thx_Ints.canParse = function(s) {
	return thx_Ints.pattern_parse.match(s);
};
thx_Ints.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.compare = function(a,b) {
	return a - b;
};
thx_Ints.gcd = function(m,n) {
	if(m < 0) {
		m = -m;
	} else {
		m = m;
	}
	if(n < 0) {
		n = -n;
	} else {
		n = n;
	}
	if(n == 0) {
		return m;
	}
	return thx_Ints.gcd(n,m % n);
};
thx_Ints.interpolate = function(f,a,b) {
	return Math.round(a + (b - a) * f);
};
thx_Ints.isEven = function(v) {
	return v % 2 == 0;
};
thx_Ints.isOdd = function(v) {
	return v % 2 != 0;
};
thx_Ints.lpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	var neg = false;
	if(v < 0) {
		neg = true;
		v = -v;
	}
	return (neg?"-":"") + StringTools.lpad("" + v,pad,len);
};
thx_Ints.lcm = function(m,n) {
	if(m < 0) {
		m = -m;
	} else {
		m = m;
	}
	if(n < 0) {
		n = -n;
	} else {
		n = n;
	}
	if(n == 0) {
		return m;
	}
	return m * (n / thx_Ints.gcd(m,n) | 0);
};
thx_Ints.rpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	return StringTools.rpad("" + v,pad,len);
};
thx_Ints.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.parse = function(s,base) {
	if(null == base) {
		if(s.substring(0,2) == "0x") {
			base = 16;
		} else {
			base = 10;
		}
	}
	var v = parseInt(s,base);
	if(isNaN(v)) {
		return null;
	} else {
		return v;
	}
};
thx_Ints.random = function(min,max) {
	if(min == null) {
		min = 0;
	}
	return Std.random(max + 1) + min;
};
thx_Ints.range = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	if(null == stop) {
		stop = start;
		start = 0;
	}
	if((stop - start) / step == Infinity) {
		throw new js__$Boot_HaxeError("infinite range");
	}
	var range = [];
	var i = -1;
	var j;
	if(step < 0) {
		while(true) {
			j = start + step * ++i;
			if(!(j > stop)) {
				break;
			}
			range.push(j);
		}
	} else {
		while(true) {
			j = start + step * ++i;
			if(!(j < stop)) {
				break;
			}
			range.push(j);
		}
	}
	return range;
};
thx_Ints.rangeIter = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	return new thx_RangeIterator(start,stop,step);
};
thx_Ints.toString = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBase = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBool = function(v) {
	return v != 0;
};
thx_Ints.toInt = function(s,base) {
	return thx_Ints.parse(s,base);
};
thx_Ints.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Ints.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_RangeIterator = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	this.current = start;
	this.stop = stop;
	this.step = step;
};
thx_RangeIterator.__name__ = ["thx","RangeIterator"];
thx_RangeIterator.prototype = {
	current: null
	,stop: null
	,step: null
	,hasNext: function() {
		if(!(this.stop == null || this.step >= 0 && this.current < this.stop)) {
			if(this.step < 0) {
				return this.current > this.stop;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,next: function() {
		var result = this.current;
		this.current += this.step;
		return result;
	}
	,__class__: thx_RangeIterator
};
var thx_Iterables = function() { };
thx_Iterables.__name__ = ["thx","Iterables"];
thx_Iterables.all = function(it,predicate) {
	return thx_Iterators.all($iterator(it)(),predicate);
};
thx_Iterables.any = function(it,predicate) {
	return thx_Iterators.any($iterator(it)(),predicate);
};
thx_Iterables.eachPair = function(it,handler) {
	thx_Iterators.eachPair($iterator(it)(),handler);
	return;
};
thx_Iterables.equals = function(a,b,equality) {
	return thx_Iterators.equals($iterator(a)(),$iterator(b)(),equality);
};
thx_Iterables.filter = function(it,predicate) {
	return thx_Iterators.filter($iterator(it)(),predicate);
};
thx_Iterables.find = function(it,predicate) {
	return thx_Iterators.find($iterator(it)(),predicate);
};
thx_Iterables.findOption = function(it,predicate) {
	var value = thx_Iterators.find($iterator(it)(),predicate);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.first = function(it) {
	return thx_Iterators.first($iterator(it)());
};
thx_Iterables.get = function(it,index) {
	return thx_Iterators.get($iterator(it)(),index);
};
thx_Iterables.getOption = function(it,index) {
	var value = thx_Iterators.get($iterator(it)(),index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.last = function(it) {
	return thx_Iterators.last($iterator(it)());
};
thx_Iterables.hasElements = function(it) {
	return $iterator(it)().hasNext();
};
thx_Iterables.indexOf = function(it,element) {
	return thx_Iterators.indexOf($iterator(it)(),element);
};
thx_Iterables.isEmpty = function(it) {
	return !$iterator(it)().hasNext();
};
thx_Iterables.isIterable = function(v) {
	if(!Lambda.has(Reflect.isObject(v) && null == (v == null?null:js_Boot.getClass(v))?Reflect.fields(v):Type.getInstanceFields(v == null?null:js_Boot.getClass(v)),"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
thx_Iterables.map = function(it,f) {
	return thx_Iterators.map($iterator(it)(),f);
};
thx_Iterables.fmap = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmap($iterator(it)(),f);
	}};
};
thx_Iterables.mapi = function(it,f) {
	return thx_Iterators.mapi($iterator(it)(),f);
};
thx_Iterables.fmapi = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmapi($iterator(it)(),f);
	}};
};
thx_Iterables.order = function(it,sort) {
	return thx_Iterators.order($iterator(it)(),sort);
};
thx_Iterables.reduce = function(it,callback,initial) {
	return thx_Iterators.reduce($iterator(it)(),callback,initial);
};
thx_Iterables.reducei = function(it,callback,initial) {
	return thx_Iterators.reducei($iterator(it)(),callback,initial);
};
thx_Iterables.toArray = function(it) {
	return thx_Iterators.toArray($iterator(it)());
};
thx_Iterables.minBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var a = [tmp.next()];
		if(thx_Options.any(found,(function(a1) {
			return function(a0) {
				return ord(f(a0),f(a1[0])) == thx_OrderingImpl.LT;
			};
		})(a))) {
			found = found;
		} else {
			found = haxe_ds_Option.Some(a[0]);
		}
	}
	return found;
};
thx_Iterables.maxBy = function(it,f,ord) {
	return thx_Iterables.minBy(it,f,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.min = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,ord);
};
thx_Iterables.max = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.extremaBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var a = tmp.next();
		switch(found[1]) {
		case 0:
			var t = found[2];
			if(ord(f(a),f(t._0)) == thx_OrderingImpl.LT) {
				found = haxe_ds_Option.Some({ _0 : a, _1 : t._1});
			} else {
				var t1 = found[2];
				if(ord(f(a),f(t1._1)) == thx_OrderingImpl.GT) {
					found = haxe_ds_Option.Some({ _0 : t1._0, _1 : a});
				} else {
					found = found;
				}
			}
			break;
		case 1:
			found = haxe_ds_Option.Some({ _0 : a, _1 : a});
			break;
		default:
			found = found;
		}
	}
	return found;
};
thx_Iterables.extrema = function(it,ord) {
	return thx_Iterables.extremaBy(it,thx_Functions.identity,ord);
};
thx_Iterables.unzip = function(it) {
	return thx_Iterators.unzip($iterator(it)());
};
thx_Iterables.unzip3 = function(it) {
	return thx_Iterators.unzip3($iterator(it)());
};
thx_Iterables.unzip4 = function(it) {
	return thx_Iterators.unzip4($iterator(it)());
};
thx_Iterables.unzip5 = function(it) {
	return thx_Iterators.unzip5($iterator(it)());
};
thx_Iterables.zip = function(it1,it2) {
	return thx_Iterators.zip($iterator(it1)(),$iterator(it2)());
};
thx_Iterables.zip3 = function(it1,it2,it3) {
	return thx_Iterators.zip3($iterator(it1)(),$iterator(it2)(),$iterator(it3)());
};
thx_Iterables.zip4 = function(it1,it2,it3,it4) {
	return thx_Iterators.zip4($iterator(it1)(),$iterator(it2)(),$iterator(it3)(),$iterator(it4)());
};
thx_Iterables.zip5 = function(it1,it2,it3,it4,it5) {
	return thx_Iterators.zip5($iterator(it1)(),$iterator(it2)(),$iterator(it3)(),$iterator(it4)(),$iterator(it5)());
};
var thx_Iterators = function() { };
thx_Iterators.__name__ = ["thx","Iterators"];
thx_Iterators.all = function(it,predicate) {
	while(it.hasNext()) if(!predicate(it.next())) {
		return false;
	}
	return true;
};
thx_Iterators.any = function(it,predicate) {
	while(it.hasNext()) if(predicate(it.next())) {
		return true;
	}
	return false;
};
thx_Iterators.equals = function(a,b,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var an;
	var bn;
	while(true) {
		an = a.hasNext();
		bn = b.hasNext();
		if(!an && !bn) {
			return true;
		}
		if(!an || !bn) {
			return false;
		}
		if(!equality(a.next(),b.next())) {
			return false;
		}
	}
};
thx_Iterators.get = function(it,index) {
	var pos = 0;
	while(it.hasNext()) {
		var i = it.next();
		if(pos++ == index) {
			return i;
		}
	}
	return null;
};
thx_Iterators.getOption = function(it,index) {
	var value = thx_Iterators.get(it,index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.eachPair = function(it,handler) {
	thx_Arrays.eachPair(thx_Iterators.toArray(it),handler);
};
thx_Iterators.filter = function(it,predicate) {
	return thx_Iterators.reduce(it,function(acc,element) {
		if(predicate(element)) {
			acc.push(element);
		}
		return acc;
	},[]);
};
thx_Iterators.find = function(it,f) {
	while(it.hasNext()) {
		var element = it.next();
		if(f(element)) {
			return element;
		}
	}
	return null;
};
thx_Iterators.findOption = function(it,f) {
	var value = thx_Iterators.find(it,f);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.first = function(it) {
	if(it.hasNext()) {
		return it.next();
	} else {
		return null;
	}
};
thx_Iterators.hasElements = function(it) {
	return it.hasNext();
};
thx_Iterators.indexOf = function(it,element) {
	var pos = 0;
	while(it.hasNext()) {
		if(element == it.next()) {
			return pos;
		}
		++pos;
	}
	return -1;
};
thx_Iterators.isEmpty = function(it) {
	return !it.hasNext();
};
thx_Iterators.isIterator = function(v) {
	var fields = Reflect.isObject(v) && null == (v == null?null:js_Boot.getClass(v))?Reflect.fields(v):Type.getInstanceFields(v == null?null:js_Boot.getClass(v));
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
thx_Iterators.last = function(it) {
	var buf = null;
	while(it.hasNext()) buf = it.next();
	return buf;
};
thx_Iterators.forEach = function(it,proc) {
	while(it.hasNext()) proc(it.next());
};
thx_Iterators.map = function(it,f) {
	var acc = [];
	while(it.hasNext()) acc.push(f(it.next()));
	return acc;
};
thx_Iterators.fmap = function(it,f) {
	return new thx_MapIterator(it,f);
};
thx_Iterators.mapi = function(it,f) {
	var acc = [];
	var i = 0;
	while(it.hasNext()) acc.push(f(it.next(),i++));
	return acc;
};
thx_Iterators.fmapi = function(it,f) {
	return new thx_MapIIterator(it,f);
};
thx_Iterators.order = function(it,sort) {
	var n = thx_Iterators.toArray(it);
	n.sort(sort);
	return n;
};
thx_Iterators.reduce = function(it,callback,initial) {
	var result = initial;
	while(it.hasNext()) result = callback(result,it.next());
	return result;
};
thx_Iterators.reducei = function(it,callback,initial) {
	thx_Iterators.mapi(it,function(v,i) {
		initial = callback(initial,v,i);
	});
	return initial;
};
thx_Iterators.foldLeft = function(it,zero,f) {
	return thx_Iterators.reduce(it,f,zero);
};
thx_Iterators.foldMap = function(it,f,m) {
	var tmp = thx_Iterators.fmap(it,f);
	var tmp1 = thx__$Monoid_Monoid_$Impl_$.get_zero(m);
	var _e = m;
	return thx_Iterators.foldLeft(tmp,tmp1,function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	});
};
thx_Iterators.toArray = function(it) {
	var elements = [];
	while(it.hasNext()) elements.push(it.next());
	return elements;
};
thx_Iterators.unzip = function(it) {
	var a1 = [];
	var a2 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	return { _0 : a1, _1 : a2};
};
thx_Iterators.unzip3 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	return { _0 : a1, _1 : a2, _2 : a3};
};
thx_Iterators.unzip4 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	return { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
};
thx_Iterators.unzip5 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	return { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
};
thx_Iterators.zip = function(it1,it2) {
	var array = [];
	while(it1.hasNext() && it2.hasNext()) array.push({ _0 : it1.next(), _1 : it2.next()});
	return array;
};
thx_Iterators.zip3 = function(it1,it2,it3) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext()) array.push({ _0 : it1.next(), _1 : it2.next(), _2 : it3.next()});
	return array;
};
thx_Iterators.zip4 = function(it1,it2,it3,it4) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext()) array.push({ _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next()});
	return array;
};
thx_Iterators.zip5 = function(it1,it2,it3,it4,it5) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext() && it5.hasNext()) array.push({ _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next(), _4 : it5.next()});
	return array;
};
var thx_MapIterator = function(base,f) {
	this.base = base;
	this.f = f;
};
thx_MapIterator.__name__ = ["thx","MapIterator"];
thx_MapIterator.prototype = {
	base: null
	,f: null
	,next: function() {
		return this.f(this.base.next());
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIterator
};
var thx_MapIIterator = function(base,f) {
	this.i = 0;
	this.base = base;
	this.f = f;
};
thx_MapIIterator.__name__ = ["thx","MapIIterator"];
thx_MapIIterator.prototype = {
	base: null
	,f: null
	,i: null
	,next: function() {
		var result = this.f(this.base.next(),this.i);
		this.i++;
		return result;
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIIterator
};
var thx_Maps = function() { };
thx_Maps.__name__ = ["thx","Maps"];
thx_Maps.copyTo = function(src,dst) {
	var tmp = src.keys();
	while(tmp.hasNext()) {
		var key = tmp.next();
		dst.set(key,src.get(key));
	}
	return dst;
};
thx_Maps.tuples = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		return { _0 : key, _1 : map.get(key)};
	});
};
thx_Maps.mapValues = function(map,f,acc) {
	return thx_Maps.reduce(map,function(m,t) {
		m.set(t._0,f(t._1));
		return m;
	},acc);
};
thx_Maps.reduce = function(map,f,acc) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),f,acc);
};
thx_Maps.values = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		return map.get(key);
	});
};
thx_Maps.getOption = function(map,key) {
	var value = map.get(key);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Maps.toObject = function(map) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),function(o,t) {
		o[t._0] = t._1;
		return o;
	},{ });
};
thx_Maps.getAlt = function(map,key,alt) {
	var v = map.get(key);
	if(null == v) {
		return alt;
	} else {
		return v;
	}
};
thx_Maps.isMap = function(v) {
	return js_Boot.__instanceof(v,haxe_IMap);
};
thx_Maps.string = function(m) {
	return "[" + thx_Maps.tuples(m).map(function(t) {
		return thx_Dynamics.string(t._0) + " => " + thx_Dynamics.string(t._1);
	}).join(", ") + "]";
};
thx_Maps.merge = function(dest,sources) {
	return thx_Arrays.reduce(sources,function(result,source) {
		return thx_Iterators.reduce(source.keys(),function(result1,key) {
			result1.set(key,source.get(key));
			return result1;
		},result);
	},dest);
};
var thx__$Monoid_Monoid_$Impl_$ = {};
thx__$Monoid_Monoid_$Impl_$.__name__ = ["thx","_Monoid","Monoid_Impl_"];
thx__$Monoid_Monoid_$Impl_$.get_semigroup = function(this1) {
	return this1.append;
};
thx__$Monoid_Monoid_$Impl_$.get_zero = function(this1) {
	return this1.zero;
};
thx__$Monoid_Monoid_$Impl_$.append = function(this1,a0,a1) {
	return this1.append(a0,a1);
};
var thx__$Nel_Nel_$Impl_$ = {};
thx__$Nel_Nel_$Impl_$.__name__ = ["thx","_Nel","Nel_Impl_"];
thx__$Nel_Nel_$Impl_$.nel = function(hd,tl) {
	var _g = thx__$Nel_Nel_$Impl_$.fromArray(tl);
	switch(_g[1]) {
	case 0:
		return thx__$Nel_Nel_$Impl_$.cons(hd,_g[2]);
	case 1:
		return thx__$Nel_Nel_$Impl_$.pure(hd);
	}
};
thx__$Nel_Nel_$Impl_$.pure = function(a) {
	return thx_NonEmptyList.Single(a);
};
thx__$Nel_Nel_$Impl_$.cons = function(a,nl) {
	return thx_NonEmptyList.ConsNel(a,nl);
};
thx__$Nel_Nel_$Impl_$.fromArray = function(arr) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var res = thx_NonEmptyList.Single(arr[arr.length - 1]);
		var tmp = thx_Ints.rangeIter(arr.length - 2,-1,-1);
		while(tmp.hasNext()) res = thx_NonEmptyList.ConsNel(arr[tmp.next()],res);
		return haxe_ds_Option.Some(res);
	}
};
thx__$Nel_Nel_$Impl_$.map = function(this1,f) {
	var fb = f;
	return thx__$Nel_Nel_$Impl_$.flatMap(this1,function(v) {
		return thx__$Nel_Nel_$Impl_$.pure(fb(v));
	});
};
thx__$Nel_Nel_$Impl_$.flatMap = function(this1,f) {
	switch(this1[1]) {
	case 0:
		return f(this1[2]);
	case 1:
		return thx__$Nel_Nel_$Impl_$.append(f(this1[2]),thx__$Nel_Nel_$Impl_$.flatMap(this1[3],f));
	}
};
thx__$Nel_Nel_$Impl_$.fold = function(this1,s) {
	switch(this1[1]) {
	case 0:
		return this1[2];
	case 1:
		return (thx__$Semigroup_Semigroup_$Impl_$.get_append(s))(this1[2],thx__$Nel_Nel_$Impl_$.fold(this1[3],s));
	}
};
thx__$Nel_Nel_$Impl_$.append = function(this1,nel) {
	switch(this1[1]) {
	case 0:
		return thx_NonEmptyList.ConsNel(this1[2],nel);
	case 1:
		return thx_NonEmptyList.ConsNel(this1[2],thx__$Nel_Nel_$Impl_$.append(this1[3],nel));
	}
};
thx__$Nel_Nel_$Impl_$.toArray = function(this1) {
	var go = null;
	go = function(acc,xs) {
		switch(xs[1]) {
		case 0:
			return thx_Arrays.append(acc,xs[2]);
		case 1:
			return go(thx_Arrays.append(acc,xs[2]),xs[3]);
		}
	};
	var result = go([],this1).slice();
	result.reverse();
	return result;
};
thx__$Nel_Nel_$Impl_$.semigroup = function() {
	return function(nl,nr) {
		return thx__$Nel_Nel_$Impl_$.append(nl,nr);
	};
};
var thx_NonEmptyList = { __ename__ : ["thx","NonEmptyList"], __constructs__ : ["Single","ConsNel"] };
thx_NonEmptyList.Single = function(x) { var $x = ["Single",0,x]; $x.__enum__ = thx_NonEmptyList; return $x; };
thx_NonEmptyList.ConsNel = function(x,xs) { var $x = ["ConsNel",1,x,xs]; $x.__enum__ = thx_NonEmptyList; return $x; };
var thx_Nil = { __ename__ : ["thx","Nil"], __constructs__ : ["nil"] };
thx_Nil.nil = ["nil",0];
thx_Nil.nil.__enum__ = thx_Nil;
var thx_Nulls = function() { };
thx_Nulls.__name__ = ["thx","Nulls"];
var thx_Objects = function() { };
thx_Objects.__name__ = ["thx","Objects"];
thx_Objects.compare = function(a,b) {
	var v;
	var fields = Reflect.fields(a);
	v = thx_Arrays.compare(fields,Reflect.fields(b));
	if(v != 0) {
		return v;
	}
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		v = thx_Dynamics.compare(Reflect.field(a,field),Reflect.field(b,field));
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Objects.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_Objects.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_Objects.fields = function(o) {
	return Reflect.fields(o);
};
thx_Objects.combine = function(first,second) {
	var to = { };
	var _g = 0;
	var _g1 = Reflect.fields(first);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		to[field] = Reflect.field(first,field);
	}
	var _g2 = 0;
	var _g11 = Reflect.fields(second);
	while(_g2 < _g11.length) {
		var field1 = _g11[_g2];
		++_g2;
		to[field1] = Reflect.field(second,field1);
	}
	return to;
};
thx_Objects.assign = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_Objects.copyTo = function(src,dst,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = 0;
	var _g1 = Reflect.fields(src);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var sv = thx_Dynamics.clone(Reflect.field(src,field),cloneInstances);
		var dv = Reflect.field(dst,field);
		var tmp;
		var tmp1;
		if(Reflect.isObject(sv)) {
			var o = sv;
			tmp1 = null == (o == null?null:js_Boot.getClass(o));
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			if(Reflect.isObject(dv)) {
				var o1 = dv;
				tmp = null == (o1 == null?null:js_Boot.getClass(o1));
			} else {
				tmp = false;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			thx_Objects.copyTo(sv,dv);
		} else {
			dst[field] = sv;
		}
	}
	return dst;
};
thx_Objects.clone = function(src,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	return thx_Dynamics.clone(src,cloneInstances);
};
thx_Objects.toMap = function(o) {
	return thx_Arrays.reduce(thx_Objects.tuples(o),function(map,t) {
		var value = t._1;
		var key = t._0;
		if(__map_reserved[key] != null) {
			map.setReserved(key,value);
		} else {
			map.h[key] = value;
		}
		return map;
	},new haxe_ds_StringMap());
};
thx_Objects.size = function(o) {
	return Reflect.fields(o).length;
};
thx_Objects.string = function(o) {
	return "{" + Reflect.fields(o).map(function(key) {
		var v = Reflect.field(o,key);
		return "" + key + " : " + (typeof(v) == "string"?thx_Strings.quote(v):thx_Dynamics.string(v));
	}).join(", ") + "}";
};
thx_Objects.stringImpl = function(o,cache) {
};
thx_Objects.values = function(o) {
	return Reflect.fields(o).map(function(key) {
		return Reflect.field(o,key);
	});
};
thx_Objects.tuples = function(o) {
	return Reflect.fields(o).map(function(key) {
		return { _0 : key, _1 : Reflect.field(o,key)};
	});
};
thx_Objects.hasPath = function(o,path) {
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = (value instanceof Array)?value:null;
			if(null == arr || arr.length <= index) {
				return false;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return false;
		}
	}
	return true;
};
thx_Objects.hasPathValue = function(o,path) {
	return thx_Objects.getPath(o,path) != null;
};
thx_Objects.getPath = function(o,path) {
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = (value instanceof Array)?value:null;
			if(null == arr) {
				return null;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return null;
		}
	}
	return current;
};
thx_Objects.getPathOption = function(o,path) {
	var value = thx_Objects.getPath(o,path);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Objects.getPathOr = function(o,path,alt) {
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = (value instanceof Array)?value:null;
			if(null == arr) {
				return null;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return alt;
		}
	}
	return current;
};
thx_Objects.setPath = function(o,path,val) {
	var paths = path.split(".");
	var current = o;
	var _g1 = 0;
	var _g = paths.length - 1;
	while(_g1 < _g) {
		var i = _g1++;
		var currentPath = paths[i];
		var nextPath = paths[i + 1];
		if(thx_Strings.DIGITS.match(currentPath) || currentPath == "*") {
			var index = currentPath == "*"?current.length:Std.parseInt(currentPath);
			if(current[index] == null) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[index] = [];
				} else {
					current[index] = { };
				}
			}
			current = current[index];
		} else {
			if(!Object.prototype.hasOwnProperty.call(current,currentPath)) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[currentPath] = [];
				} else {
					current[currentPath] = { };
				}
			}
			current = Reflect.field(current,currentPath);
		}
	}
	var tmp = paths[paths.length - 1];
	if(thx_Strings.DIGITS.match(tmp)) {
		current[Std.parseInt(tmp)] = val;
	} else if(tmp == "*") {
		current.push(val);
	} else {
		current[tmp] = val;
	}
	return o;
};
thx_Objects.removePath = function(o,path) {
	var paths = path.split(".");
	var target = paths.pop();
	try {
		var sub = thx_Arrays.reduce(paths,function(existing,nextPath) {
			if(nextPath == "*") {
				return existing.pop();
			} else if(thx_Strings.DIGITS.match(nextPath)) {
				return existing[Std.parseInt(nextPath)];
			} else {
				return Reflect.field(existing,nextPath);
			}
		},o);
		if(null != sub) {
			Reflect.deleteField(sub,target);
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
	}
	return o;
};
var thx_Options = function() { };
thx_Options.__name__ = ["thx","Options"];
thx_Options.ofValue = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.maybe = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.equals = function(a,b,eq) {
	switch(a[1]) {
	case 0:
		if(b[1] == 0) {
			var a1 = a[2];
			var b1 = b[2];
			if(null == eq) {
				eq = function(a2,b2) {
					return a2 == b2;
				};
			}
			return eq(a1,b1);
		} else {
			return false;
		}
		break;
	case 1:
		if(b[1] == 1) {
			return true;
		} else {
			return false;
		}
		break;
	}
};
thx_Options.equalsValue = function(a,b,eq) {
	return thx_Options.equals(a,null == b?haxe_ds_Option.None:haxe_ds_Option.Some(b),eq);
};
thx_Options.map = function(option,callback) {
	switch(option[1]) {
	case 0:
		return haxe_ds_Option.Some(callback(option[2]));
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.ap = function(option,fopt) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return thx_Options.map(fopt,function(f) {
			return f(v);
		});
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.flatMap = function(option,callback) {
	switch(option[1]) {
	case 0:
		return callback(option[2]);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.join = function(option) {
	switch(option[1]) {
	case 0:
		return option[2];
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.cata = function(option,ifNone,f) {
	switch(option[1]) {
	case 0:
		return f(option[2]);
	case 1:
		return ifNone;
	}
};
thx_Options.foldLeft = function(option,b,f) {
	switch(option[1]) {
	case 0:
		return f(b,option[2]);
	case 1:
		return b;
	}
};
thx_Options.foldMap = function(option,f,m) {
	var tmp = thx_Options.map(option,f);
	var tmp1 = thx__$Monoid_Monoid_$Impl_$.get_zero(m);
	var _e = m;
	return thx_Options.foldLeft(tmp,tmp1,function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	});
};
thx_Options.filter = function(option,f) {
	if(option[1] == 0) {
		if(f(option[2])) {
			return option;
		} else {
			return haxe_ds_Option.None;
		}
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Options.toArray = function(option) {
	switch(option[1]) {
	case 0:
		return [option[2]];
	case 1:
		return [];
	}
};
thx_Options.toBool = function(option) {
	switch(option[1]) {
	case 0:
		return true;
	case 1:
		return false;
	}
};
thx_Options.isNone = function(option) {
	return !thx_Options.toBool(option);
};
thx_Options.toOption = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.get = function(option) {
	switch(option[1]) {
	case 0:
		return option[2];
	case 1:
		return null;
	}
};
thx_Options.getOrElse = function(option,alt) {
	switch(option[1]) {
	case 0:
		return option[2];
	case 1:
		return alt;
	}
};
thx_Options.orElse = function(option,alt) {
	switch(option[1]) {
	case 0:
		return option;
	case 1:
		return alt;
	}
};
thx_Options.all = function(option,f) {
	switch(option[1]) {
	case 0:
		return f(option[2]);
	case 1:
		return true;
	}
};
thx_Options.any = function(option,f) {
	switch(option[1]) {
	case 0:
		return f(option[2]);
	case 1:
		return false;
	}
};
thx_Options.traverseValidation = function(option,f) {
	switch(option[1]) {
	case 0:
		return thx__$Validation_Validation_$Impl_$.ap(f(option[2]),thx_Either.Right(function(v) {
			return haxe_ds_Option.Some(v);
		}),function(e1,e2) {
			throw new js__$Boot_HaxeError("Unreachable");
		});
	case 1:
		return thx_Either.Right(haxe_ds_Option.None);
	}
};
thx_Options.toSuccess = function(option,error) {
	switch(option[1]) {
	case 0:
		return thx_Either.Right(option[2]);
	case 1:
		return thx_Either.Left(error);
	}
};
thx_Options.toSuccessNel = function(option,error) {
	switch(option[1]) {
	case 0:
		return thx_Either.Right(option[2]);
	case 1:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
	}
};
thx_Options.toFailure = function(error,value) {
	switch(error[1]) {
	case 0:
		return thx_Either.Left(error[2]);
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toFailureNel = function(error,value) {
	switch(error[1]) {
	case 0:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error[2]));
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.ap2 = function(f,v1,v2) {
	return thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(f)));
};
thx_Options.ap3 = function(f,v1,v2,v3) {
	var f1 = f;
	return thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	}))));
};
thx_Options.ap4 = function(f,v1,v2,v3,v4) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})))));
};
thx_Options.ap5 = function(f,v1,v2,v3,v4,v5) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	}))))));
};
thx_Options.ap6 = function(f,v1,v2,v3,v4,v5,v6) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})))))));
};
thx_Options.ap7 = function(f,v1,v2,v3,v4,v5,v6,v7) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	}))))))));
};
thx_Options.ap8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx_Options.ap(v8,thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})))))))));
};
var thx_Orderings = function() { };
thx_Orderings.__name__ = ["thx","Orderings"];
thx_Orderings.negate = function(o) {
	switch(o[1]) {
	case 0:
		return thx_OrderingImpl.GT;
	case 1:
		return thx_OrderingImpl.LT;
	case 2:
		return thx_OrderingImpl.EQ;
	}
};
var thx__$ReadonlyArray_ReadonlyArray_$Impl_$ = {};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__name__ = ["thx","_ReadonlyArray","ReadonlyArray_Impl_"];
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.empty = function() {
	return [];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.lastIndexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var len = this1.length;
	var _g1 = 0;
	while(_g1 < len) {
		var i = _g1++;
		if(eq(el,this1[len - i - 1])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get = function(this1,index) {
	return this1[index];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.head = function(this1) {
	return this1[0];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.tail = function(this1) {
	return this1.slice(1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reduce = function(this1,arr,f,initial) {
	var _g = 0;
	while(_g < arr.length) {
		var v = arr[_g];
		++_g;
		initial = f(initial,v);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reducei = function(array,f,initial) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		initial = f(initial,array[i],i);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reverse = function(this1) {
	var arr = this1.slice();
	arr.reverse();
	return arr;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.toArray = function(this1) {
	return this1.slice();
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unsafe = function(this1) {
	return this1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.concat = function(this1,that) {
	return this1.concat(that);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAfter = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		pos = this1.length - 1;
	}
	var pos1 = pos + 1;
	return this1.slice(0,pos1).concat([el]).concat(this1.slice(pos1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertBefore = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replace = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		throw new thx_Error("unable to find reference element",null,{ fileName : "ReadonlyArray.hx", lineNumber : 91, className : "thx._ReadonlyArray.ReadonlyArray_Impl_", methodName : "replace"});
	}
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replaceAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.remove = function(this1,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,el,eq);
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.removeAt = function(this1,pos) {
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.prepend = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.append = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unshift = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.shift = function(this1) {
	if(this1.length == 0) {
		return { _0 : null, _1 : this1};
	}
	return { _0 : this1[0], _1 : this1.slice(0,0).concat(this1.slice(1))};
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.push = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.pop = function(this1) {
	if(this1.length == 0) {
		return { _0 : null, _1 : this1};
	}
	var value = this1[this1.length - 1];
	var pos = this1.length - 1;
	var array = this1.slice(0,pos).concat(this1.slice(pos + 1));
	return { _0 : value, _1 : array};
};
var thx__$Result_Result_$Impl_$ = {};
thx__$Result_Result_$Impl_$.__name__ = ["thx","_Result","Result_Impl_"];
thx__$Result_Result_$Impl_$.success = function(value) {
	return thx_Either.Right(value);
};
thx__$Result_Result_$Impl_$.failure = function(error) {
	return thx_Either.Left(error);
};
thx__$Result_Result_$Impl_$.optionValue = function(this1) {
	if(this1[1] == 1) {
		return haxe_ds_Option.Some(this1[2]);
	} else {
		return haxe_ds_Option.None;
	}
};
thx__$Result_Result_$Impl_$.optionError = function(this1) {
	if(this1[1] == 0) {
		return haxe_ds_Option.Some(this1[2]);
	} else {
		return haxe_ds_Option.None;
	}
};
thx__$Result_Result_$Impl_$.value = function(this1) {
	if(this1[1] == 1) {
		return this1[2];
	} else {
		return null;
	}
};
thx__$Result_Result_$Impl_$.error = function(this1) {
	if(this1[1] == 0) {
		return this1[2];
	} else {
		return null;
	}
};
thx__$Result_Result_$Impl_$.get_isSuccess = function(this1) {
	if(this1[1] == 1) {
		return true;
	} else {
		return false;
	}
};
thx__$Result_Result_$Impl_$.get_isFailure = function(this1) {
	if(this1[1] == 0) {
		return true;
	} else {
		return false;
	}
};
var thx__$Semigroup_Semigroup_$Impl_$ = {};
thx__$Semigroup_Semigroup_$Impl_$.__name__ = ["thx","_Semigroup","Semigroup_Impl_"];
thx__$Semigroup_Semigroup_$Impl_$.get_append = function(this1) {
	return this1;
};
var thx__$Set_Set_$Impl_$ = {};
thx__$Set_Set_$Impl_$.__name__ = ["thx","_Set","Set_Impl_"];
thx__$Set_Set_$Impl_$.createString = function(it) {
	var map = new haxe_ds_StringMap();
	var set = map;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createInt = function(it) {
	var map = new haxe_ds_IntMap();
	var set = map;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createObject = function(it) {
	var map = new haxe_ds_ObjectMap();
	var set = map;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createEnum = function(arr) {
	var map = new haxe_ds_EnumValueMap();
	var set = map;
	if(null != arr) {
		thx__$Set_Set_$Impl_$.pushMany(set,arr);
	}
	return set;
};
thx__$Set_Set_$Impl_$._new = function(map) {
	return map;
};
thx__$Set_Set_$Impl_$.add = function(this1,v) {
	if(this1.exists(v)) {
		return false;
	} else {
		this1.set(v,true);
		return true;
	}
};
thx__$Set_Set_$Impl_$.copy = function(this1) {
	var inst = thx__$Set_Set_$Impl_$.empty(this1);
	var tmp = this1.keys();
	while(tmp.hasNext()) inst.set(tmp.next(),true);
	return inst;
};
thx__$Set_Set_$Impl_$.empty = function(this1) {
	return Type.createInstance(this1 == null?null:js_Boot.getClass(this1),[]);
};
thx__$Set_Set_$Impl_$.difference = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.copy(this1);
	var tmp = $iterator(thx__$Set_Set_$Impl_$)(set);
	while(tmp.hasNext()) result.remove(tmp.next());
	return result;
};
thx__$Set_Set_$Impl_$.filter = function(this1,predicate) {
	var tmp = thx__$Set_Set_$Impl_$.empty(this1);
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		if(predicate(v)) {
			thx__$Set_Set_$Impl_$.add(acc,v);
		}
		return acc;
	},tmp);
};
thx__$Set_Set_$Impl_$.map = function(this1,f) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		acc.push(f(v));
		return acc;
	},[]);
};
thx__$Set_Set_$Impl_$.exists = function(this1,v) {
	return this1.exists(v);
};
thx__$Set_Set_$Impl_$.remove = function(this1,v) {
	return this1.remove(v);
};
thx__$Set_Set_$Impl_$.intersection = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.empty(this1);
	var tmp = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(tmp.hasNext()) {
		var item = tmp.next();
		if(set.exists(item)) {
			result.set(item,true);
		}
	}
	return result;
};
thx__$Set_Set_$Impl_$.push = function(this1,v) {
	this1.set(v,true);
};
thx__$Set_Set_$Impl_$.pushMany = function(this1,values) {
	var tmp = $iterator(values)();
	while(tmp.hasNext()) this1.set(tmp.next(),true);
};
thx__$Set_Set_$Impl_$.reduce = function(this1,handler,acc) {
	var tmp = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(tmp.hasNext()) acc = handler(acc,tmp.next());
	return acc;
};
thx__$Set_Set_$Impl_$.iterator = function(this1) {
	return this1.keys();
};
thx__$Set_Set_$Impl_$.union = function(this1,set) {
	var newset = thx__$Set_Set_$Impl_$.copy(this1);
	thx__$Set_Set_$Impl_$.pushMany(newset,thx__$Set_Set_$Impl_$.toArray(set));
	return newset;
};
thx__$Set_Set_$Impl_$.toArray = function(this1) {
	var arr = [];
	var tmp = this1.keys();
	while(tmp.hasNext()) arr.push(tmp.next());
	return arr;
};
thx__$Set_Set_$Impl_$.toString = function(this1) {
	return "{" + thx__$Set_Set_$Impl_$.toArray(this1).join(", ") + "}";
};
thx__$Set_Set_$Impl_$.get_length = function(this1) {
	var l = 0;
	var tmp = this1.iterator();
	while(tmp.hasNext()) {
		tmp.next();
		++l;
	}
	return l;
};
var thx_Strings = function() { };
thx_Strings.__name__ = ["thx","Strings"];
thx_Strings.after = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.afterLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.capitalize = function(s) {
	return HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length - 1);
};
thx_Strings.capitalizeWords = function(value,whiteSpaceOnly) {
	if(whiteSpaceOnly == null) {
		whiteSpaceOnly = false;
	}
	if(whiteSpaceOnly) {
		return thx_Strings.UCWORDSWS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	} else {
		return thx_Strings.UCWORDS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	}
};
thx_Strings.canonicalizeNewlines = function(value) {
	return value.replace(thx_Strings.CANONICALIZE_LINES.r,"\n");
};
thx_Strings.caseInsensitiveCompare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	} else if(null == b) {
		return 1;
	}
	return haxe_Utf8.compare(a.toLowerCase(),b.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWith = function(s,end) {
	return StringTools.endsWith(s.toLowerCase(),end.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWithAny = function(s,values) {
	return thx_Strings.endsWithAny(s.toLowerCase(),values.map(function(v) {
		return v.toLowerCase();
	}));
};
thx_Strings.caseInsensitiveStartsWith = function(s,start) {
	return StringTools.startsWith(s.toLowerCase(),start.toLowerCase());
};
thx_Strings.caseInsensitiveStartsWithAny = function(s,values) {
	return thx_Strings.startsWithAny(s.toLowerCase(),values.map(function(v) {
		return v.toLowerCase();
	}));
};
thx_Strings.collapse = function(value) {
	return StringTools.trim(value).replace(thx_Strings.WSG.r," ");
};
thx_Strings.compare = function(a,b) {
	return haxe_Utf8.compare(a,b);
};
thx_Strings.caseInsensitiveContains = function(s,test) {
	return s.toLowerCase().indexOf(test.toLowerCase()) >= 0;
};
thx_Strings.contains = function(s,test) {
	return s.indexOf(test) >= 0;
};
thx_Strings.count = function(s,test) {
	return s.split(test).length - 1;
};
thx_Strings.caseInsensitiveContainsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(a1) {
		return thx_Strings.caseInsensitiveContains(s1,a1);
	});
};
thx_Strings.containsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(a1) {
		return thx_Strings.contains(s1,a1);
	});
};
thx_Strings.dasherize = function(s) {
	return StringTools.replace(s,"_","-");
};
thx_Strings.diffAt = function(a,b) {
	var a1 = a.length;
	var b1 = b.length;
	var min = a1 < b1?a1:b1;
	var _g1 = 0;
	var _g = min;
	while(_g1 < _g) {
		var i = _g1++;
		if(a.substring(i,i + 1) != b.substring(i,i + 1)) {
			return i;
		}
	}
	return min;
};
thx_Strings.ellipsis = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen < symboll) {
			return HxOverrides.substr(symbol,symboll - maxlen,maxlen);
		} else {
			return HxOverrides.substr(s,0,maxlen - symboll) + symbol;
		}
	} else {
		return s;
	}
};
thx_Strings.ellipsisMiddle = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen <= symboll) {
			return thx_Strings.ellipsis(s,maxlen,symbol);
		}
		var hll = Math.ceil((maxlen - symboll) / 2);
		var hlr = Math.floor((maxlen - symboll) / 2);
		return HxOverrides.substr(s,0,hll) + symbol + HxOverrides.substr(s,sl - hlr,hlr);
	} else {
		return s;
	}
};
thx_Strings.endsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(end) {
		return StringTools.endsWith(s,end);
	});
};
thx_Strings.filter = function(s,predicate) {
	return s.split("").filter(predicate).join("");
};
thx_Strings.filterCharcode = function(s,predicate) {
	return thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	}).filter(predicate).map(function(i) {
		return String.fromCharCode(i);
	}).join("");
};
thx_Strings.from = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos);
	}
};
thx_Strings.hashCode = function(value) {
	var code = 0;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) {
		var c = HxOverrides.cca(value,_g1++);
		code = (haxe__$Int32_Int32_$Impl_$.mul(thx_Strings.HASCODE_MUL,code) + c | 0) % thx_Strings.HASCODE_MAX;
	}
	return code;
};
thx_Strings.hasContent = function(value) {
	if(value != null) {
		return value.length > 0;
	} else {
		return false;
	}
};
thx_Strings.humanize = function(s) {
	return StringTools.replace(thx_Strings.underscore(s),"_"," ");
};
thx_Strings.isAlpha = function(s) {
	if(s.length > 0) {
		return !thx_Strings.IS_ALPHA.match(s);
	} else {
		return false;
	}
};
thx_Strings.isAlphaNum = function(value) {
	return thx_Strings.ALPHANUM.match(value);
};
thx_Strings.isBreakingWhitespace = function(value) {
	return !thx_Strings.IS_BREAKINGWHITESPACE.match(value);
};
thx_Strings.isLowerCase = function(value) {
	return value.toLowerCase() == value;
};
thx_Strings.isUpperCase = function(value) {
	return value.toUpperCase() == value;
};
thx_Strings.ifEmpty = function(value,alt) {
	if(null != value && "" != value) {
		return value;
	} else {
		return alt;
	}
};
thx_Strings.isDigitsOnly = function(value) {
	return thx_Strings.DIGITS.match(value);
};
thx_Strings.isEmpty = function(value) {
	if(value != null) {
		return value == "";
	} else {
		return true;
	}
};
thx_Strings.lowerCaseFirst = function(value) {
	return value.substring(0,1).toLowerCase() + value.substring(1);
};
thx_Strings.random = function(value,length) {
	if(length == null) {
		length = 1;
	}
	return HxOverrides.substr(value,Math.floor((value.length - length + 1) * Math.random()),length);
};
thx_Strings.randomSequence = function(seed,length) {
	return thx_Ints.range(0,length).map(function(_) {
		return thx_Strings.random(seed);
	}).join("");
};
thx_Strings.randomSequence64 = function(length) {
	return thx_Strings.randomSequence(haxe_crypto_Base64.CHARS,length);
};
thx_Strings.iterator = function(s) {
	return HxOverrides.iter(s.split(""));
};
thx_Strings.map = function(value,callback) {
	return value.split("").map(callback);
};
thx_Strings.remove = function(value,toremove) {
	return StringTools.replace(value,toremove,"");
};
thx_Strings.removeAfter = function(value,toremove) {
	if(StringTools.endsWith(value,toremove)) {
		return value.substring(0,value.length - toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeAt = function(value,index,length) {
	return value.substring(0,index) + value.substring(index + length);
};
thx_Strings.removeBefore = function(value,toremove) {
	if(StringTools.startsWith(value,toremove)) {
		return value.substring(toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeOne = function(value,toremove) {
	var pos = value.indexOf(toremove);
	if(pos < 0) {
		return value;
	}
	return value.substring(0,pos) + value.substring(pos + toremove.length);
};
thx_Strings.repeat = function(s,times) {
	var _g = [];
	var _g2 = 0;
	while(_g2 < times) {
		++_g2;
		_g.push(s);
	}
	return _g.join("");
};
thx_Strings.reverse = function(s) {
	var arr = s.split("");
	arr.reverse();
	return arr.join("");
};
thx_Strings.quote = function(s) {
	if(s.indexOf("\"") < 0) {
		return "\"" + s + "\"";
	} else if(s.indexOf("'") < 0) {
		return "'" + s + "'";
	} else {
		return "\"" + StringTools.replace(s,"\"","\\\"") + "\"";
	}
};
thx_Strings.splitOnce = function(s,separator) {
	var pos = s.indexOf(separator);
	if(pos < 0) {
		return [s];
	}
	return [s.substring(0,pos),s.substring(pos + separator.length)];
};
thx_Strings.startsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(start) {
		return StringTools.startsWith(s,start);
	});
};
thx_Strings.stripTags = function(s) {
	return s.replace(thx_Strings.STRIPTAGS.r,"");
};
thx_Strings.surround = function(s,left,right) {
	return "" + left + s + (null == right?left:right);
};
thx_Strings.toArray = function(s) {
	return s.split("");
};
thx_Strings.toCharcodes = function(s) {
	return thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	});
};
thx_Strings.toChunks = function(s,len) {
	var chunks = [];
	while(s.length > 0) {
		chunks.push(HxOverrides.substr(s,0,len));
		s = HxOverrides.substr(s,len,s.length - len);
	}
	return chunks;
};
thx_Strings.toLines = function(s) {
	return thx_Strings.SPLIT_LINES.split(s);
};
thx_Strings.trimChars = function(value,charlist) {
	return thx_Strings.trimCharsRight(thx_Strings.trimCharsLeft(value,charlist),charlist);
};
thx_Strings.trimCharsLeft = function(value,charlist) {
	var pos = 0;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) if(charlist.indexOf(value.charAt(_g1++)) >= 0) {
		++pos;
	} else {
		break;
	}
	return value.substring(pos);
};
thx_Strings.trimCharsRight = function(value,charlist) {
	var len = value.length;
	var pos = len;
	var i;
	var _g1 = 0;
	while(_g1 < len) {
		i = len - _g1++ - 1;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			pos = i;
		} else {
			break;
		}
	}
	return value.substring(0,pos);
};
thx_Strings.underscore = function(s) {
	s = s.replace(new RegExp("::","g".split("u").join("")),"/");
	s = s.replace(new RegExp("([A-Z]+)([A-Z][a-z])","g".split("u").join("")),"$1_$2");
	s = s.replace(new RegExp("([a-z\\d])([A-Z])","g".split("u").join("")),"$1_$2");
	s = s.replace(new RegExp("-","g".split("u").join("")),"_");
	return s.toLowerCase();
};
thx_Strings.upperCaseFirst = function(value) {
	return value.substring(0,1).toUpperCase() + value.substring(1);
};
thx_Strings.upTo = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return value;
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.wrapColumns = function(s,columns,indent,newline) {
	if(newline == null) {
		newline = "\n";
	}
	if(indent == null) {
		indent = "";
	}
	if(columns == null) {
		columns = 78;
	}
	return thx_Strings.SPLIT_LINES.split(s).map(function(part) {
		return thx_Strings.wrapLine(StringTools.trim(part.replace(thx_Strings.WSG.r," ")),columns,indent,newline);
	}).join(newline);
};
thx_Strings.upperMatch = function(re) {
	return re.matched(0).toUpperCase();
};
thx_Strings.wrapLine = function(s,columns,indent,newline) {
	var parts = [];
	var pos = 0;
	var len = s.length;
	var ilen = indent.length;
	columns -= ilen;
	while(true) {
		if(pos + columns >= len - ilen) {
			parts.push(s.substring(pos));
			break;
		}
		var i = 0;
		while(!StringTools.isSpace(s,pos + columns - i) && i < columns) ++i;
		if(i == columns) {
			i = 0;
			while(!StringTools.isSpace(s,pos + columns + i) && pos + columns + i < len) ++i;
			parts.push(s.substring(pos,pos + columns + i));
			pos += columns + i + 1;
		} else {
			parts.push(s.substring(pos,pos + columns - i));
			pos += columns - i + 1;
		}
	}
	return indent + parts.join(newline + indent);
};
thx_Strings.lpad = function(s,$char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return thx_Strings.repeat($char,diff) + s;
	} else {
		return s;
	}
};
thx_Strings.rpad = function(s,$char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return s + thx_Strings.repeat($char,diff);
	} else {
		return s;
	}
};
var thx_TimePeriod = { __ename__ : ["thx","TimePeriod"], __constructs__ : ["Second","Minute","Hour","Day","Week","Month","Year"] };
thx_TimePeriod.Second = ["Second",0];
thx_TimePeriod.Second.__enum__ = thx_TimePeriod;
thx_TimePeriod.Minute = ["Minute",1];
thx_TimePeriod.Minute.__enum__ = thx_TimePeriod;
thx_TimePeriod.Hour = ["Hour",2];
thx_TimePeriod.Hour.__enum__ = thx_TimePeriod;
thx_TimePeriod.Day = ["Day",3];
thx_TimePeriod.Day.__enum__ = thx_TimePeriod;
thx_TimePeriod.Week = ["Week",4];
thx_TimePeriod.Week.__enum__ = thx_TimePeriod;
thx_TimePeriod.Month = ["Month",5];
thx_TimePeriod.Month.__enum__ = thx_TimePeriod;
thx_TimePeriod.Year = ["Year",6];
thx_TimePeriod.Year.__enum__ = thx_TimePeriod;
var thx_Timer = function() { };
thx_Timer.__name__ = ["thx","Timer"];
thx_Timer.debounce = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var cancel = thx_Functions.noop;
	var poll = function() {
		cancel();
		cancel = thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
		}
		poll();
	};
};
thx_Timer.throttle = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var waiting = false;
	var poll = function() {
		waiting = true;
		thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
			return;
		}
		if(waiting) {
			return;
		}
		poll();
	};
};
thx_Timer.repeat = function(callback,delayms) {
	var id = setInterval(callback,delayms);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.delay = function(callback,delayms) {
	var id = setTimeout(callback,delayms);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.frame = function(callback) {
	var cancelled = false;
	var f = thx_Functions.noop;
	var current = performance.now();
	var next;
	f = function() {
		if(cancelled) {
			return;
		}
		next = performance.now();
		callback(next - current);
		current = next;
		requestAnimationFrame(f);
	};
	requestAnimationFrame(f);
	return function() {
		cancelled = true;
	};
};
thx_Timer.nextFrame = function(callback) {
	var id = requestAnimationFrame(callback);
	return function() {
		cancelAnimationFrame(id);
	};
};
thx_Timer.immediate = function(callback) {
	var id = setImmediate(callback);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.clear = function(id) {
	clearTimeout(id);
	return;
};
thx_Timer.time = function() {
	return performance.now();
};
thx_Timer.resolution = function() {
	if(null != thx_Timer._resolution) {
		return thx_Timer._resolution;
	}
	var start = performance.now();
	var end;
	while(true) {
		end = performance.now();
		if(!(end - start == 0)) {
			break;
		}
	}
	return thx_Timer._resolution = end - start;
};
var thx__$Timestamp_Timestamp_$Impl_$ = {};
thx__$Timestamp_Timestamp_$Impl_$.__name__ = ["thx","_Timestamp","Timestamp_Impl_"];
thx__$Timestamp_Timestamp_$Impl_$.create = function(year,month,day,hour,minute,second) {
	return thx_Dates.create(year,month,day,hour,minute,second).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.now = function() {
	return new Date().getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromDate = function(d) {
	return d.getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromString = function(s) {
	return HxOverrides.strDate(s).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.toDate = function(this1) {
	return new Date(this1);
};
thx__$Timestamp_Timestamp_$Impl_$.toString = function(this1) {
	return HxOverrides.dateStr(new Date(this1));
};
thx__$Timestamp_Timestamp_$Impl_$.snapNext = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.ceil(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.ceil(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.ceil(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + 1,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + 7 - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + 1,1,0,0,0).getTime();
	case 6:
		return thx_Dates.create(new Date(this1).getFullYear() + 1,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapPrev = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.floor(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.floor(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.floor(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth(),1,0,0,0).getTime();
	case 6:
		return thx_Dates.create(new Date(this1).getFullYear(),0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapTo = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.round(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.round(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.round(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		var mod = d.getHours() >= 12?1:0;
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + mod,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		var mod1 = wd < 3?-wd:wd > 3?7 - wd:d1.getHours() < 12?-wd:7 - wd;
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + mod1,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		var mod2 = d2.getDate() > Math.round(DateTools.getMonthDays(d2) / 2)?1:0;
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + mod2,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		var mod3 = this1 > new Date(d3.getFullYear(),6,2,0,0,0).getTime()?1:0;
		return thx_Dates.create(d3.getFullYear() + mod3,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.r = function(t,v) {
	return Math.round(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.f = function(t,v) {
	return Math.floor(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.c = function(t,v) {
	return Math.ceil(t / v) * v;
};
var thx__$Tuple_Tuple0_$Impl_$ = {};
thx__$Tuple_Tuple0_$Impl_$.__name__ = ["thx","_Tuple","Tuple0_Impl_"];
thx__$Tuple_Tuple0_$Impl_$._new = function() {
	return thx_Nil.nil;
};
thx__$Tuple_Tuple0_$Impl_$["with"] = function(this1,v) {
	return v;
};
thx__$Tuple_Tuple0_$Impl_$.toString = function(this1) {
	return "Tuple0()";
};
thx__$Tuple_Tuple0_$Impl_$.toNil = function(this1) {
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$.nilToTuple = function(v) {
	return thx_Nil.nil;
};
var thx__$Tuple_Tuple1_$Impl_$ = {};
thx__$Tuple_Tuple1_$Impl_$.__name__ = ["thx","_Tuple","Tuple1_Impl_"];
thx__$Tuple_Tuple1_$Impl_$._new = function(_0) {
	return _0;
};
thx__$Tuple_Tuple1_$Impl_$.get__0 = function(this1) {
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1, _1 : v};
};
thx__$Tuple_Tuple1_$Impl_$.toString = function(this1) {
	return "Tuple1(" + Std.string(this1) + ")";
};
thx__$Tuple_Tuple1_$Impl_$.arrayToTuple = function(v) {
	return v[0];
};
var thx__$Tuple_Tuple2_$Impl_$ = {};
thx__$Tuple_Tuple2_$Impl_$.__name__ = ["thx","_Tuple","Tuple2_Impl_"];
thx__$Tuple_Tuple2_$Impl_$.of = function(_0,_1) {
	return { _0 : _0, _1 : _1};
};
thx__$Tuple_Tuple2_$Impl_$._new = function(_0,_1) {
	return { _0 : _0, _1 : _1};
};
thx__$Tuple_Tuple2_$Impl_$.get_left = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$.get_right = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.flip = function(this1) {
	return { _0 : this1._1, _1 : this1._0};
};
thx__$Tuple_Tuple2_$Impl_$.dropLeft = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.dropRight = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1._0, _1 : this1._1, _2 : v};
};
thx__$Tuple_Tuple2_$Impl_$.toString = function(this1) {
	return "Tuple2(" + Std.string(this1._0) + "," + Std.string(this1._1) + ")";
};
thx__$Tuple_Tuple2_$Impl_$.map = function(this1,f) {
	return { _0 : this1._0, _1 : f(this1._1)};
};
thx__$Tuple_Tuple2_$Impl_$.arrayToTuple2 = function(v) {
	return { _0 : v[0], _1 : v[1]};
};
var thx__$Tuple_Tuple3_$Impl_$ = {};
thx__$Tuple_Tuple3_$Impl_$.__name__ = ["thx","_Tuple","Tuple3_Impl_"];
thx__$Tuple_Tuple3_$Impl_$.of = function(_0,_1,_2) {
	return { _0 : _0, _1 : _1, _2 : _2};
};
thx__$Tuple_Tuple3_$Impl_$._new = function(_0,_1,_2) {
	return { _0 : _0, _1 : _1, _2 : _2};
};
thx__$Tuple_Tuple3_$Impl_$.flip = function(this1) {
	return { _0 : this1._2, _1 : this1._1, _2 : this1._0};
};
thx__$Tuple_Tuple3_$Impl_$.dropLeft = function(this1) {
	return { _0 : this1._1, _1 : this1._2};
};
thx__$Tuple_Tuple3_$Impl_$.dropRight = function(this1) {
	return { _0 : this1._0, _1 : this1._1};
};
thx__$Tuple_Tuple3_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : v};
};
thx__$Tuple_Tuple3_$Impl_$.toString = function(this1) {
	return "Tuple3(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + ")";
};
thx__$Tuple_Tuple3_$Impl_$.arrayToTuple3 = function(v) {
	return { _0 : v[0], _1 : v[1], _2 : v[2]};
};
thx__$Tuple_Tuple3_$Impl_$.map = function(this1,f) {
	return { _0 : this1._0, _1 : this1._1, _2 : f(this1._2)};
};
var thx__$Tuple_Tuple4_$Impl_$ = {};
thx__$Tuple_Tuple4_$Impl_$.__name__ = ["thx","_Tuple","Tuple4_Impl_"];
thx__$Tuple_Tuple4_$Impl_$.of = function(_0,_1,_2,_3) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
};
thx__$Tuple_Tuple4_$Impl_$._new = function(_0,_1,_2,_3) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
};
thx__$Tuple_Tuple4_$Impl_$.flip = function(this1) {
	return { _0 : this1._3, _1 : this1._2, _2 : this1._1, _3 : this1._0};
};
thx__$Tuple_Tuple4_$Impl_$.dropLeft = function(this1) {
	return { _0 : this1._1, _1 : this1._2, _2 : this1._3};
};
thx__$Tuple_Tuple4_$Impl_$.dropRight = function(this1) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2};
};
thx__$Tuple_Tuple4_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : v};
};
thx__$Tuple_Tuple4_$Impl_$.toString = function(this1) {
	return "Tuple4(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + ")";
};
thx__$Tuple_Tuple4_$Impl_$.arrayToTuple4 = function(v) {
	return { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3]};
};
var thx__$Tuple_Tuple5_$Impl_$ = {};
thx__$Tuple_Tuple5_$Impl_$.__name__ = ["thx","_Tuple","Tuple5_Impl_"];
thx__$Tuple_Tuple5_$Impl_$.of = function(_0,_1,_2,_3,_4) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
};
thx__$Tuple_Tuple5_$Impl_$._new = function(_0,_1,_2,_3,_4) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
};
thx__$Tuple_Tuple5_$Impl_$.flip = function(this1) {
	return { _0 : this1._4, _1 : this1._3, _2 : this1._2, _3 : this1._1, _4 : this1._0};
};
thx__$Tuple_Tuple5_$Impl_$.dropLeft = function(this1) {
	return { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4};
};
thx__$Tuple_Tuple5_$Impl_$.dropRight = function(this1) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3};
};
thx__$Tuple_Tuple5_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : v};
};
thx__$Tuple_Tuple5_$Impl_$.toString = function(this1) {
	return "Tuple5(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + ")";
};
thx__$Tuple_Tuple5_$Impl_$.arrayToTuple5 = function(v) {
	return { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4]};
};
var thx__$Tuple_Tuple6_$Impl_$ = {};
thx__$Tuple_Tuple6_$Impl_$.__name__ = ["thx","_Tuple","Tuple6_Impl_"];
thx__$Tuple_Tuple6_$Impl_$.of = function(_0,_1,_2,_3,_4,_5) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
};
thx__$Tuple_Tuple6_$Impl_$._new = function(_0,_1,_2,_3,_4,_5) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
};
thx__$Tuple_Tuple6_$Impl_$.flip = function(this1) {
	return { _0 : this1._5, _1 : this1._4, _2 : this1._3, _3 : this1._2, _4 : this1._1, _5 : this1._0};
};
thx__$Tuple_Tuple6_$Impl_$.dropLeft = function(this1) {
	return { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4, _4 : this1._5};
};
thx__$Tuple_Tuple6_$Impl_$.dropRight = function(this1) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4};
};
thx__$Tuple_Tuple6_$Impl_$.toString = function(this1) {
	return "Tuple6(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + "," + Std.string(this1._5) + ")";
};
thx__$Tuple_Tuple6_$Impl_$.arrayToTuple6 = function(v) {
	return { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4], _5 : v[5]};
};
var thx_Types = function() { };
thx_Types.__name__ = ["thx","Types"];
thx_Types.isAnonymousObject = function(v) {
	if(Reflect.isObject(v)) {
		return null == (v == null?null:js_Boot.getClass(v));
	} else {
		return false;
	}
};
thx_Types.isPrimitive = function(v) {
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 1:case 2:case 3:
		return true;
	case 6:
		return Type.getClassName(_g[2]) == "String";
	case 0:case 4:case 5:case 7:case 8:
		return false;
	}
};
thx_Types.isEnumValue = function(v) {
	if(Type["typeof"](v)[1] == 7) {
		return true;
	} else {
		return false;
	}
};
thx_Types.hasSuperClass = function(cls,sup) {
	while(null != cls) {
		if(cls == sup) {
			return true;
		}
		cls = Type.getSuperClass(cls);
	}
	return false;
};
thx_Types.sameType = function(a,b) {
	return thx_Types.toString(Type["typeof"](a)) == thx_Types.toString(Type["typeof"](b));
};
thx_Types.typeInheritance = function(type) {
	switch(type[1]) {
	case 1:
		return ["Int"];
	case 2:
		return ["Float"];
	case 3:
		return ["Bool"];
	case 4:
		return ["{}"];
	case 5:
		return ["Function"];
	case 6:
		var c = type[2];
		var classes = [];
		while(null != c) {
			classes.push(c);
			c = Type.getSuperClass(c);
		}
		return classes.map(Type.getClassName);
	case 7:
		return [Type.getEnumName(type[2])];
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.toString = function(type) {
	switch(type[1]) {
	case 0:
		return "Null";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "{}";
	case 5:
		return "Function";
	case 6:
		return Type.getClassName(type[2]);
	case 7:
		return Type.getEnumName(type[2]);
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.valueTypeInheritance = function(value) {
	return thx_Types.typeInheritance(Type["typeof"](value));
};
thx_Types.valueTypeToString = function(value) {
	return thx_Types.toString(Type["typeof"](value));
};
thx_Types.anyValueToString = function(value) {
	if(js_Boot.__instanceof(value,ValueType)) {
		return thx_Types.toString(value);
	}
	if(js_Boot.__instanceof(value,Class)) {
		return Type.getClassName(value);
	}
	if(js_Boot.__instanceof(value,Enum)) {
		return Type.getEnumName(value);
	}
	return thx_Types.toString(Type["typeof"](value));
};
var thx__$Validation_Validation_$Impl_$ = {};
thx__$Validation_Validation_$Impl_$.__name__ = ["thx","_Validation","Validation_Impl_"];
thx__$Validation_Validation_$Impl_$.validation = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.vnel = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.pure = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.success = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failure = function(e) {
	return thx_Either.Left(e);
};
thx__$Validation_Validation_$Impl_$.nn = function(a,e) {
	if(a == null) {
		return thx_Either.Left(e);
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.successNel = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failureNel = function(e) {
	return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
};
thx__$Validation_Validation_$Impl_$.nnNel = function(a,e) {
	if(a == null) {
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.get_either = function(this1) {
	return this1;
};
thx__$Validation_Validation_$Impl_$.map = function(this1,f) {
	return thx__$Validation_Validation_$Impl_$.ap(this1,thx_Either.Right(f),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	});
};
thx__$Validation_Validation_$Impl_$.foldLeft = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		return f(b,this1[2]);
	}
};
thx__$Validation_Validation_$Impl_$.foldMap = function(this1,f,m) {
	var tmp = thx_Eithers.map(this1,f);
	var tmp1 = thx__$Monoid_Monoid_$Impl_$.get_zero(m);
	var _e = m;
	return thx__$Validation_Validation_$Impl_$.foldLeft(tmp,tmp1,function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	});
};
thx__$Validation_Validation_$Impl_$.ap = function(this1,v,s) {
	switch(this1[1]) {
	case 0:
		var e0 = this1[2];
		var _g = v;
		switch(_g[1]) {
		case 0:
			return thx_Either.Left((thx__$Semigroup_Semigroup_$Impl_$.get_append(s))(e0,_g[2]));
		case 1:
			return thx_Either.Left(e0);
		}
		break;
	case 1:
		var a = this1[2];
		var _g1 = v;
		switch(_g1[1]) {
		case 0:
			return thx_Either.Left(_g1[2]);
		case 1:
			return thx_Either.Right(_g1[2](a));
		}
		break;
	}
};
thx__$Validation_Validation_$Impl_$.zip = function(this1,v,s) {
	return thx__$Validation_Validation_$Impl_$.ap(this1,thx_Eithers.map(v,function(b) {
		var _1 = b;
		return function(_0) {
			return thx__$Tuple_Tuple2_$Impl_$.of(_0,_1);
		};
	}),s);
};
thx__$Validation_Validation_$Impl_$.leftMap = function(this1,f) {
	return thx_Eithers.leftMap(this1,f);
};
thx__$Validation_Validation_$Impl_$.wrapNel = function(this1) {
	return thx_Eithers.leftMap(this1,thx__$Nel_Nel_$Impl_$.pure);
};
thx__$Validation_Validation_$Impl_$.ensure = function(this1,p,error) {
	if(this1[1] == 1) {
		if(p(this1[2])) {
			return this1;
		} else {
			return thx_Either.Left(error);
		}
	} else {
		return this1;
	}
};
thx__$Validation_Validation_$Impl_$.flatMapV = function(this1,f) {
	switch(this1[1]) {
	case 0:
		return thx_Either.Left(this1[2]);
	case 1:
		return f(this1[2]);
	}
};
thx__$Validation_Validation_$Impl_$.val2 = function(f,v1,v2,s) {
	return thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(f)),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s);
};
thx__$Validation_Validation_$Impl_$.val3 = function(f,v1,v2,v3,s) {
	var f1 = f;
	return thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	})),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s);
};
thx__$Validation_Validation_$Impl_$.val4 = function(f,v1,v2,v3,v4,s) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val5 = function(f,v1,v2,v3,v4,v5,s) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	})),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val6 = function(f,v1,v2,v3,v4,v5,v6,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})),function(e11,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val7 = function(f,v1,v2,v3,v4,v5,v6,v7,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	})),function(e11,e21) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})),function(e11,e21) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s),s),s),s),s);
};
var thx_ValidationExtensions = function() { };
thx_ValidationExtensions.__name__ = ["thx","ValidationExtensions"];
thx_ValidationExtensions.leftMapNel = function(n,f) {
	return thx_Eithers.leftMap(n,function(n1) {
		return thx__$Nel_Nel_$Impl_$.map(n1,f);
	});
};
thx_ValidationExtensions.ensureNel = function(v,p,error) {
	if(v[1] == 1) {
		var a = v[2];
		if(p(a)) {
			return v;
		} else {
			return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
		}
	} else {
		return v;
	}
};
var thx_culture_DateFormatInfo = function(calendarWeekRuleIndex,calendarWeekRuleName,designatorAm,designatorPm,firstDayOfWeekIndex,firstDayOfWeekName,nameCalendar,nameCalendarNative,nameDays,nameDaysAbbreviated,nameDaysShortest,nameMonths,nameMonthsAbbreviated,nameMonthGenitives,nameMonthGenitivesAbbreviated,patternDateLong,patternDateShort,patternDateTimeFull,patternDateTimeSortable,patternMonthDay,patternRfc1123,patternTimeLong,patternTimeShort,patternUniversalSortable,patternYearMonth,separatorDate,separatorTime) {
	this.calendarWeekRuleIndex = calendarWeekRuleIndex;
	this.calendarWeekRuleName = calendarWeekRuleName;
	this.designatorAm = designatorAm;
	this.designatorPm = designatorPm;
	this.firstDayOfWeekIndex = firstDayOfWeekIndex;
	this.firstDayOfWeekName = firstDayOfWeekName;
	this.nameCalendar = nameCalendar;
	this.nameCalendarNative = nameCalendarNative;
	this.nameDays = nameDays;
	this.nameDaysAbbreviated = nameDaysAbbreviated;
	this.nameDaysShortest = nameDaysShortest;
	this.nameMonths = nameMonths;
	this.nameMonthsAbbreviated = nameMonthsAbbreviated;
	this.nameMonthGenitives = nameMonthGenitives;
	this.nameMonthGenitivesAbbreviated = nameMonthGenitivesAbbreviated;
	this.patternDateLong = patternDateLong;
	this.patternDateShort = patternDateShort;
	this.patternDateTimeFull = patternDateTimeFull;
	this.patternDateTimeSortable = patternDateTimeSortable;
	this.patternMonthDay = patternMonthDay;
	this.patternRfc1123 = patternRfc1123;
	this.patternTimeLong = patternTimeLong;
	this.patternTimeShort = patternTimeShort;
	this.patternUniversalSortable = patternUniversalSortable;
	this.patternYearMonth = patternYearMonth;
	this.separatorDate = separatorDate;
	this.separatorTime = separatorTime;
};
thx_culture_DateFormatInfo.__name__ = ["thx","culture","DateFormatInfo"];
thx_culture_DateFormatInfo.fromObject = function(o) {
	return new thx_culture_DateFormatInfo(o.calendarWeekRuleIndex,o.calendarWeekRuleName,o.designatorAm,o.designatorPm,o.firstDayOfWeekIndex,o.firstDayOfWeekName,o.nameCalendar,o.nameCalendarNative,o.nameDays,o.nameDaysAbbreviated,o.nameDaysShortest,o.nameMonths,o.nameMonthsAbbreviated,o.nameMonthGenitives,o.nameMonthGenitivesAbbreviated,o.patternDateLong,o.patternDateShort,o.patternDateTimeFull,o.patternDateTimeSortable,o.patternMonthDay,o.patternRfc1123,o.patternTimeLong,o.patternTimeShort,o.patternUniversalSortable,o.patternYearMonth,o.separatorDate,o.separatorTime);
};
thx_culture_DateFormatInfo.prototype = {
	calendarWeekRuleIndex: null
	,calendarWeekRuleName: null
	,designatorAm: null
	,designatorPm: null
	,firstDayOfWeekIndex: null
	,firstDayOfWeekName: null
	,nameCalendar: null
	,nameCalendarNative: null
	,nameDays: null
	,nameDaysAbbreviated: null
	,nameDaysShortest: null
	,nameMonths: null
	,nameMonthsAbbreviated: null
	,nameMonthGenitives: null
	,nameMonthGenitivesAbbreviated: null
	,patternDateLong: null
	,patternDateShort: null
	,patternDateTimeFull: null
	,patternDateTimeSortable: null
	,patternMonthDay: null
	,patternRfc1123: null
	,patternTimeLong: null
	,patternTimeShort: null
	,patternUniversalSortable: null
	,patternYearMonth: null
	,separatorDate: null
	,separatorTime: null
	,toObject: function() {
		return { calendarWeekRuleIndex : this.calendarWeekRuleIndex, calendarWeekRuleName : this.calendarWeekRuleName, designatorAm : this.designatorAm, designatorPm : this.designatorPm, firstDayOfWeekIndex : this.firstDayOfWeekIndex, firstDayOfWeekName : this.firstDayOfWeekName, nameCalendar : this.nameCalendar, nameCalendarNative : this.nameCalendarNative, nameDays : this.nameDays, nameDaysAbbreviated : this.nameDaysAbbreviated, nameDaysShortest : this.nameDaysShortest, nameMonths : this.nameMonths, nameMonthsAbbreviated : this.nameMonthsAbbreviated, nameMonthGenitives : this.nameMonthGenitives, nameMonthGenitivesAbbreviated : this.nameMonthGenitivesAbbreviated, patternDateLong : this.patternDateLong, patternDateShort : this.patternDateShort, patternDateTimeFull : this.patternDateTimeFull, patternDateTimeSortable : this.patternDateTimeSortable, patternMonthDay : this.patternMonthDay, patternRfc1123 : this.patternRfc1123, patternTimeLong : this.patternTimeLong, patternTimeShort : this.patternTimeShort, patternUniversalSortable : this.patternUniversalSortable, patternYearMonth : this.patternYearMonth, separatorDate : this.separatorDate, separatorTime : this.separatorTime};
	}
	,__class__: thx_culture_DateFormatInfo
};
var thx_culture_NumberFormatInfo = function(decimalDigitsCurrency,decimalDigitsNumber,decimalDigitsPercent,groupSizesCurrency,groupSizesNumber,groupSizesPercent,patternNegativeCurrency,patternNegativeNumber,patternNegativePercent,patternPositiveCurrency,patternPositivePercent,separatorDecimalCurrency,separatorDecimalNumber,separatorDecimalPercent,separatorGroupCurrency,separatorGroupNumber,separatorGroupPercent,signNegative,signPositive,symbolCurrency,symbolNaN,symbolNegativeInfinity,symbolPercent,symbolPermille,symbolPositiveInfinity) {
	this.decimalDigitsCurrency = decimalDigitsCurrency;
	this.decimalDigitsNumber = decimalDigitsNumber;
	this.decimalDigitsPercent = decimalDigitsPercent;
	this.groupSizesCurrency = groupSizesCurrency;
	this.groupSizesNumber = groupSizesNumber;
	this.groupSizesPercent = groupSizesPercent;
	this.patternNegativeCurrency = patternNegativeCurrency;
	this.patternNegativeNumber = patternNegativeNumber;
	this.patternNegativePercent = patternNegativePercent;
	this.patternPositiveCurrency = patternPositiveCurrency;
	this.patternPositivePercent = patternPositivePercent;
	this.separatorDecimalCurrency = separatorDecimalCurrency;
	this.separatorDecimalNumber = separatorDecimalNumber;
	this.separatorDecimalPercent = separatorDecimalPercent;
	this.separatorGroupCurrency = separatorGroupCurrency;
	this.separatorGroupNumber = separatorGroupNumber;
	this.separatorGroupPercent = separatorGroupPercent;
	this.signNegative = signNegative;
	this.signPositive = signPositive;
	this.symbolCurrency = symbolCurrency;
	this.symbolNaN = symbolNaN;
	this.symbolNegativeInfinity = symbolNegativeInfinity;
	this.symbolPercent = symbolPercent;
	this.symbolPermille = symbolPermille;
	this.symbolPositiveInfinity = symbolPositiveInfinity;
};
thx_culture_NumberFormatInfo.__name__ = ["thx","culture","NumberFormatInfo"];
thx_culture_NumberFormatInfo.fromObject = function(o) {
	return new thx_culture_NumberFormatInfo(o.decimalDigitsCurrency,o.decimalDigitsNumber,o.decimalDigitsPercent,o.groupSizesCurrency,o.groupSizesNumber,o.groupSizesPercent,o.patternNegativeCurrency,o.patternNegativeNumber,o.patternNegativePercent,o.patternPositiveCurrency,o.patternPositivePercent,o.separatorDecimalCurrency,o.separatorDecimalNumber,o.separatorDecimalPercent,o.separatorGroupCurrency,o.separatorGroupNumber,o.separatorGroupPercent,o.signNegative,o.signPositive,o.symbolCurrency,o.symbolNaN,o.symbolNegativeInfinity,o.symbolPercent,o.symbolPermille,o.symbolPositiveInfinity);
};
thx_culture_NumberFormatInfo.prototype = {
	decimalDigitsCurrency: null
	,decimalDigitsNumber: null
	,decimalDigitsPercent: null
	,groupSizesCurrency: null
	,groupSizesNumber: null
	,groupSizesPercent: null
	,patternNegativeCurrency: null
	,patternNegativeNumber: null
	,patternNegativePercent: null
	,patternPositiveCurrency: null
	,patternPositivePercent: null
	,separatorDecimalCurrency: null
	,separatorDecimalNumber: null
	,separatorDecimalPercent: null
	,separatorGroupCurrency: null
	,separatorGroupNumber: null
	,separatorGroupPercent: null
	,signNegative: null
	,signPositive: null
	,symbolCurrency: null
	,symbolNaN: null
	,symbolNegativeInfinity: null
	,symbolPercent: null
	,symbolPermille: null
	,symbolPositiveInfinity: null
	,toObject: function() {
		return { decimalDigitsCurrency : this.decimalDigitsCurrency, decimalDigitsNumber : this.decimalDigitsNumber, decimalDigitsPercent : this.decimalDigitsPercent, groupSizesCurrency : this.groupSizesCurrency, groupSizesNumber : this.groupSizesNumber, groupSizesPercent : this.groupSizesPercent, patternNegativeCurrency : this.patternNegativeCurrency, patternNegativeNumber : this.patternNegativeNumber, patternNegativePercent : this.patternNegativePercent, patternPositiveCurrency : this.patternPositiveCurrency, patternPositivePercent : this.patternPositivePercent, separatorDecimalCurrency : this.separatorDecimalCurrency, separatorDecimalNumber : this.separatorDecimalNumber, separatorDecimalPercent : this.separatorDecimalPercent, separatorGroupCurrency : this.separatorGroupCurrency, separatorGroupNumber : this.separatorGroupNumber, separatorGroupPercent : this.separatorGroupPercent, signNegative : this.signNegative, signPositive : this.signPositive, symbolCurrency : this.symbolCurrency, symbolNaN : this.symbolNaN, symbolNegativeInfinity : this.symbolNegativeInfinity, symbolPercent : this.symbolPercent, symbolPermille : this.symbolPermille, symbolPositiveInfinity : this.symbolPositiveInfinity};
	}
	,__class__: thx_culture_NumberFormatInfo
};
var thx_culture_Culture = function(code,dateTime,ietf,isNeutral,iso2,iso3,isRightToLeft,lcid,nameCalendar,nameEnglish,nameNative,nameRegionEnglish,nameRegionNative,number,separatorList,win3) {
	this.code = code;
	this.dateTime = dateTime;
	this.ietf = ietf;
	this.isNeutral = isNeutral;
	this.iso2 = iso2;
	this.iso3 = iso3;
	this.isRightToLeft = isRightToLeft;
	this.lcid = lcid;
	this.nameCalendar = nameCalendar;
	this.nameEnglish = nameEnglish;
	this.nameNative = nameNative;
	this.nameRegionEnglish = nameRegionEnglish;
	this.nameRegionNative = nameRegionNative;
	this.number = number;
	this.separatorList = separatorList;
	this.win3 = win3;
};
thx_culture_Culture.__name__ = ["thx","culture","Culture"];
thx_culture_Culture.fromObject = function(o) {
	var tmp = o.code;
	var tmp1;
	if(null == o.dateTime) {
		tmp1 = null;
	} else {
		var o1 = o.dateTime;
		tmp1 = new thx_culture_DateFormatInfo(o1.calendarWeekRuleIndex,o1.calendarWeekRuleName,o1.designatorAm,o1.designatorPm,o1.firstDayOfWeekIndex,o1.firstDayOfWeekName,o1.nameCalendar,o1.nameCalendarNative,o1.nameDays,o1.nameDaysAbbreviated,o1.nameDaysShortest,o1.nameMonths,o1.nameMonthsAbbreviated,o1.nameMonthGenitives,o1.nameMonthGenitivesAbbreviated,o1.patternDateLong,o1.patternDateShort,o1.patternDateTimeFull,o1.patternDateTimeSortable,o1.patternMonthDay,o1.patternRfc1123,o1.patternTimeLong,o1.patternTimeShort,o1.patternUniversalSortable,o1.patternYearMonth,o1.separatorDate,o1.separatorTime);
	}
	var tmp2 = o.ietf;
	var tmp3 = o.isNeutral;
	var tmp4 = o.iso2;
	var tmp5 = o.iso3;
	var tmp6 = o.isRightToLeft;
	var tmp7 = o.lcid;
	var tmp8 = o.nameCalendar;
	var tmp9 = o.nameEnglish;
	var tmp10 = o.nameNative;
	var tmp11 = o.nameRegionEnglish;
	var tmp12 = o.nameRegionNative;
	var tmp13;
	if(null == o.number) {
		tmp13 = null;
	} else {
		var o2 = o.number;
		tmp13 = new thx_culture_NumberFormatInfo(o2.decimalDigitsCurrency,o2.decimalDigitsNumber,o2.decimalDigitsPercent,o2.groupSizesCurrency,o2.groupSizesNumber,o2.groupSizesPercent,o2.patternNegativeCurrency,o2.patternNegativeNumber,o2.patternNegativePercent,o2.patternPositiveCurrency,o2.patternPositivePercent,o2.separatorDecimalCurrency,o2.separatorDecimalNumber,o2.separatorDecimalPercent,o2.separatorGroupCurrency,o2.separatorGroupNumber,o2.separatorGroupPercent,o2.signNegative,o2.signPositive,o2.symbolCurrency,o2.symbolNaN,o2.symbolNegativeInfinity,o2.symbolPercent,o2.symbolPermille,o2.symbolPositiveInfinity);
	}
	return new thx_culture_Culture(tmp,tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7,tmp8,tmp9,tmp10,tmp11,tmp12,tmp13,o.separatorList,o.win3);
};
thx_culture_Culture.register = function(culture) {
	var code = "C:" + culture.code.toLowerCase();
	var _this = thx_culture_Culture.cultures;
	if(__map_reserved[code] != null?_this.existsReserved(code):_this.h.hasOwnProperty(code)) {
		var _this1 = thx_culture_Culture.cultures;
		return __map_reserved[code] != null?_this1.getReserved(code):_this1.h[code];
	}
	thx_culture_Culture.list.push(culture);
	var _this2 = thx_culture_Culture.cultures;
	if(__map_reserved[code] != null) {
		_this2.setReserved(code,culture);
	} else {
		_this2.h[code] = culture;
	}
	var key = "I2:" + culture.iso2.toLowerCase();
	var _this3 = thx_culture_Culture.cultures;
	if(__map_reserved[key] != null) {
		_this3.setReserved(key,culture);
	} else {
		_this3.h[key] = culture;
	}
	var key1 = "I3:" + culture.iso3.toLowerCase();
	var _this4 = thx_culture_Culture.cultures;
	if(__map_reserved[key1] != null) {
		_this4.setReserved(key1,culture);
	} else {
		_this4.h[key1] = culture;
	}
	return culture;
};
thx_culture_Culture.getByCode = function(code) {
	var key = "C:" + code.toLowerCase();
	var _this = thx_culture_Culture.cultures;
	if(__map_reserved[key] != null) {
		return _this.getReserved(key);
	} else {
		return _this.h[key];
	}
};
thx_culture_Culture.getByIso2 = function(iso2) {
	var key = "I2:" + iso2.toLowerCase();
	var _this = thx_culture_Culture.cultures;
	if(__map_reserved[key] != null) {
		return _this.getReserved(key);
	} else {
		return _this.h[key];
	}
};
thx_culture_Culture.getByIso3 = function(iso3) {
	var key = "I3:" + iso3.toLowerCase();
	var _this = thx_culture_Culture.cultures;
	if(__map_reserved[key] != null) {
		return _this.getReserved(key);
	} else {
		return _this.h[key];
	}
};
thx_culture_Culture.iterator = function() {
	return HxOverrides.iter(thx_culture_Culture.list);
};
thx_culture_Culture.getCodeKey = function(key) {
	return "C:" + key.toLowerCase();
};
thx_culture_Culture.getIso2Key = function(key) {
	return "I2:" + key.toLowerCase();
};
thx_culture_Culture.getIso3Key = function(key) {
	return "I3:" + key.toLowerCase();
};
thx_culture_Culture.prototype = {
	code: null
	,dateTime: null
	,ietf: null
	,isNeutral: null
	,iso2: null
	,iso3: null
	,isRightToLeft: null
	,lcid: null
	,nameCalendar: null
	,nameDisplayEnglish: null
	,nameDisplayNative: null
	,nameEnglish: null
	,nameNative: null
	,nameRegionEnglish: null
	,nameRegionNative: null
	,number: null
	,separatorList: null
	,win3: null
	,toObject: function() {
		var tmp = null == this.dateTime?null:this.dateTime.toObject();
		var tmp1 = null == this.number?null:this.number.toObject();
		return { code : this.code, dateTime : tmp, ietf : this.ietf, isNeutral : this.isNeutral, iso2 : this.iso2, iso3 : this.iso3, isRightToLeft : this.isRightToLeft, lcid : this.lcid, nameCalendar : this.nameCalendar, nameEnglish : this.nameEnglish, nameNative : this.nameNative, nameRegionEnglish : this.nameRegionEnglish, nameRegionNative : this.nameRegionNative, number : tmp1, separatorList : this.separatorList, win3 : this.win3};
	}
	,get_nameDisplayEnglish: function() {
		return this.nameEnglish + (null == this.nameRegionEnglish?"":" (" + this.nameRegionEnglish + ")");
	}
	,get_nameDisplayNative: function() {
		return this.nameNative + (null == this.nameRegionNative?"":" (" + this.nameRegionNative + ")");
	}
	,toString: function() {
		return this.nameEnglish + (null == this.nameRegionEnglish?"":" (" + this.nameRegionEnglish + ")");
	}
	,__class__: thx_culture_Culture
};
var thx_culture_Pattern = function() { };
thx_culture_Pattern.__name__ = ["thx","culture","Pattern"];
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
thx_error_ErrorWrapper.__name__ = ["thx","error","ErrorWrapper"];
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	innerError: null
	,__class__: thx_error_ErrorWrapper
});
var thx_format_Format = function() { };
thx_format_Format.__name__ = ["thx","format","Format"];
thx_format_Format.get_defaultCulture = function() {
	if(null != thx_format_Format.defaultCulture) {
		return thx_format_Format.defaultCulture;
	} else {
		return thx_culture_Culture.invariant;
	}
};
thx_format_Format.set_defaultCulture = function(culture) {
	thx_format_Format.defaultCulture = culture;
	return thx_format_Format.get_defaultCulture();
};
var thx_format_NumberFormat = function() { };
thx_format_NumberFormat.__name__ = ["thx","format","NumberFormat"];
thx_format_NumberFormat.binary = function(f,significantDigits,culture) {
	if(significantDigits == null) {
		significantDigits = 1;
	}
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	if(significantDigits == 0 && f == 0) {
		return "";
	} else {
		return StringTools.lpad(thx_format_NumberFormat.toBase(f | 0,2,culture),"0",significantDigits);
	}
};
thx_format_NumberFormat.currency = function(f,precision,symbol,culture) {
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	var pattern = f < 0?thx_culture_Pattern.currencyNegatives[nf.patternNegativeCurrency]:thx_culture_Pattern.currencyPositives[nf.patternPositiveCurrency];
	var t = null == precision?null:precision;
	var tmp = StringTools.replace(pattern,"n",thx_format_NumberFormat.value(f,t != null?t:nf.decimalDigitsCurrency,nf.groupSizesCurrency,nf.separatorGroupCurrency,nf.separatorDecimalCurrency));
	var t1 = null == symbol?null:symbol;
	return StringTools.replace(tmp,"$",t1 != null?t1:nf.symbolCurrency);
};
thx_format_NumberFormat.customFormat = function(f,pattern,culture) {
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	var isCurrency = thx_format_NumberFormat.hasSymbols(pattern,"$");
	var isPercent = !isCurrency && thx_format_NumberFormat.hasSymbols(pattern,"%‰");
	var groups = thx_format_NumberFormat.splitPattern(pattern,";");
	if(groups.length > 3) {
		throw new js__$Boot_HaxeError("invalid number of sections in \"" + pattern + "\"");
	}
	if(f < 0) {
		if(null != groups[1]) {
			return thx_format_NumberFormat.customFormatF(-f,groups[1],nf,isCurrency,isPercent);
		} else {
			return thx_format_NumberFormat.customFormatF(-f,"-" + groups[0],nf,isCurrency,isPercent);
		}
	} else if(f > 0) {
		return thx_format_NumberFormat.customFormatF(f,groups[0],nf,isCurrency,isPercent);
	} else {
		var t;
		if(null == groups) {
			t = null;
		} else {
			var _1 = groups[2];
			if(null == _1) {
				t = null;
			} else {
				t = _1;
			}
		}
		return thx_format_NumberFormat.customFormatF(0,t != null?t:groups[0],nf,isCurrency,isPercent);
	}
};
thx_format_NumberFormat.decimal = function(f,significantDigits,culture) {
	if(significantDigits == null) {
		significantDigits = 1;
	}
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	return (f < 0?nf.signNegative:"") + StringTools.lpad(thx_format_NumberFormat.value(f,0,[0],"",""),"0",significantDigits);
};
thx_format_NumberFormat.exponential = function(f,precision,digits,symbol,culture) {
	if(symbol == null) {
		symbol = "e";
	}
	if(digits == null) {
		digits = 3;
	}
	if(precision == null) {
		precision = 6;
	}
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	var info = thx_format_NumberFormat.exponentialInfo(f);
	var tmp = thx_format_NumberFormat.number(info.f,precision,culture) + symbol + (info.e < 0?nf.signNegative:nf.signPositive);
	var v = info.e;
	return tmp + StringTools.lpad("" + (v < 0?-v:v),"0",digits);
};
thx_format_NumberFormat.fixed = function(f,precision,culture) {
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	var pattern = f < 0?thx_culture_Pattern.numberNegatives[nf.patternNegativeNumber]:"n";
	var t = null == precision?null:precision;
	return StringTools.replace(pattern,"n",thx_format_NumberFormat.value(f,t != null?t:nf.decimalDigitsNumber,[0],"",nf.separatorDecimalNumber));
};
thx_format_NumberFormat.format = function(f,pattern,culture) {
	var specifier = pattern.substring(0,1);
	var param = thx_format_NumberFormat.paramOrNull(pattern.substring(1));
	switch(specifier) {
	case "%":
		return thx_format_NumberFormat.printf(f,pattern,culture);
	case "C":case "c":
		return thx_format_NumberFormat.currency(f,param,null,culture);
	case "E":
		return thx_format_NumberFormat.exponential(f,param,null,null,culture);
	case "G":
		return thx_format_NumberFormat.general(f,param,culture);
	case "P":case "p":
		return thx_format_NumberFormat.percent(f,param,culture);
	case "X":
		return thx_format_NumberFormat.hex(f,param,culture).toUpperCase();
	case "D":case "d":
		return thx_format_NumberFormat.decimal(f,param,culture);
	case "e":
		return thx_format_NumberFormat.exponential(f,param,null,null,culture).toLowerCase();
	case "F":case "f":
		return thx_format_NumberFormat.fixed(f,param,culture);
	case "g":
		return thx_format_NumberFormat.general(f,param,culture).toLowerCase();
	case "N":case "n":
		return thx_format_NumberFormat.number(f,param,culture);
	case "R":case "r":
		return "" + f;
	case "x":
		return thx_format_NumberFormat.hex(f,param,culture);
	default:
		return thx_format_NumberFormat.customFormat(f,pattern,culture);
	}
};
thx_format_NumberFormat.general = function(f,significantDigits,culture) {
	var e = thx_format_NumberFormat.exponential(f,significantDigits,null,null,culture);
	var f1 = thx_format_NumberFormat.fixed(f,significantDigits,culture);
	if(e.length < f1.length) {
		return e;
	} else {
		return f1;
	}
};
thx_format_NumberFormat.hex = function(f,significantDigits,culture) {
	if(significantDigits == null) {
		significantDigits = 1;
	}
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	if(significantDigits == 0 && f == 0) {
		return "";
	} else {
		return StringTools.lpad(thx_format_NumberFormat.toBase(f | 0,16,culture),"0",significantDigits);
	}
};
thx_format_NumberFormat.integer = function(f,culture) {
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	return thx_format_NumberFormat.number(f,0,culture);
};
thx_format_NumberFormat.number = function(f,precision,culture) {
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	var pattern = f < 0?thx_culture_Pattern.numberNegatives[nf.patternNegativeNumber]:"n";
	var t = null == precision?null:precision;
	return StringTools.replace(pattern,"n",thx_format_NumberFormat.value(f,t != null?t:nf.decimalDigitsNumber,nf.groupSizesNumber,nf.separatorGroupNumber,nf.separatorDecimalNumber));
};
thx_format_NumberFormat.octal = function(f,significantDigits,culture) {
	if(significantDigits == null) {
		significantDigits = 1;
	}
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	if(significantDigits == 0 && f == 0) {
		return "";
	} else {
		return StringTools.lpad(thx_format_NumberFormat.toBase(f | 0,8,culture),"0",significantDigits);
	}
};
thx_format_NumberFormat.percent = function(f,decimals,culture) {
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	var tmp = f * 100;
	var t = null == decimals?null:decimals;
	return thx_format_NumberFormat.unit(tmp,t != null?t:nf.decimalDigitsPercent,nf.symbolPercent,culture);
};
thx_format_NumberFormat.permille = function(f,decimals,culture) {
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	var tmp = f * 1000;
	var t = null == decimals?null:decimals;
	return thx_format_NumberFormat.unit(tmp,t != null?t:nf.decimalDigitsPercent,nf.symbolPermille,culture);
};
thx_format_NumberFormat.printf = function(f,pattern,culture) {
	if(!StringTools.startsWith(pattern,"%")) {
		throw new js__$Boot_HaxeError("invalid printf term \"" + pattern + "\"");
	}
	var specifier = pattern.substring(pattern.length - 1);
	var p = pattern.substring(1,pattern.length - 1).split(".");
	var precision = null == p[1] || "" == p[1]?null:Std.parseInt(p[1]);
	var justifyRight = true;
	var negativeSignOnly = true;
	var emptySpaceForSign = false;
	var prefix = false;
	var padding = " ";
	var width = 0;
	var flags = p[0];
	while(flags.length > 0) {
		var _g = flags.substring(0,1);
		switch(_g) {
		case " ":
			emptySpaceForSign = true;
			break;
		case "#":
			prefix = true;
			break;
		case "+":
			negativeSignOnly = false;
			break;
		case "-":
			justifyRight = false;
			break;
		case "0":
			padding = "0";
			break;
		default:
			if(thx_Ints.canParse(_g)) {
				width = thx_Ints.parse(flags);
				flags = "";
				continue;
			} else {
				throw new js__$Boot_HaxeError("invalid flags " + flags);
			}
		}
		flags = flags.substring(1);
	}
	var decorate = function(s,f1,p1,ns,ps) {
		if(prefix) {
			s = p1 + s;
		}
		if(f1 < 0) {
			s = ns + s;
		} else if(!negativeSignOnly) {
			s = ps + s;
		} else if(emptySpaceForSign) {
			s = " " + s;
		}
		if(justifyRight) {
			return StringTools.lpad(s,padding,width);
		} else {
			return StringTools.rpad(s,padding,width);
		}
	};
	var nf = thx_format_NumberFormat.numberFormat(culture);
	switch(specifier) {
	case "%":
		return decorate(thx_format_NumberFormat.fixed(Math.abs(f),precision,culture) + "%",f,"",nf.signNegative,nf.signPositive);
	case "B":
		var v = f | 0;
		return decorate((v < 0?-v:v).toString(2),1,"B","","");
	case "E":
		return decorate(thx_format_NumberFormat.exponential(Math.abs(f),precision,0,"E",culture),f,"",nf.signNegative,nf.signPositive);
	case "G":
		var e = thx_format_NumberFormat.printf(f,"E",culture);
		var f2 = thx_format_NumberFormat.printf(f,"f",culture);
		if(e.length < f2.length) {
			return e;
		} else {
			return f2;
		}
		break;
	case "X":
		return decorate(thx_format_NumberFormat.hex(Math.abs(f),precision,culture),f,"0X",nf.signNegative,nf.signPositive);
	case "b":
		var v1 = f | 0;
		return decorate((v1 < 0?-v1:v1).toString(2),1,"b","","");
	case "c":
		var v2 = f | 0;
		return decorate(String.fromCharCode(v2 < 0?-v2:v2),1,"","","");
	case "d":case "i":
		var tmp = "" + Math.round(f);
		var _0 = precision;
		var t = null == _0?null:_0;
		return decorate(StringTools.lpad(tmp,"0",t != null?t:0),f,"",nf.signNegative,nf.signPositive);
	case "e":
		return decorate(thx_format_NumberFormat.exponential(Math.abs(f),precision,0,"e",culture),f,"",nf.signNegative,nf.signPositive);
	case "f":
		return decorate(thx_format_NumberFormat.fixed(Math.abs(f),precision,culture),f,"",nf.signNegative,nf.signPositive);
	case "g":
		var e1 = thx_format_NumberFormat.printf(f,"e",culture);
		var f3 = thx_format_NumberFormat.printf(f,"f",culture);
		if(e1.length < f3.length) {
			return e1;
		} else {
			return f3;
		}
		break;
	case "o":
		return decorate(thx_format_NumberFormat.octal(Math.abs(f),precision,culture),f,"0",nf.signNegative,nf.signPositive);
	case "u":
		return thx_format_NumberFormat.printf(Math.abs(f),"d",culture);
	case "x":
		return decorate(thx_format_NumberFormat.hex(Math.abs(f),precision,culture),f,"0x",nf.signNegative,nf.signPositive);
	default:
		throw new js__$Boot_HaxeError("invalid pattern \"" + pattern + "\"");
	}
};
thx_format_NumberFormat.toBase = function(value,base,culture) {
	var nf = thx_format_NumberFormat.numberFormat(culture);
	return StringTools.replace(value.toString(base),"-",nf.signNegative);
};
thx_format_NumberFormat.unit = function(f,decimals,unitSymbol,culture) {
	var nf = thx_format_NumberFormat.numberFormat(culture);
	if(isNaN(f)) {
		return nf.symbolNaN;
	}
	if(!isFinite(f)) {
		if(f < 0) {
			return nf.symbolNegativeInfinity;
		} else {
			return nf.symbolPositiveInfinity;
		}
	}
	return StringTools.replace(StringTools.replace(f < 0?thx_culture_Pattern.percentNegatives[nf.patternNegativePercent]:thx_culture_Pattern.percentPositives[nf.patternPositivePercent],"n",thx_format_NumberFormat.value(f,decimals,nf.groupSizesPercent,nf.separatorGroupPercent,nf.separatorDecimalPercent)),"%",unitSymbol);
};
thx_format_NumberFormat.countSymbols = function(pattern,symbols) {
	var i = 0;
	var quote = 0;
	var count = 0;
	while(i < pattern.length) {
		var _g = pattern.substring(i,i + 1);
		switch(_g) {
		case "\"":
			switch(quote) {
			case 0:
				quote = 2;
				break;
			case 2:
				quote = 0;
				break;
			default:
			}
			break;
		case "'":
			switch(quote) {
			case 0:
				quote = 1;
				break;
			case 1:
				quote = 0;
				break;
			default:
			}
			break;
		case "\\":
			++i;
			break;
		default:
			if(quote == 0) {
				if(symbols.indexOf(_g) >= 0) {
					++count;
				}
			}
		}
		++i;
	}
	return count;
};
thx_format_NumberFormat.customFormatDecimalFraction = function(d,pattern,nf) {
	var buf = "";
	var i = 0;
	var quote = 0;
	var p = d.split("");
	while(i < pattern.length) {
		var _g = pattern.substring(i,i + 1);
		switch(_g) {
		case "\"":
			switch(quote) {
			case 0:
				quote = 2;
				break;
			case 1:
				buf += _g;
				break;
			case 2:
				quote = 0;
				break;
			default:
				buf += _g;
			}
			break;
		case "#":
			switch(quote) {
			case 0:
				buf += p.length == 0?"":p.shift();
				break;
			case 1:case 2:
				buf += _g;
				break;
			default:
				buf += _g;
			}
			break;
		case "$":
			switch(quote) {
			case 0:
				buf += nf.symbolCurrency;
				break;
			case 1:case 2:
				buf += _g;
				break;
			default:
				buf += _g;
			}
			break;
		case "%":
			switch(quote) {
			case 0:
				buf += nf.symbolPercent;
				break;
			case 1:case 2:
				buf += _g;
				break;
			default:
				buf += _g;
			}
			break;
		case "'":
			switch(quote) {
			case 0:
				quote = 1;
				break;
			case 1:
				quote = 0;
				break;
			case 2:
				buf += _g;
				break;
			default:
				buf += _g;
			}
			break;
		case "0":
			switch(quote) {
			case 0:
				buf += p.length == 0?"0":p.shift();
				break;
			case 1:case 2:
				buf += _g;
				break;
			default:
				buf += _g;
			}
			break;
		case "\\":
			++i;
			buf += pattern.substring(i,i + 1);
			break;
		case "‰":
			switch(quote) {
			case 0:
				buf += nf.symbolPermille;
				break;
			case 1:case 2:
				buf += _g;
				break;
			default:
				buf += _g;
			}
			break;
		default:
			switch(quote) {
			case 1:case 2:
				buf += _g;
				break;
			default:
				buf += _g;
			}
		}
		++i;
	}
	return buf;
};
thx_format_NumberFormat.customFormatF = function(f,pattern,nf,isCurrency,isPercent) {
	if(isPercent) {
		f *= thx_format_NumberFormat.hasSymbols(pattern,"‰")?1000:100;
	}
	var exp = thx_format_NumberFormat.splitPattern(pattern,"eE");
	if(exp.length > 1) {
		var info = thx_format_NumberFormat.exponentialInfo(f);
		var symbol = pattern.substring(exp[0].length,exp[0].length + 1);
		var forceSign = StringTools.startsWith(exp[1],"+");
		if(forceSign || StringTools.startsWith(exp[1],"-")) {
			exp[1] = exp[1].substring(1);
		}
		return thx_format_NumberFormat.customIntegerAndFraction(info.f,exp[0],nf,isCurrency,isPercent) + symbol + (info.e < 0?nf.signNegative:forceSign?nf.signPositive:"") + thx_format_NumberFormat.customFormatInteger("" + Math.abs(info.e),exp[1],nf,isCurrency,isPercent);
	} else {
		return thx_format_NumberFormat.customIntegerAndFraction(f,pattern,nf,isCurrency,isPercent);
	}
};
thx_format_NumberFormat.customFormatInteger = function(v,pattern,nf,isCurrency,isPercent) {
	var buf = [];
	var i = 0;
	var quote = 0;
	var p = v.split("");
	var lbuf = "";
	var first = true;
	var useGroups = false;
	var zeroes = 0;
	while(i < pattern.length) {
		var _g = pattern.substring(i,i + 1);
		switch(_g) {
		case "\"":
			switch(quote) {
			case 0:
				quote = 2;
				break;
			case 1:
				lbuf += _g;
				break;
			case 2:
				quote = 0;
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(lbuf));
				lbuf = "";
				break;
			default:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(_g));
			}
			break;
		case "#":
			switch(quote) {
			case 0:
				buf.push(thx_format__$NumberFormat_CustomFormat.Hash(first));
				first = false;
				break;
			case 1:case 2:
				lbuf += _g;
				break;
			default:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(_g));
			}
			break;
		case "$":
			switch(quote) {
			case 0:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(nf.symbolCurrency));
				break;
			case 1:case 2:
				lbuf += _g;
				break;
			default:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(_g));
			}
			break;
		case "%":
			switch(quote) {
			case 0:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(nf.symbolPercent));
				break;
			case 1:case 2:
				lbuf += _g;
				break;
			default:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(_g));
			}
			break;
		case "'":
			switch(quote) {
			case 0:
				quote = 1;
				break;
			case 1:
				quote = 0;
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(lbuf));
				lbuf = "";
				break;
			case 2:
				lbuf += _g;
				break;
			default:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(_g));
			}
			break;
		case ",":
			switch(quote) {
			case 0:
				useGroups = true;
				break;
			case 1:case 2:
				lbuf += _g;
				break;
			default:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(_g));
			}
			break;
		case "0":
			switch(quote) {
			case 0:
				buf.push(thx_format__$NumberFormat_CustomFormat.Zero(first));
				first = false;
				++zeroes;
				break;
			case 1:case 2:
				lbuf += _g;
				break;
			default:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(_g));
			}
			break;
		case "\\":
			++i;
			buf.push(thx_format__$NumberFormat_CustomFormat.Literal(pattern.substring(i,i + 1)));
			break;
		case "‰":
			switch(quote) {
			case 0:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(nf.symbolPermille));
				break;
			case 1:case 2:
				lbuf += _g;
				break;
			default:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(_g));
			}
			break;
		default:
			switch(quote) {
			case 1:case 2:
				lbuf += _g;
				break;
			default:
				buf.push(thx_format__$NumberFormat_CustomFormat.Literal(_g));
			}
		}
		++i;
	}
	if(lbuf.length > 0) {
		buf.push(thx_format__$NumberFormat_CustomFormat.Literal(lbuf));
	}
	var _g1 = p.length;
	var _g2 = zeroes;
	while(_g1 < _g2) {
		++_g1;
		p.unshift("0");
	}
	if(useGroups) {
		i = p.length - 1;
		var groups = isCurrency?nf.groupSizesCurrency.slice():isPercent?nf.groupSizesPercent.slice():nf.groupSizesNumber.slice();
		var group = groups.shift();
		var pos = 0;
		while(i >= 0) {
			if(group == 0) {
				break;
			}
			if(pos == group) {
				p[i] = p[i] + (isCurrency?nf.separatorGroupCurrency:isPercent?nf.separatorGroupPercent:nf.separatorGroupNumber);
				pos = 0;
				if(groups.length > 0) {
					group = groups.shift();
				}
			} else {
				++pos;
				--i;
			}
		}
	}
	buf.reverse();
	var r = buf.map(function(_) {
		switch(_[1]) {
		case 0:
			return _[2];
		case 1:
			var first1 = _[2];
			if(p.length == 0) {
				return "";
			} else if(first1) {
				return p.join("");
			} else {
				return p.pop();
			}
			break;
		case 2:
			if(_[2]) {
				return p.join("");
			} else {
				return p.pop();
			}
			break;
		}
	});
	r.reverse();
	return r.join("");
};
thx_format_NumberFormat.customIntegerAndFraction = function(f,pattern,nf,isCurrency,isPercent) {
	var p = thx_format_NumberFormat.splitPattern(pattern,".");
	f /= Math.pow(1000,p[0].length - (p[0] = thx_Strings.trimCharsRight(p[0],",")).length);
	if(p.length == 1) {
		return thx_format_NumberFormat.customFormatInteger("" + Math.round(f),p[0],nf,isCurrency,isPercent);
	} else {
		f = thx_Floats.roundTo(f,thx_format_NumberFormat.countSymbols(p[1],"#0"));
		var np = thx_format_NumberFormat.splitOnDecimalSeparator(f);
		var tmp = thx_format_NumberFormat.customFormatInteger(np[0],p[0],nf,isCurrency,isPercent) + (isCurrency?nf.separatorDecimalCurrency:isPercent?nf.separatorDecimalPercent:nf.separatorDecimalNumber);
		var t;
		if(null == np) {
			t = null;
		} else {
			var _1 = np[1];
			if(null == _1) {
				t = null;
			} else {
				t = _1;
			}
		}
		return tmp + thx_format_NumberFormat.customFormatDecimalFraction(t != null?t:"0",p[1],nf);
	}
};
thx_format_NumberFormat.exponentialInfo = function(f) {
	var s = ("" + Math.abs(f)).toLowerCase();
	var pose = s.indexOf("e");
	var p;
	var e;
	if(pose > 0) {
		p = s.substring(0,pose).split(".");
		e = thx_Ints.parse(s.substring(pose + 1));
	} else {
		p = s.split(".").concat([""]);
		e = 0;
		if(p[0].length > 1) {
			e = p[0].length - 1;
			p[1] = p[0].substring(1) + p[1];
			p[0] = p[0].substring(0,1);
		} else if(p[0] == "0") {
			e = -(1 + p[1].length - thx_Strings.trimCharsLeft(p[1],"0").length);
			p[1] = p[1].substring(-e - 1);
			p[0] = p[1].substring(0,1);
			p[1] = p[1].substring(1);
		}
	}
	var tmp = f < 0?-1:1;
	var x = p.slice(0,2).join(".");
	return { e : e, f : tmp * parseFloat(x)};
};
thx_format_NumberFormat.hasSymbols = function(pattern,symbols) {
	var i = 0;
	var quote = 0;
	while(i < pattern.length) {
		var _g = pattern.substring(i,i + 1);
		switch(_g) {
		case "\"":
			switch(quote) {
			case 0:
				quote = 2;
				break;
			case 2:
				quote = 0;
				break;
			default:
			}
			break;
		case "'":
			switch(quote) {
			case 0:
				quote = 1;
				break;
			case 1:
				quote = 0;
				break;
			default:
			}
			break;
		case "\\":
			++i;
			break;
		default:
			if(quote == 0) {
				if(symbols.indexOf(_g) >= 0) {
					return true;
				}
			}
		}
		++i;
	}
	return false;
};
thx_format_NumberFormat.intPart = function(s,groupSizes,groupSeparator) {
	var buf = [];
	var sizes = groupSizes.slice();
	var size = sizes.shift();
	while(s.length > 0) if(size == 0) {
		buf.unshift(s);
		s = "";
	} else if(s.length > size) {
		buf.unshift(s.substring(s.length - size));
		s = s.substring(0,s.length - size);
		if(sizes.length > 0) {
			size = sizes.shift();
		}
	} else {
		buf.unshift(s);
		s = "";
	}
	return buf.join(groupSeparator);
};
thx_format_NumberFormat.numberFormat = function(culture) {
	if(null != culture && null != culture.number) {
		return culture.number;
	} else {
		return thx_format_Format.get_defaultCulture().number;
	}
};
thx_format_NumberFormat.pad = function(s,len,round) {
	var _0 = s;
	var t = null == _0?null:_0;
	if(t != null) {
		s = t;
	} else {
		s = "";
	}
	if(len > 0 && s.length > len) {
		if(round) {
			return s.substring(0,len - 1) + (Std.parseInt(s.substring(len - 1,len)) + (Std.parseInt(s.substring(len,len + 1)) >= 5?1:0));
		} else {
			return s.substring(0,len);
		}
	} else {
		return StringTools.rpad(s,"0",len);
	}
};
thx_format_NumberFormat.paramOrNull = function(param) {
	if(param.length == 0) {
		return null;
	} else {
		return Std.parseInt(param);
	}
};
thx_format_NumberFormat.splitOnDecimalSeparator = function(f) {
	var p = ("" + f).split(".");
	var i = p[0];
	var _0 = p;
	var t;
	if(null == _0) {
		t = null;
	} else {
		var _1 = _0[1];
		if(null == _1) {
			t = null;
		} else {
			t = _1;
		}
	}
	var d = (t != null?t:"").toLowerCase();
	if(d.indexOf("e") >= 0) {
		p = d.split("e");
		d = p[0];
		var e = thx_Ints.parse(p[1]);
		if(e < 0) {
			d = StringTools.rpad("","0",-e - 1) + i + d;
			i = "0";
		} else {
			var s = i + d;
			d = s.substring(e + 1);
			i = thx_format_NumberFormat.pad(s,e + 1,false);
		}
	}
	if(d.length > 0) {
		return [i,d];
	} else {
		return [i];
	}
};
thx_format_NumberFormat.splitPattern = function(pattern,separator) {
	var pos = [];
	var i = 0;
	var quote = 0;
	while(i < pattern.length) {
		var _g = pattern.substring(i,i + 1);
		switch(_g) {
		case "\"":
			switch(quote) {
			case 0:
				quote = 2;
				break;
			case 2:
				quote = 0;
				break;
			default:
			}
			break;
		case "'":
			switch(quote) {
			case 0:
				quote = 1;
				break;
			case 1:
				quote = 0;
				break;
			default:
			}
			break;
		case "\\":
			++i;
			break;
		default:
			if(quote == 0) {
				if(separator.indexOf(_g) >= 0) {
					pos.push(i);
				}
			}
		}
		++i;
	}
	var buf = [];
	var prev = 0;
	var _g1 = 0;
	while(_g1 < pos.length) {
		var p = pos[_g1];
		++_g1;
		buf.push(pattern.substring(prev,p));
		prev = p + 1;
	}
	buf.push(pattern.substring(prev));
	return buf;
};
thx_format_NumberFormat.value = function(f,precision,groupSizes,groupSeparator,decimalSeparator) {
	f = Math.abs(thx_Floats.roundTo(f,precision));
	var p = thx_format_NumberFormat.splitOnDecimalSeparator(f);
	var buf = [];
	buf.push(thx_format_NumberFormat.intPart(p[0],groupSizes,groupSeparator));
	if(precision > 0) {
		buf.push(thx_format_NumberFormat.pad(p[1],precision,true));
	}
	return buf.join(decimalSeparator);
};
var thx_format__$NumberFormat_CustomFormat = { __ename__ : ["thx","format","_NumberFormat","CustomFormat"], __constructs__ : ["Literal","Hash","Zero"] };
thx_format__$NumberFormat_CustomFormat.Literal = function(s) { var $x = ["Literal",0,s]; $x.__enum__ = thx_format__$NumberFormat_CustomFormat; return $x; };
thx_format__$NumberFormat_CustomFormat.Hash = function(first) { var $x = ["Hash",1,first]; $x.__enum__ = thx_format__$NumberFormat_CustomFormat; return $x; };
thx_format__$NumberFormat_CustomFormat.Zero = function(first) { var $x = ["Zero",2,first]; $x.__enum__ = thx_format__$NumberFormat_CustomFormat; return $x; };
var thx_fp_Functions = function() { };
thx_fp_Functions.__name__ = ["thx","fp","Functions"];
thx_fp_Functions["const"] = function(b) {
	return function(a) {
		return b;
	};
};
thx_fp_Functions.flip = function(f) {
	return function(b) {
		return function(a) {
			return (f(a))(b);
		};
	};
};
var thx_fp__$Map_Map_$Impl_$ = {};
thx_fp__$Map_Map_$Impl_$.__name__ = ["thx","fp","_Map","Map_Impl_"];
thx_fp__$Map_Map_$Impl_$.empty = function() {
	return thx_fp_MapImpl.Tip;
};
thx_fp__$Map_Map_$Impl_$.singleton = function(k,v) {
	return thx_fp_MapImpl.Bin(1,k,v,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
};
thx_fp__$Map_Map_$Impl_$.bin = function(k,v,lhs,rhs) {
	return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k,v,lhs,rhs);
};
thx_fp__$Map_Map_$Impl_$.fromNative = function(map,comparator) {
	var r = thx_fp_MapImpl.Tip;
	var tmp = map.keys();
	while(tmp.hasNext()) {
		var key = tmp.next();
		r = thx_fp__$Map_Map_$Impl_$.insert(r,key,map.get(key),comparator);
	}
	return r;
};
thx_fp__$Map_Map_$Impl_$.lookup = function(this1,key,comparator) {
	switch(this1[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var xvalue = this1[4];
		switch(comparator(key,this1[3])[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookup(lhs,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookup(rhs,key,comparator);
		case 2:
			return haxe_ds_Option.Some(xvalue);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.lookupTuple = function(this1,key,comparator) {
	switch(this1[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var xvalue = this1[4];
		var xkey = this1[3];
		switch(comparator(key,xkey)[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(lhs,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(rhs,key,comparator);
		case 2:
			return haxe_ds_Option.Some({ _0 : xkey, _1 : xvalue});
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$["delete"] = function(this1,key,comparator) {
	switch(this1[1]) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var x = this1[4];
		var kx = this1[3];
		switch(comparator(key,kx)[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(kx,x,thx_fp__$Map_Map_$Impl_$["delete"](lhs,key,comparator),rhs);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(kx,x,lhs,thx_fp__$Map_Map_$Impl_$["delete"](rhs,key,comparator));
		case 2:
			return thx_fp__$Map_Map_$Impl_$.glue(lhs,rhs);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.insert = function(this1,kx,x,comparator) {
	switch(this1[1]) {
	case 0:
		return thx_fp_MapImpl.Bin(1,kx,x,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var y = this1[4];
		var ky = this1[3];
		var sz = this1[2];
		switch(comparator(kx,ky)[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(ky,y,thx_fp__$Map_Map_$Impl_$.insert(lhs,kx,x,comparator),rhs);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(ky,y,lhs,thx_fp__$Map_Map_$Impl_$.insert(rhs,kx,x,comparator));
		case 2:
			return thx_fp_MapImpl.Bin(sz,kx,x,lhs,rhs);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeft = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		return thx_fp__$Map_Map_$Impl_$.foldLeft(this1[6],thx_fp__$Map_Map_$Impl_$.foldLeft(this1[5],f(b,this1[4]),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.map = function(this1,f) {
	switch(this1[1]) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		return thx_fp_MapImpl.Bin(this1[2],this1[3],f(this1[4]),thx_fp__$Map_Map_$Impl_$.map(this1[5],f),thx_fp__$Map_Map_$Impl_$.map(this1[6],f));
	}
};
thx_fp__$Map_Map_$Impl_$.values = function(this1) {
	return thx_fp__$Map_Map_$Impl_$.foldLeft(this1,[],function(acc,v) {
		acc.push(v);
		return acc;
	});
};
thx_fp__$Map_Map_$Impl_$.foldLeftKeys = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		return thx_fp__$Map_Map_$Impl_$.foldLeftKeys(this1[6],thx_fp__$Map_Map_$Impl_$.foldLeftKeys(this1[5],f(b,this1[3]),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftAll = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		return thx_fp__$Map_Map_$Impl_$.foldLeftAll(this1[6],thx_fp__$Map_Map_$Impl_$.foldLeftAll(this1[5],f(b,this1[3],this1[4]),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftTuples = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		return thx_fp__$Map_Map_$Impl_$.foldLeftTuples(this1[6],thx_fp__$Map_Map_$Impl_$.foldLeftTuples(this1[5],f(b,{ _0 : this1[3], _1 : this1[4]}),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.size = function(this1) {
	switch(this1[1]) {
	case 0:
		return 0;
	case 1:
		return this1[2];
	}
};
thx_fp__$Map_Map_$Impl_$.balance = function(k,x,lhs,rhs) {
	var ls = thx_fp__$Map_Map_$Impl_$.size(lhs);
	var rs = thx_fp__$Map_Map_$Impl_$.size(rhs);
	var xs = ls + rs + 1;
	if(ls + rs <= 1) {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	} else if(rs >= 5 * ls) {
		return thx_fp__$Map_Map_$Impl_$.rotateLeft(k,x,lhs,rhs);
	} else if(ls >= 5 * rs) {
		return thx_fp__$Map_Map_$Impl_$.rotateRight(k,x,lhs,rhs);
	} else {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.glue = function(this1,that) {
	if(this1[1] == 0) {
		return that;
	} else if(that[1] == 0) {
		return this1;
	} else if(thx_fp__$Map_Map_$Impl_$.size(this1) > thx_fp__$Map_Map_$Impl_$.size(that)) {
		var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(this1);
		return thx_fp__$Map_Map_$Impl_$.balance(t.k,t.x,t.t,that);
	} else {
		var t1 = thx_fp__$Map_Map_$Impl_$.deleteFindMin(that);
		return thx_fp__$Map_Map_$Impl_$.balance(t1.k,t1.x,this1,t1.t);
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMin = function(map) {
	switch(map[1]) {
	case 0:
		throw new thx_Error("can not return the minimal element of an empty map",null,{ fileName : "Map.hx", lineNumber : 161, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMin"});
		break;
	case 1:
		if(map[5][1] == 0) {
			var r = map[6];
			var k = map[3];
			var x = map[4];
			return { k : k, x : x, t : r};
		} else {
			var r1 = map[6];
			var k1 = map[3];
			var x1 = map[4];
			var l = map[5];
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMin(l);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,t.t,r1)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMax = function(map) {
	switch(map[1]) {
	case 0:
		throw new thx_Error("can not return the maximal element of an empty map",null,{ fileName : "Map.hx", lineNumber : 171, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMax"});
		break;
	case 1:
		if(map[6][1] == 0) {
			var k = map[3];
			var x = map[4];
			var l = map[5];
			return { k : k, x : x, t : l};
		} else {
			var k1 = map[3];
			var x1 = map[4];
			var l1 = map[5];
			var r = map[6];
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(r);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,l1,t.t)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.rotateLeft = function(k,x,lhs,rhs) {
	if(rhs[1] == 1) {
		var ry = rhs[6];
		var ly = rhs[5];
		if(thx_fp__$Map_Map_$Impl_$.size(ly) < 2 * thx_fp__$Map_Map_$Impl_$.size(ry)) {
			return thx_fp__$Map_Map_$Impl_$.singleLeft(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.rotateRight = function(k,x,lhs,rhs) {
	if(lhs[1] == 1) {
		var ry = lhs[6];
		var ly = lhs[5];
		if(thx_fp__$Map_Map_$Impl_$.size(ry) < 2 * thx_fp__$Map_Map_$Impl_$.size(ly)) {
			return thx_fp__$Map_Map_$Impl_$.singleRight(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.singleLeft = function(k1,x1,t1,rhs) {
	if(rhs[1] == 1) {
		var t3 = rhs[6];
		var t2 = rhs[5];
		var x2 = rhs[4];
		var k2 = rhs[3];
		var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k2,x2,lhs,t3);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 193, className : "thx.fp._Map.Map_Impl_", methodName : "singleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.singleRight = function(k1,x1,lhs,t3) {
	if(lhs[1] == 1) {
		var t2 = lhs[6];
		var t1 = lhs[5];
		var x2 = lhs[4];
		var k2 = lhs[3];
		var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t2) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k1,x1,t2,t3);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k2,x2,t1,rhs);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 199, className : "thx.fp._Map.Map_Impl_", methodName : "singleRight"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleLeft = function(k1,x1,t1,rhs) {
	if(rhs[1] == 1) {
		if(rhs[5][1] == 1) {
			var t4 = rhs[6];
			var k2 = rhs[3];
			var x2 = rhs[4];
			var t3 = rhs[5][6];
			var t2 = rhs[5][5];
			var x3 = rhs[5][4];
			var k3 = rhs[5][3];
			var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
			var rhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k2,x2,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs1) + 1,k3,x3,lhs,rhs1);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleRight = function(k1,x1,lhs,t4) {
	if(lhs[1] == 1) {
		if(lhs[6][1] == 1) {
			var k2 = lhs[3];
			var x2 = lhs[4];
			var t1 = lhs[5];
			var t3 = lhs[6][6];
			var t2 = lhs[6][5];
			var x3 = lhs[6][4];
			var k3 = lhs[6][3];
			var lhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k2,x2,t1,t2);
			var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k1,x1,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k3,x3,lhs1,rhs);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
	}
};
var thx_fp_MapImpl = { __ename__ : ["thx","fp","MapImpl"], __constructs__ : ["Tip","Bin"] };
thx_fp_MapImpl.Tip = ["Tip",0];
thx_fp_MapImpl.Tip.__enum__ = thx_fp_MapImpl;
thx_fp_MapImpl.Bin = function(size,key,value,lhs,rhs) { var $x = ["Bin",1,size,key,value,lhs,rhs]; $x.__enum__ = thx_fp_MapImpl; return $x; };
var thx_promise_Future = function() {
	this.handlers = [];
	this.state = haxe_ds_Option.None;
};
thx_promise_Future.__name__ = ["thx","promise","Future"];
thx_promise_Future.sequence = function(arr) {
	return thx_promise_Future.create(function(callback) {
		var poll = null;
		poll = function(_) {
			if(arr.length == 0) {
				callback(thx_Nil.nil);
			} else {
				arr.shift().then(poll);
			}
		};
		poll(null);
	});
};
thx_promise_Future.afterAll = function(arr) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Future.all(arr).then(function(_) {
			callback(thx_Nil.nil);
		});
	});
};
thx_promise_Future.all = function(arr) {
	return thx_promise_Future.create(function(callback) {
		var results = [];
		var counter = 0;
		arr.map(function(p,i) {
			p.then(function(v) {
				results[i] = v;
				++counter;
				if(counter == arr.length) {
					callback(results);
				}
			});
		});
	});
};
thx_promise_Future.create = function(handler) {
	var future = new thx_promise_Future();
	handler($bind(future,future.setState));
	return future;
};
thx_promise_Future.flatten = function(future) {
	return thx_promise_Future.create(function(callback) {
		future.then(function(future1) {
			future1.then(callback);
		});
	});
};
thx_promise_Future.value = function(v) {
	return thx_promise_Future.create(function(callback) {
		callback(v);
	});
};
thx_promise_Future.prototype = {
	handlers: null
	,state: null
	,delay: function(delayms) {
		if(null == delayms) {
			return this.flatMap(function(v) {
				return thx_promise_Timer.immediateValue(v);
			});
		} else {
			return this.flatMap(function(v1) {
				return thx_promise_Timer.delayValue(v1,delayms);
			});
		}
	}
	,hasValue: function() {
		return thx_Options.toBool(this.state);
	}
	,map: function(handler) {
		var _gthis = this;
		return thx_promise_Future.create(function(callback) {
			_gthis.then(function(v) {
				callback(handler(v));
			});
		});
	}
	,mapAsync: function(handler) {
		var _gthis = this;
		return thx_promise_Future.create(function(callback) {
			_gthis.then(function(result) {
				handler(result,callback);
			});
		});
	}
	,mapPromise: function(handler) {
		var _gthis = this;
		return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
			_gthis.then(function(result) {
				thx_promise__$Promise_Promise_$Impl_$.failure(thx_promise__$Promise_Promise_$Impl_$.success(handler(result),resolve),reject);
			});
		});
	}
	,mapFuture: function(handler) {
		return this.flatMap(handler);
	}
	,flatMap: function(handler) {
		var _gthis = this;
		return thx_promise_Future.create(function(callback) {
			_gthis.then(function(v) {
				handler(v).then(callback);
			});
		});
	}
	,then: function(handler) {
		this.handlers.push(handler);
		this.update();
		return this;
	}
	,toString: function() {
		return "Future";
	}
	,setState: function(newstate) {
		var _g = this.state;
		switch(_g[1]) {
		case 0:
			throw new thx_Error("future was already \"" + Std.string(_g[2]) + "\", can't apply the new state \"" + Std.string(newstate) + "\"",null,{ fileName : "Future.hx", lineNumber : 113, className : "thx.promise.Future", methodName : "setState"});
			break;
		case 1:
			this.state = haxe_ds_Option.Some(newstate);
			break;
		}
		this.update();
		return this;
	}
	,update: function() {
		var _g = this.state;
		switch(_g[1]) {
		case 0:
			var result = _g[2];
			var index = -1;
			while(++index < this.handlers.length) this.handlers[index](result);
			this.handlers = [];
			break;
		case 1:
			break;
		}
	}
	,__class__: thx_promise_Future
};
var thx_promise_Futures = function() { };
thx_promise_Futures.__name__ = ["thx","promise","Futures"];
thx_promise_Futures.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		var counter = 0;
		var v1 = null;
		var v2 = null;
		var complete = function() {
			if(counter < 2) {
				return;
			}
			callback({ _0 : v1, _1 : v2});
		};
		p1.then(function(v) {
			++counter;
			v1 = v;
			complete();
		});
		p2.then(function(v3) {
			++counter;
			v2 = v3;
			complete();
		});
	});
};
thx_promise_Futures.log = function(future,prefix) {
	if(prefix == null) {
		prefix = "";
	}
	return future.then(function(r) {
		haxe_Log.trace("" + prefix + " VALUE: " + Std.string(r),{ fileName : "Future.hx", lineNumber : 163, className : "thx.promise.Futures", methodName : "log"});
	});
};
var thx_promise_FutureTuple6 = function() { };
thx_promise_FutureTuple6.__name__ = ["thx","promise","FutureTuple6"];
thx_promise_FutureTuple6.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
thx_promise_FutureTuple6.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,t._2,t._3,t._4,t._5,cb);
		return;
	});
};
thx_promise_FutureTuple6.mapTupleFuture = function(future,callback) {
	return future.flatMap(function(t) {
		return callback(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
thx_promise_FutureTuple6.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
var thx_promise_FutureTuple5 = function() { };
thx_promise_FutureTuple5.__name__ = ["thx","promise","FutureTuple5"];
thx_promise_FutureTuple5.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			var this1 = t._0;
			callback({ _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : t._1});
		});
	});
};
thx_promise_FutureTuple5.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_promise_FutureTuple5.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,t._2,t._3,t._4,cb);
		return;
	});
};
thx_promise_FutureTuple5.mapTupleFuture = function(future,callback) {
	return future.flatMap(function(t) {
		return callback(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_promise_FutureTuple5.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1,t._2,t._3,t._4);
	});
};
var thx_promise_FutureTuple4 = function() { };
thx_promise_FutureTuple4.__name__ = ["thx","promise","FutureTuple4"];
thx_promise_FutureTuple4.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			var this1 = t._0;
			callback({ _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : t._1});
		});
	});
};
thx_promise_FutureTuple4.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1,t._2,t._3);
	});
};
thx_promise_FutureTuple4.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,t._2,t._3,cb);
		return;
	});
};
thx_promise_FutureTuple4.mapTupleFuture = function(future,callback) {
	return future.flatMap(function(t) {
		return callback(t._0,t._1,t._2,t._3);
	});
};
thx_promise_FutureTuple4.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1,t._2,t._3);
	});
};
var thx_promise_FutureTuple3 = function() { };
thx_promise_FutureTuple3.__name__ = ["thx","promise","FutureTuple3"];
thx_promise_FutureTuple3.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			var this1 = t._0;
			callback({ _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : t._1});
		});
	});
};
thx_promise_FutureTuple3.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1,t._2);
	});
};
thx_promise_FutureTuple3.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,t._2,cb);
		return;
	});
};
thx_promise_FutureTuple3.mapTupleFuture = function(future,callback) {
	return future.flatMap(function(t) {
		return callback(t._0,t._1,t._2);
	});
};
thx_promise_FutureTuple3.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1,t._2);
	});
};
var thx_promise_FutureTuple2 = function() { };
thx_promise_FutureTuple2.__name__ = ["thx","promise","FutureTuple2"];
thx_promise_FutureTuple2.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			var this1 = t._0;
			callback({ _0 : this1._0, _1 : this1._1, _2 : t._1});
		});
	});
};
thx_promise_FutureTuple2.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1);
	});
};
thx_promise_FutureTuple2.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,cb);
		return;
	});
};
thx_promise_FutureTuple2.mapTupleFuture = function(future,callback) {
	return future.flatMap(function(t) {
		return callback(t._0,t._1);
	});
};
thx_promise_FutureTuple2.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1);
	});
};
var thx_promise_FutureNil = function() { };
thx_promise_FutureNil.__name__ = ["thx","promise","FutureNil"];
thx_promise_FutureNil.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			callback(t._1);
		});
	});
};
thx_promise_FutureNil.nil = function(p) {
	return thx_promise_Future.create(function(callback) {
		p.then(function(_) {
			callback(thx_Nil.nil);
		});
	});
};
var thx_promise__$Promise_Promise_$Impl_$ = {};
thx_promise__$Promise_Promise_$Impl_$.__name__ = ["thx","promise","_Promise","Promise_Impl_"];
thx_promise__$Promise_Promise_$Impl_$._new = function(future) {
	return future;
};
thx_promise__$Promise_Promise_$Impl_$.fromFuture = function(future) {
	return future.map(function(v) {
		return thx_Either.Right(v);
	});
};
thx_promise__$Promise_Promise_$Impl_$.all = function(arr) {
	if(arr.length == 0) {
		return thx_promise__$Promise_Promise_$Impl_$.value([]);
	} else {
		return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
			var results = [];
			var counter = 0;
			var hasError = false;
			var _g1 = 0;
			var _g = arr.length;
			while(_g1 < _g) {
				var i = [_g1++];
				thx_promise__$Promise_Promise_$Impl_$.either(arr[i[0]],(function(i1) {
					return function(v) {
						if(!hasError) {
							results[i1[0]] = v;
							++counter;
							if(counter == arr.length) {
								resolve(results);
							}
						}
					};
				})(i),(function() {
					return function(err) {
						if(!hasError) {
							hasError = true;
							reject(err);
						}
					};
				})());
			}
		});
	}
};
thx_promise__$Promise_Promise_$Impl_$.afterAll = function(arr) {
	return thx_promise__$Promise_Promise_$Impl_$.map(thx_promise__$Promise_Promise_$Impl_$.sequence(arr),function(a) {
		return thx_Nil.nil;
	});
};
thx_promise__$Promise_Promise_$Impl_$.sequence = function(arr) {
	var tmp = thx_promise__$Promise_Promise_$Impl_$.value([]);
	return thx_Arrays.reduce(arr,function(acc,p) {
		return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(acc,function(arr1) {
			return thx_promise__$Promise_Promise_$Impl_$.map(p,function(t) {
				return arr1.concat([t]);
			});
		},function(err) {
			return thx_promise__$Promise_Promise_$Impl_$.error(err);
		});
	},tmp);
};
thx_promise__$Promise_Promise_$Impl_$.allSequence = function(arr) {
	return thx_promise__$Promise_Promise_$Impl_$.sequence(arr);
};
thx_promise__$Promise_Promise_$Impl_$.create = function(callback) {
	return thx_promise_Future.create(function(cb) {
		try {
			callback(function(v) {
				cb(thx_Either.Right(v));
			},function(e) {
				cb(thx_Either.Left(e));
			});
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			cb(thx_Either.Left(thx_Error.fromDynamic(e1,{ fileName : "Promise.hx", lineNumber : 87, className : "thx.promise._Promise.Promise_Impl_", methodName : "create"})));
		}
	});
};
thx_promise__$Promise_Promise_$Impl_$.createUnsafe = function(callback) {
	return thx_promise_Future.create(function(cb) {
		callback(function(v) {
			cb(thx_Either.Right(v));
		},function(e) {
			cb(thx_Either.Left(e));
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.createFulfill = function(callback) {
	return thx_promise_Future.create(function(cb) {
		try {
			callback(cb);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			cb(thx_Either.Left(thx_Error.fromDynamic(e,{ fileName : "Promise.hx", lineNumber : 104, className : "thx.promise._Promise.Promise_Impl_", methodName : "createFulfill"})));
		}
	});
};
thx_promise__$Promise_Promise_$Impl_$.fail = function(message,pos) {
	return thx_promise__$Promise_Promise_$Impl_$.error(new thx_Error(message,null,pos));
};
thx_promise__$Promise_Promise_$Impl_$.error = function(err) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(_,reject) {
		reject(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.value = function(v) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,_) {
		resolve(v);
	});
};
thx_promise__$Promise_Promise_$Impl_$.always = function(this1,handler) {
	return thx_promise_Future.create(function(cb) {
		this1.then(function(v) {
			try {
				handler();
				cb(v);
			} catch( e ) {
				haxe_CallStack.lastException = e;
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				cb(thx_Either.Left(thx_Error.fromDynamic(e,{ fileName : "Promise.hx", lineNumber : 124, className : "thx.promise._Promise.Promise_Impl_", methodName : "always"})));
			}
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.either = function(this1,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.createUnsafe(function(resolve,reject) {
		this1.then(function(r) {
			try {
				switch(r[1]) {
				case 0:
					var e = r[2];
					failure(e);
					reject(e);
					break;
				case 1:
					var v = r[2];
					success(v);
					resolve(v);
					break;
				}
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
				reject(thx_Error.fromDynamic(e1,{ fileName : "Promise.hx", lineNumber : 143, className : "thx.promise._Promise.Promise_Impl_", methodName : "either"}));
			}
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.delay = function(this1,delayms) {
	var delayms1 = delayms;
	return null == delayms1?this1.flatMap(function(v) {
		return thx_promise_Timer.immediateValue(v);
	}):this1.flatMap(function(v1) {
		return thx_promise_Timer.delayValue(v1,delayms1);
	});
};
thx_promise__$Promise_Promise_$Impl_$.isFailure = function(this1) {
	var _g = this1.state;
	switch(_g[1]) {
	case 0:
		if(_g[2][1] == 1) {
			return false;
		} else {
			return true;
		}
		break;
	case 1:
		return false;
	}
};
thx_promise__$Promise_Promise_$Impl_$.isResolved = function(this1) {
	var _g = this1.state;
	switch(_g[1]) {
	case 0:
		if(_g[2][1] == 0) {
			return false;
		} else {
			return true;
		}
		break;
	case 1:
		return false;
	}
};
thx_promise__$Promise_Promise_$Impl_$.failure = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(this1,function(_) {
	},failure);
};
thx_promise__$Promise_Promise_$Impl_$.mapAlways = function(this1,handler) {
	return thx_promise__$Promise_Promise_$Impl_$.map(this1,function(_) {
		return handler();
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapAlwaysAsyncFuture = function(this1,handler) {
	return this1.mapAsync(function(_,cb) {
		handler(cb);
		return;
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapAlwaysFuture = function(this1,handler) {
	return this1.flatMap(function(_) {
		return handler();
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapEither = function(this1,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(v) {
		return thx_promise__$Promise_Promise_$Impl_$.value(success(v));
	},function(e) {
		return thx_promise__$Promise_Promise_$Impl_$.value(failure(e));
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapEitherFuture = function(this1,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEitherFuture(this1,function(v) {
		return thx_promise_Future.value(success(v));
	},function(e) {
		return thx_promise_Future.value(failure(e));
	});
};
thx_promise__$Promise_Promise_$Impl_$.flatMapEitherFuture = function(this1,success,failure) {
	return this1.flatMap(function(result) {
		switch(result[1]) {
		case 0:
			var e = result[2];
			return failure(e);
		case 1:
			var v = result[2];
			return success(v);
		}
	});
};
thx_promise__$Promise_Promise_$Impl_$.flatMapEither = function(this1,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.createUnsafe(function(resolve,reject) {
		this1.then(function(result) {
			switch(result[1]) {
			case 0:
				var e = result[2];
				try {
					thx_promise__$Promise_Promise_$Impl_$.either(failure(e),resolve,reject);
				} catch( e1 ) {
					haxe_CallStack.lastException = e1;
					if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
					reject(thx_Error.fromDynamic(e1,{ fileName : "Promise.hx", lineNumber : 201, className : "thx.promise._Promise.Promise_Impl_", methodName : "flatMapEither"}));
				}
				break;
			case 1:
				var v = result[2];
				try {
					thx_promise__$Promise_Promise_$Impl_$.either(success(v),resolve,reject);
				} catch( e2 ) {
					haxe_CallStack.lastException = e2;
					if (e2 instanceof js__$Boot_HaxeError) e2 = e2.val;
					reject(thx_Error.fromDynamic(e2,{ fileName : "Promise.hx", lineNumber : 200, className : "thx.promise._Promise.Promise_Impl_", methodName : "flatMapEither"}));
				}
				break;
			}
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapFailure = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.mapEitherFuture(this1,function(v) {
		return v;
	},failure);
};
thx_promise__$Promise_Promise_$Impl_$.mapFailureFuture = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEitherFuture(this1,function(v) {
		return thx_promise_Future.value(v);
	},failure);
};
thx_promise__$Promise_Promise_$Impl_$.mapFailurePromise = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.recover(this1,failure);
};
thx_promise__$Promise_Promise_$Impl_$.recover = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(v) {
		return thx_promise__$Promise_Promise_$Impl_$.value(v);
	},failure);
};
thx_promise__$Promise_Promise_$Impl_$.recoverAsFuture = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.mapEitherFuture(this1,function(v) {
		return v;
	},failure);
};
thx_promise__$Promise_Promise_$Impl_$.map = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(v) {
		return thx_promise__$Promise_Promise_$Impl_$.value(success(v));
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.ap = function(this1,pf) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(t) {
		var _e = pf;
		return (function(success) {
			return thx_promise__$Promise_Promise_$Impl_$.map(_e,success);
		})(function(_) {
			return _(t);
		});
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapSuccess = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.map(this1,success);
};
thx_promise__$Promise_Promise_$Impl_$.flatMap = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,success,function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.append = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(_) {
		return success();
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.andThen = function(this1,next) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(_) {
		return next();
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.foreachM = function(this1,f) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(t) {
		var tmp = f(t);
		var b = t;
		return thx_promise__$Promise_Promise_$Impl_$.map(tmp,function(a) {
			return b;
		});
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapSuccessPromise = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,success,function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapNull = function(this1,handler) {
	return thx_promise__$Promise_Promise_$Impl_$.recoverNull(this1,handler);
};
thx_promise__$Promise_Promise_$Impl_$.recoverNull = function(this1,handler) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(this1,function(v) {
		if(null == v) {
			return handler();
		} else {
			return thx_promise__$Promise_Promise_$Impl_$.value(v);
		}
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.success = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.either(this1,success,function(_) {
	});
};
thx_promise__$Promise_Promise_$Impl_$.throwFailure = function(this1) {
	return this1.then(function(r) {
		if(r[1] == 0) {
			var err = r[2];
			throw err;
		}
	});
};
thx_promise__$Promise_Promise_$Impl_$.toString = function(this1) {
	return "Promise";
};
thx_promise__$Promise_Promise_$Impl_$.toFuture = function(this1) {
	return this1;
};
var thx_promise_Promises = function() { };
thx_promise_Promises.__name__ = ["thx","promise","Promises"];
thx_promise_Promises.par = function(f,p1,p2) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		var hasError = false;
		var counter = 0;
		var v1 = null;
		var v2 = null;
		var complete = function() {
			if(counter < 2) {
				return;
			}
			resolve(f(v1,v2));
		};
		var handleError = function(error) {
			if(hasError) {
				return;
			}
			hasError = true;
			reject(error);
		};
		thx_promise__$Promise_Promise_$Impl_$.either(p1,function(v) {
			if(hasError) {
				return;
			}
			++counter;
			v1 = v;
			complete();
		},handleError);
		thx_promise__$Promise_Promise_$Impl_$.either(p2,function(v3) {
			if(hasError) {
				return;
			}
			++counter;
			v2 = v3;
			complete();
		},handleError);
	});
};
thx_promise_Promises.par3 = function(f,p1,p2,p3) {
	var f1 = f;
	var tmp = thx_promise_Promises.par(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	},p1,p2);
	return thx_promise_Promises.par(function(f2,g) {
		return f2(g);
	},tmp,p3);
};
thx_promise_Promises.par4 = function(f,p1,p2,p3,p4) {
	var f1 = f;
	var tmp = thx_promise_Promises.par3(function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	},p1,p2,p3);
	return thx_promise_Promises.par(function(f2,g) {
		return f2(g);
	},tmp,p4);
};
thx_promise_Promises.par5 = function(f,p1,p2,p3,p4,p5) {
	var f1 = f;
	var tmp = thx_promise_Promises.par4(function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	},p1,p2,p3,p4);
	return thx_promise_Promises.par(function(f2,g) {
		return f2(g);
	},tmp,p5);
};
thx_promise_Promises.par6 = function(f,p1,p2,p3,p4,p5,p6) {
	var f1 = f;
	var tmp = thx_promise_Promises.par5(function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	},p1,p2,p3,p4,p5);
	return thx_promise_Promises.par(function(f2,g) {
		return f2(g);
	},tmp,p6);
};
thx_promise_Promises.join = function(p1,p2) {
	return thx_promise_Promises.par(thx__$Tuple_Tuple2_$Impl_$.of,p1,p2);
};
thx_promise_Promises.join2 = function(p1,p2) {
	return thx_promise_Promises.par(thx__$Tuple_Tuple2_$Impl_$.of,p1,p2);
};
thx_promise_Promises.join3 = function(p1,p2,p3) {
	return thx_promise_Promises.par3(thx__$Tuple_Tuple3_$Impl_$.of,p1,p2,p3);
};
thx_promise_Promises.join4 = function(p1,p2,p3,p4) {
	return thx_promise_Promises.par4(thx__$Tuple_Tuple4_$Impl_$.of,p1,p2,p3,p4);
};
thx_promise_Promises.join5 = function(p1,p2,p3,p4,p5) {
	return thx_promise_Promises.par5(thx__$Tuple_Tuple5_$Impl_$.of,p1,p2,p3,p4,p5);
};
thx_promise_Promises.join6 = function(p1,p2,p3,p4,p5,p6) {
	return thx_promise_Promises.par6(thx__$Tuple_Tuple6_$Impl_$.of,p1,p2,p3,p4,p5,p6);
};
thx_promise_Promises.log = function(promise,prefix) {
	if(prefix == null) {
		prefix = "";
	}
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(r) {
		haxe_Log.trace("" + prefix + " SUCCESS: " + Std.string(r),{ fileName : "Promise.hx", lineNumber : 354, className : "thx.promise.Promises", methodName : "log"});
	},function(e) {
		haxe_Log.trace("" + prefix + " ERROR: " + e.toString(),{ fileName : "Promise.hx", lineNumber : 355, className : "thx.promise.Promises", methodName : "log"});
	});
};
var thx_promise_PromiseTuple6 = function() { };
thx_promise_PromiseTuple6.__name__ = ["thx","promise","PromiseTuple6"];
thx_promise_PromiseTuple6.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(promise,function(t) {
		return success(t._0,t._1,t._2,t._3,t._4,t._5);
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise_PromiseTuple6.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.map(promise,function(t) {
		return success(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
thx_promise_PromiseTuple6.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1,t._2,t._3,t._4,t._5);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseTuple5 = function() { };
thx_promise_PromiseTuple5.__name__ = ["thx","promise","PromiseTuple5"];
thx_promise_PromiseTuple5.join = function(p1,p2) {
	return thx_promise_Promises.par(function(f,g) {
		return { _0 : f._0, _1 : f._1, _2 : f._2, _3 : f._3, _4 : f._4, _5 : g};
	},p1,p2);
};
thx_promise_PromiseTuple5.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(promise,function(t) {
		return success(t._0,t._1,t._2,t._3,t._4);
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise_PromiseTuple5.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.map(promise,function(t) {
		return success(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_promise_PromiseTuple5.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1,t._2,t._3,t._4);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseTuple4 = function() { };
thx_promise_PromiseTuple4.__name__ = ["thx","promise","PromiseTuple4"];
thx_promise_PromiseTuple4.join = function(p1,p2) {
	return thx_promise_Promises.par(function(f,g) {
		return { _0 : f._0, _1 : f._1, _2 : f._2, _3 : f._3, _4 : g};
	},p1,p2);
};
thx_promise_PromiseTuple4.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(promise,function(t) {
		return success(t._0,t._1,t._2,t._3);
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise_PromiseTuple4.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.map(promise,function(t) {
		return success(t._0,t._1,t._2,t._3);
	});
};
thx_promise_PromiseTuple4.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1,t._2,t._3);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseTuple3 = function() { };
thx_promise_PromiseTuple3.__name__ = ["thx","promise","PromiseTuple3"];
thx_promise_PromiseTuple3.join = function(p1,p2) {
	return thx_promise_Promises.par(function(f,g) {
		return { _0 : f._0, _1 : f._1, _2 : f._2, _3 : g};
	},p1,p2);
};
thx_promise_PromiseTuple3.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(promise,function(t) {
		return success(t._0,t._1,t._2);
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise_PromiseTuple3.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.map(promise,function(t) {
		return success(t._0,t._1,t._2);
	});
};
thx_promise_PromiseTuple3.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1,t._2);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseTuple2 = function() { };
thx_promise_PromiseTuple2.__name__ = ["thx","promise","PromiseTuple2"];
thx_promise_PromiseTuple2.join = function(p1,p2) {
	return thx_promise_Promises.par(function(f,g) {
		return { _0 : f._0, _1 : f._1, _2 : g};
	},p1,p2);
};
thx_promise_PromiseTuple2.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.flatMapEither(promise,function(t) {
		return success(t._0,t._1);
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise_PromiseTuple2.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.map(promise,function(t) {
		return success(t._0,t._1);
	});
};
thx_promise_PromiseTuple2.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseNil = function() { };
thx_promise_PromiseNil.__name__ = ["thx","promise","PromiseNil"];
thx_promise_PromiseNil.join = function(p1,p2) {
	return thx_promise_Promises.par(function(_,g) {
		return g;
	},p1,p2);
};
thx_promise_PromiseNil.nil = function(p) {
	return thx_promise__$Promise_Promise_$Impl_$.map(p,function(a) {
		return thx_Nil.nil;
	});
};
var thx_promise_PromiseAPlus = function() { };
thx_promise_PromiseAPlus.__name__ = ["thx","promise","PromiseAPlus"];
thx_promise_PromiseAPlus.promise = function(p,pos) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		p.then(resolve,function(e) {
			reject(thx_Error.fromDynamic(e,pos));
		});
	});
};
thx_promise_PromiseAPlus.aPlus = function(p) {
	return new Promise(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.failure(thx_promise__$Promise_Promise_$Impl_$.success(p,resolve),reject);
	});
};
var thx_promise_PromiseAPlusVoid = function() { };
thx_promise_PromiseAPlusVoid.__name__ = ["thx","promise","PromiseAPlusVoid"];
thx_promise_PromiseAPlusVoid.promise = function(p,pos) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		p.then(function() {
			resolve(thx_Nil.nil);
		},function(e) {
			reject(thx_Error.fromDynamic(e,pos));
		});
	});
};
thx_promise_PromiseAPlusVoid.aPlus = function(p) {
	return new Promise(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.failure(thx_promise__$Promise_Promise_$Impl_$.success(p,function() {
			resolve(thx_Nil.nil);
		}),reject);
	});
};
var thx_promise_Timer = function() { };
thx_promise_Timer.__name__ = ["thx","promise","Timer"];
thx_promise_Timer.delay = function(delayms) {
	return thx_promise_Timer.delayValue(thx_Nil.nil,delayms);
};
thx_promise_Timer.delayValue = function(value,delayms) {
	return thx_promise_Future.create(function(callback) {
		var f = callback;
		var a1 = value;
		thx_Timer.delay(function() {
			f(a1);
		},delayms);
	});
};
thx_promise_Timer.immediate = function() {
	return thx_promise_Timer.immediateValue(thx_Nil.nil);
};
thx_promise_Timer.immediateValue = function(value) {
	return thx_promise_Future.create(function(callback) {
		var f = callback;
		var a1 = value;
		thx_Timer.immediate(function() {
			f(a1);
		});
	});
};
var thx_text_Diactrics = function() { };
thx_text_Diactrics.__name__ = ["thx","text","Diactrics"];
thx_text_Diactrics.clean = function(input) {
	var chars = input.split("");
	var $char;
	var _g1 = 0;
	var _g = chars.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _this = thx_text_Diactrics.map;
		var key = chars[i];
		$char = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		if(null != $char) {
			chars[i] = $char;
		}
	}
	return chars.join("");
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
if(Math.imul != null) {
	haxe__$Int32_Int32_$Impl_$.mul = Math.imul;
}
var __map_reserved = {}
var scope = ("undefined" !== typeof window && window) || ("undefined" !== typeof global && global) || Function("return this")();
if(!scope.setImmediate) {
	scope.setImmediate = function(callback) {
		scope.setTimeout(callback,0);
	};
}
var lastTime = 0;
var vendors = ["webkit","moz"];
var x = 0;
while(x < vendors.length && !scope.requestAnimationFrame) {
	scope.requestAnimationFrame = scope[vendors[x] + "RequestAnimationFrame"];
	scope.cancelAnimationFrame = scope[vendors[x] + "CancelAnimationFrame"] || scope[vendors[x] + "CancelRequestAnimationFrame"];
	++x;
}
if(!scope.requestAnimationFrame) {
	scope.requestAnimationFrame = function(callback1) {
		var currTime = new Date().getTime();
		var timeToCall = Math.max(0,16 - (currTime - lastTime));
		var id = scope.setTimeout(function() {
			callback1(currTime + timeToCall);
		},timeToCall);
		lastTime = currTime + timeToCall;
		return id;
	};
}
if(!scope.cancelAnimationFrame) {
	scope.cancelAnimationFrame = function(id1) {
		scope.clearTimeout(id1);
	};
}
if(typeof(scope.performance) == "undefined") {
	scope.performance = { };
}
if(typeof(scope.performance.now) == "undefined") {
	var nowOffset = new Date().getTime();
	if(scope.performance.timing && scope.performance.timing.navigationStart) {
		nowOffset = scope.performance.timing.navigationStart;
	}
	var now = function() {
		return new Date() - nowOffset;
	};
	scope.performance.now = now;
}
thx_culture_Culture.cultures = new haxe_ds_StringMap();
thx_culture_Culture.list = [];
DateTools.DAYS_OF_MONTH = [31,28,31,30,31,30,31,31,30,31,30,31];
Main.CARDS_FILE = "assets/AllSets-x.json";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = { }.toString;
msb_Api.pattern = new EReg("[^\\w ]","g");
msb_Db.MTG_DATABASE = "mtg";
msb_Db.MTG_COLLECTIONS = ["refs","sets","cards"];
thx_Floats.TOLERANCE = 10e-5;
thx_Floats.EPSILON = 1e-9;
thx_Floats.pattern_parse = new EReg("^(\\+|-)?\\d+(\\.\\d+)?(e-?\\d+)?$","");
thx_Floats.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Floats.compare);
thx_Floats.monoid = { zero : 0.0, append : function(a,b) {
	return a + b;
}};
thx_Ints.pattern_parse = new EReg("^[ \t\r\n]*[+-]?(\\d+|0x[0-9A-F]+)","i");
thx_Ints.BASE = "0123456789abcdefghijklmnopqrstuvwxyz";
thx_Ints.order = function(i0,i1) {
	if(i0 > i1) {
		return thx_OrderingImpl.GT;
	} else if(i0 == i1) {
		return thx_OrderingImpl.EQ;
	} else {
		return thx_OrderingImpl.LT;
	}
};
thx_Ints.monoid = { zero : 0, append : function(a,b) {
	return a + b;
}};
thx_Orderings.monoid = { zero : thx_OrderingImpl.EQ, append : function(o0,o1) {
	switch(o0[1]) {
	case 0:
		return thx_OrderingImpl.LT;
	case 1:
		return thx_OrderingImpl.GT;
	case 2:
		return o1;
	}
}};
thx_Strings.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Strings.compare);
thx_Strings.HASCODE_MAX = 2147483647;
thx_Strings.HASCODE_MUL = 31;
thx_Strings.monoid = { zero : "", append : function(a,b) {
	return a + b;
}};
thx_Strings.UCWORDS = new EReg("[^a-zA-Z]([a-z])","g");
thx_Strings.IS_BREAKINGWHITESPACE = new EReg("[^\t\n\r ]","");
thx_Strings.IS_ALPHA = new EReg("[^a-zA-Z]","");
thx_Strings.UCWORDSWS = new EReg("[ \t\r\n][a-z]","g");
thx_Strings.ALPHANUM = new EReg("^[a-z0-9]+$","i");
thx_Strings.DIGITS = new EReg("^[0-9]+$","");
thx_Strings.STRIPTAGS = new EReg("</?[a-z]+[^>]*>","gi");
thx_Strings.WSG = new EReg("[ \t\r\n]+","g");
thx_Strings.SPLIT_LINES = new EReg("\r\n|\n\r|\n|\r","g");
thx_Strings.CANONICALIZE_LINES = new EReg("\r\n|\n\r|\r","g");
thx_Timer.FRAME_RATE = Math.round(16.6666666666666679);
thx_culture_DateFormatInfo.invariant = new thx_culture_DateFormatInfo(0,"FirstDay","AM","PM",0,"Sunday","Gregorian",null,["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Su","Mo","Tu","We","Th","Fr","Sa"],["January","February","March","April","May","June","July","August","September","October","November","December",""],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],["January","February","March","April","May","June","July","August","September","October","November","December",""],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"dddd, dd MMMM yyyy","MM/dd/yyyy","dddd, dd MMMM yyyy HH:mm:ss","yyyy'-'MM'-'dd'T'HH':'mm':'ss","MMMM dd","ddd, dd MMM yyyy HH':'mm':'ss 'GMT'","HH:mm:ss","HH:mm","yyyy'-'MM'-'dd HH':'mm':'ss'Z'","yyyy MMMM","/",":");
thx_culture_NumberFormatInfo.invariant = new thx_culture_NumberFormatInfo(2,2,2,[3],[3],[3],0,1,0,0,0,".",".",".",",",",",",","-","+","¤","NaN","-Infinity","%","‰","Infinity");
thx_culture_Culture.invariant = new thx_culture_Culture("",thx_culture_DateFormatInfo.invariant,"",false,"iv","IVL",false,127,"Gregorian","Invariant Language","Invariant Language","Invariant Country","Invariant Country",thx_culture_NumberFormatInfo.invariant,",","IVL");
thx_culture_Pattern.currencyNegatives = ["($n)","-$n","$-n","$n-","(n$)","-n$","n-$","n$-","-n $","-$ n","n $-","$ n-","$ -n","n- $","($ n)","(n $)"];
thx_culture_Pattern.currencyPositives = ["$n","n$","$ n","n $"];
thx_culture_Pattern.numberNegatives = ["(n)","-n","- n","n-","n -"];
thx_culture_Pattern.percentNegatives = ["-n %","-n%","-%n","%-n","%n-","n-%","n%-","-%n","n %-","% n-","% -n","n- %"];
thx_culture_Pattern.percentPositives = ["n %","n%","%n","% n"];
thx_format_NumberFormat.BASE = "0123456789abcdefghijklmnopqrstuvwxyz";
thx_fp__$Map_Map_$Impl_$.delta = 5;
thx_fp__$Map_Map_$Impl_$.ratio = 2;
thx_promise__$Promise_Promise_$Impl_$.nil = thx_promise__$Promise_Promise_$Impl_$.value(thx_Nil.nil);
thx_text_Diactrics.map = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved[" "] != null) {
		_g.setReserved(" "," ");
	} else {
		_g.h[" "] = " ";
	}
	if(__map_reserved.A != null) {
		_g.setReserved("A","A");
	} else {
		_g.h["A"] = "A";
	}
	if(__map_reserved["Ⓐ"] != null) {
		_g.setReserved("Ⓐ","A");
	} else {
		_g.h["Ⓐ"] = "A";
	}
	if(__map_reserved["Ａ"] != null) {
		_g.setReserved("Ａ","A");
	} else {
		_g.h["Ａ"] = "A";
	}
	if(__map_reserved["À"] != null) {
		_g.setReserved("À","A");
	} else {
		_g.h["À"] = "A";
	}
	if(__map_reserved["Á"] != null) {
		_g.setReserved("Á","A");
	} else {
		_g.h["Á"] = "A";
	}
	if(__map_reserved["Â"] != null) {
		_g.setReserved("Â","A");
	} else {
		_g.h["Â"] = "A";
	}
	if(__map_reserved["Ầ"] != null) {
		_g.setReserved("Ầ","A");
	} else {
		_g.h["Ầ"] = "A";
	}
	if(__map_reserved["Ấ"] != null) {
		_g.setReserved("Ấ","A");
	} else {
		_g.h["Ấ"] = "A";
	}
	if(__map_reserved["Ẫ"] != null) {
		_g.setReserved("Ẫ","A");
	} else {
		_g.h["Ẫ"] = "A";
	}
	if(__map_reserved["Ẩ"] != null) {
		_g.setReserved("Ẩ","A");
	} else {
		_g.h["Ẩ"] = "A";
	}
	if(__map_reserved["Ã"] != null) {
		_g.setReserved("Ã","A");
	} else {
		_g.h["Ã"] = "A";
	}
	if(__map_reserved["Ā"] != null) {
		_g.setReserved("Ā","A");
	} else {
		_g.h["Ā"] = "A";
	}
	if(__map_reserved["Ă"] != null) {
		_g.setReserved("Ă","A");
	} else {
		_g.h["Ă"] = "A";
	}
	if(__map_reserved["Ằ"] != null) {
		_g.setReserved("Ằ","A");
	} else {
		_g.h["Ằ"] = "A";
	}
	if(__map_reserved["Ắ"] != null) {
		_g.setReserved("Ắ","A");
	} else {
		_g.h["Ắ"] = "A";
	}
	if(__map_reserved["Ẵ"] != null) {
		_g.setReserved("Ẵ","A");
	} else {
		_g.h["Ẵ"] = "A";
	}
	if(__map_reserved["Ẳ"] != null) {
		_g.setReserved("Ẳ","A");
	} else {
		_g.h["Ẳ"] = "A";
	}
	if(__map_reserved["Ȧ"] != null) {
		_g.setReserved("Ȧ","A");
	} else {
		_g.h["Ȧ"] = "A";
	}
	if(__map_reserved["Ǡ"] != null) {
		_g.setReserved("Ǡ","A");
	} else {
		_g.h["Ǡ"] = "A";
	}
	if(__map_reserved["Ä"] != null) {
		_g.setReserved("Ä","A");
	} else {
		_g.h["Ä"] = "A";
	}
	if(__map_reserved["Ǟ"] != null) {
		_g.setReserved("Ǟ","A");
	} else {
		_g.h["Ǟ"] = "A";
	}
	if(__map_reserved["Ả"] != null) {
		_g.setReserved("Ả","A");
	} else {
		_g.h["Ả"] = "A";
	}
	if(__map_reserved["Å"] != null) {
		_g.setReserved("Å","A");
	} else {
		_g.h["Å"] = "A";
	}
	if(__map_reserved["Ǻ"] != null) {
		_g.setReserved("Ǻ","A");
	} else {
		_g.h["Ǻ"] = "A";
	}
	if(__map_reserved["Ǎ"] != null) {
		_g.setReserved("Ǎ","A");
	} else {
		_g.h["Ǎ"] = "A";
	}
	if(__map_reserved["Ȁ"] != null) {
		_g.setReserved("Ȁ","A");
	} else {
		_g.h["Ȁ"] = "A";
	}
	if(__map_reserved["Ȃ"] != null) {
		_g.setReserved("Ȃ","A");
	} else {
		_g.h["Ȃ"] = "A";
	}
	if(__map_reserved["Ạ"] != null) {
		_g.setReserved("Ạ","A");
	} else {
		_g.h["Ạ"] = "A";
	}
	if(__map_reserved["Ậ"] != null) {
		_g.setReserved("Ậ","A");
	} else {
		_g.h["Ậ"] = "A";
	}
	if(__map_reserved["Ặ"] != null) {
		_g.setReserved("Ặ","A");
	} else {
		_g.h["Ặ"] = "A";
	}
	if(__map_reserved["Ḁ"] != null) {
		_g.setReserved("Ḁ","A");
	} else {
		_g.h["Ḁ"] = "A";
	}
	if(__map_reserved["Ą"] != null) {
		_g.setReserved("Ą","A");
	} else {
		_g.h["Ą"] = "A";
	}
	if(__map_reserved["Ⱥ"] != null) {
		_g.setReserved("Ⱥ","A");
	} else {
		_g.h["Ⱥ"] = "A";
	}
	if(__map_reserved["Ɐ"] != null) {
		_g.setReserved("Ɐ","A");
	} else {
		_g.h["Ɐ"] = "A";
	}
	if(__map_reserved["Ꜳ"] != null) {
		_g.setReserved("Ꜳ","AA");
	} else {
		_g.h["Ꜳ"] = "AA";
	}
	if(__map_reserved["Æ"] != null) {
		_g.setReserved("Æ","AE");
	} else {
		_g.h["Æ"] = "AE";
	}
	if(__map_reserved["Ǽ"] != null) {
		_g.setReserved("Ǽ","AE");
	} else {
		_g.h["Ǽ"] = "AE";
	}
	if(__map_reserved["Ǣ"] != null) {
		_g.setReserved("Ǣ","AE");
	} else {
		_g.h["Ǣ"] = "AE";
	}
	if(__map_reserved["Ꜵ"] != null) {
		_g.setReserved("Ꜵ","AO");
	} else {
		_g.h["Ꜵ"] = "AO";
	}
	if(__map_reserved["Ꜷ"] != null) {
		_g.setReserved("Ꜷ","AU");
	} else {
		_g.h["Ꜷ"] = "AU";
	}
	if(__map_reserved["Ꜹ"] != null) {
		_g.setReserved("Ꜹ","AV");
	} else {
		_g.h["Ꜹ"] = "AV";
	}
	if(__map_reserved["Ꜻ"] != null) {
		_g.setReserved("Ꜻ","AV");
	} else {
		_g.h["Ꜻ"] = "AV";
	}
	if(__map_reserved["Ꜽ"] != null) {
		_g.setReserved("Ꜽ","AY");
	} else {
		_g.h["Ꜽ"] = "AY";
	}
	if(__map_reserved.B != null) {
		_g.setReserved("B","B");
	} else {
		_g.h["B"] = "B";
	}
	if(__map_reserved["Ⓑ"] != null) {
		_g.setReserved("Ⓑ","B");
	} else {
		_g.h["Ⓑ"] = "B";
	}
	if(__map_reserved["Ｂ"] != null) {
		_g.setReserved("Ｂ","B");
	} else {
		_g.h["Ｂ"] = "B";
	}
	if(__map_reserved["Ḃ"] != null) {
		_g.setReserved("Ḃ","B");
	} else {
		_g.h["Ḃ"] = "B";
	}
	if(__map_reserved["Ḅ"] != null) {
		_g.setReserved("Ḅ","B");
	} else {
		_g.h["Ḅ"] = "B";
	}
	if(__map_reserved["Ḇ"] != null) {
		_g.setReserved("Ḇ","B");
	} else {
		_g.h["Ḇ"] = "B";
	}
	if(__map_reserved["Ƀ"] != null) {
		_g.setReserved("Ƀ","B");
	} else {
		_g.h["Ƀ"] = "B";
	}
	if(__map_reserved["Ƃ"] != null) {
		_g.setReserved("Ƃ","B");
	} else {
		_g.h["Ƃ"] = "B";
	}
	if(__map_reserved["Ɓ"] != null) {
		_g.setReserved("Ɓ","B");
	} else {
		_g.h["Ɓ"] = "B";
	}
	if(__map_reserved.C != null) {
		_g.setReserved("C","C");
	} else {
		_g.h["C"] = "C";
	}
	if(__map_reserved["Ⓒ"] != null) {
		_g.setReserved("Ⓒ","C");
	} else {
		_g.h["Ⓒ"] = "C";
	}
	if(__map_reserved["Ｃ"] != null) {
		_g.setReserved("Ｃ","C");
	} else {
		_g.h["Ｃ"] = "C";
	}
	if(__map_reserved["Ć"] != null) {
		_g.setReserved("Ć","C");
	} else {
		_g.h["Ć"] = "C";
	}
	if(__map_reserved["Ĉ"] != null) {
		_g.setReserved("Ĉ","C");
	} else {
		_g.h["Ĉ"] = "C";
	}
	if(__map_reserved["Ċ"] != null) {
		_g.setReserved("Ċ","C");
	} else {
		_g.h["Ċ"] = "C";
	}
	if(__map_reserved["Č"] != null) {
		_g.setReserved("Č","C");
	} else {
		_g.h["Č"] = "C";
	}
	if(__map_reserved["Ç"] != null) {
		_g.setReserved("Ç","C");
	} else {
		_g.h["Ç"] = "C";
	}
	if(__map_reserved["Ḉ"] != null) {
		_g.setReserved("Ḉ","C");
	} else {
		_g.h["Ḉ"] = "C";
	}
	if(__map_reserved["Ƈ"] != null) {
		_g.setReserved("Ƈ","C");
	} else {
		_g.h["Ƈ"] = "C";
	}
	if(__map_reserved["Ȼ"] != null) {
		_g.setReserved("Ȼ","C");
	} else {
		_g.h["Ȼ"] = "C";
	}
	if(__map_reserved["Ꜿ"] != null) {
		_g.setReserved("Ꜿ","C");
	} else {
		_g.h["Ꜿ"] = "C";
	}
	if(__map_reserved.D != null) {
		_g.setReserved("D","D");
	} else {
		_g.h["D"] = "D";
	}
	if(__map_reserved["Ⓓ"] != null) {
		_g.setReserved("Ⓓ","D");
	} else {
		_g.h["Ⓓ"] = "D";
	}
	if(__map_reserved["Ｄ"] != null) {
		_g.setReserved("Ｄ","D");
	} else {
		_g.h["Ｄ"] = "D";
	}
	if(__map_reserved["Ḋ"] != null) {
		_g.setReserved("Ḋ","D");
	} else {
		_g.h["Ḋ"] = "D";
	}
	if(__map_reserved["Ď"] != null) {
		_g.setReserved("Ď","D");
	} else {
		_g.h["Ď"] = "D";
	}
	if(__map_reserved["Ḍ"] != null) {
		_g.setReserved("Ḍ","D");
	} else {
		_g.h["Ḍ"] = "D";
	}
	if(__map_reserved["Ḑ"] != null) {
		_g.setReserved("Ḑ","D");
	} else {
		_g.h["Ḑ"] = "D";
	}
	if(__map_reserved["Ḓ"] != null) {
		_g.setReserved("Ḓ","D");
	} else {
		_g.h["Ḓ"] = "D";
	}
	if(__map_reserved["Ḏ"] != null) {
		_g.setReserved("Ḏ","D");
	} else {
		_g.h["Ḏ"] = "D";
	}
	if(__map_reserved["Đ"] != null) {
		_g.setReserved("Đ","D");
	} else {
		_g.h["Đ"] = "D";
	}
	if(__map_reserved["Ƌ"] != null) {
		_g.setReserved("Ƌ","D");
	} else {
		_g.h["Ƌ"] = "D";
	}
	if(__map_reserved["Ɗ"] != null) {
		_g.setReserved("Ɗ","D");
	} else {
		_g.h["Ɗ"] = "D";
	}
	if(__map_reserved["Ɖ"] != null) {
		_g.setReserved("Ɖ","D");
	} else {
		_g.h["Ɖ"] = "D";
	}
	if(__map_reserved["Ꝺ"] != null) {
		_g.setReserved("Ꝺ","D");
	} else {
		_g.h["Ꝺ"] = "D";
	}
	if(__map_reserved["Ǳ"] != null) {
		_g.setReserved("Ǳ","DZ");
	} else {
		_g.h["Ǳ"] = "DZ";
	}
	if(__map_reserved["Ǆ"] != null) {
		_g.setReserved("Ǆ","DZ");
	} else {
		_g.h["Ǆ"] = "DZ";
	}
	if(__map_reserved["ǲ"] != null) {
		_g.setReserved("ǲ","Dz");
	} else {
		_g.h["ǲ"] = "Dz";
	}
	if(__map_reserved["ǅ"] != null) {
		_g.setReserved("ǅ","Dz");
	} else {
		_g.h["ǅ"] = "Dz";
	}
	if(__map_reserved.E != null) {
		_g.setReserved("E","E");
	} else {
		_g.h["E"] = "E";
	}
	if(__map_reserved["Ⓔ"] != null) {
		_g.setReserved("Ⓔ","E");
	} else {
		_g.h["Ⓔ"] = "E";
	}
	if(__map_reserved["Ｅ"] != null) {
		_g.setReserved("Ｅ","E");
	} else {
		_g.h["Ｅ"] = "E";
	}
	if(__map_reserved["È"] != null) {
		_g.setReserved("È","E");
	} else {
		_g.h["È"] = "E";
	}
	if(__map_reserved["É"] != null) {
		_g.setReserved("É","E");
	} else {
		_g.h["É"] = "E";
	}
	if(__map_reserved["Ê"] != null) {
		_g.setReserved("Ê","E");
	} else {
		_g.h["Ê"] = "E";
	}
	if(__map_reserved["Ề"] != null) {
		_g.setReserved("Ề","E");
	} else {
		_g.h["Ề"] = "E";
	}
	if(__map_reserved["Ế"] != null) {
		_g.setReserved("Ế","E");
	} else {
		_g.h["Ế"] = "E";
	}
	if(__map_reserved["Ễ"] != null) {
		_g.setReserved("Ễ","E");
	} else {
		_g.h["Ễ"] = "E";
	}
	if(__map_reserved["Ể"] != null) {
		_g.setReserved("Ể","E");
	} else {
		_g.h["Ể"] = "E";
	}
	if(__map_reserved["Ẽ"] != null) {
		_g.setReserved("Ẽ","E");
	} else {
		_g.h["Ẽ"] = "E";
	}
	if(__map_reserved["Ē"] != null) {
		_g.setReserved("Ē","E");
	} else {
		_g.h["Ē"] = "E";
	}
	if(__map_reserved["Ḕ"] != null) {
		_g.setReserved("Ḕ","E");
	} else {
		_g.h["Ḕ"] = "E";
	}
	if(__map_reserved["Ḗ"] != null) {
		_g.setReserved("Ḗ","E");
	} else {
		_g.h["Ḗ"] = "E";
	}
	if(__map_reserved["Ĕ"] != null) {
		_g.setReserved("Ĕ","E");
	} else {
		_g.h["Ĕ"] = "E";
	}
	if(__map_reserved["Ė"] != null) {
		_g.setReserved("Ė","E");
	} else {
		_g.h["Ė"] = "E";
	}
	if(__map_reserved["Ë"] != null) {
		_g.setReserved("Ë","E");
	} else {
		_g.h["Ë"] = "E";
	}
	if(__map_reserved["Ẻ"] != null) {
		_g.setReserved("Ẻ","E");
	} else {
		_g.h["Ẻ"] = "E";
	}
	if(__map_reserved["Ě"] != null) {
		_g.setReserved("Ě","E");
	} else {
		_g.h["Ě"] = "E";
	}
	if(__map_reserved["Ȅ"] != null) {
		_g.setReserved("Ȅ","E");
	} else {
		_g.h["Ȅ"] = "E";
	}
	if(__map_reserved["Ȇ"] != null) {
		_g.setReserved("Ȇ","E");
	} else {
		_g.h["Ȇ"] = "E";
	}
	if(__map_reserved["Ẹ"] != null) {
		_g.setReserved("Ẹ","E");
	} else {
		_g.h["Ẹ"] = "E";
	}
	if(__map_reserved["Ệ"] != null) {
		_g.setReserved("Ệ","E");
	} else {
		_g.h["Ệ"] = "E";
	}
	if(__map_reserved["Ȩ"] != null) {
		_g.setReserved("Ȩ","E");
	} else {
		_g.h["Ȩ"] = "E";
	}
	if(__map_reserved["Ḝ"] != null) {
		_g.setReserved("Ḝ","E");
	} else {
		_g.h["Ḝ"] = "E";
	}
	if(__map_reserved["Ę"] != null) {
		_g.setReserved("Ę","E");
	} else {
		_g.h["Ę"] = "E";
	}
	if(__map_reserved["Ḙ"] != null) {
		_g.setReserved("Ḙ","E");
	} else {
		_g.h["Ḙ"] = "E";
	}
	if(__map_reserved["Ḛ"] != null) {
		_g.setReserved("Ḛ","E");
	} else {
		_g.h["Ḛ"] = "E";
	}
	if(__map_reserved["Ɛ"] != null) {
		_g.setReserved("Ɛ","E");
	} else {
		_g.h["Ɛ"] = "E";
	}
	if(__map_reserved["Ǝ"] != null) {
		_g.setReserved("Ǝ","E");
	} else {
		_g.h["Ǝ"] = "E";
	}
	if(__map_reserved.F != null) {
		_g.setReserved("F","F");
	} else {
		_g.h["F"] = "F";
	}
	if(__map_reserved["Ⓕ"] != null) {
		_g.setReserved("Ⓕ","F");
	} else {
		_g.h["Ⓕ"] = "F";
	}
	if(__map_reserved["Ｆ"] != null) {
		_g.setReserved("Ｆ","F");
	} else {
		_g.h["Ｆ"] = "F";
	}
	if(__map_reserved["Ḟ"] != null) {
		_g.setReserved("Ḟ","F");
	} else {
		_g.h["Ḟ"] = "F";
	}
	if(__map_reserved["Ƒ"] != null) {
		_g.setReserved("Ƒ","F");
	} else {
		_g.h["Ƒ"] = "F";
	}
	if(__map_reserved["Ꝼ"] != null) {
		_g.setReserved("Ꝼ","F");
	} else {
		_g.h["Ꝼ"] = "F";
	}
	if(__map_reserved.G != null) {
		_g.setReserved("G","G");
	} else {
		_g.h["G"] = "G";
	}
	if(__map_reserved["Ⓖ"] != null) {
		_g.setReserved("Ⓖ","G");
	} else {
		_g.h["Ⓖ"] = "G";
	}
	if(__map_reserved["Ｇ"] != null) {
		_g.setReserved("Ｇ","G");
	} else {
		_g.h["Ｇ"] = "G";
	}
	if(__map_reserved["Ǵ"] != null) {
		_g.setReserved("Ǵ","G");
	} else {
		_g.h["Ǵ"] = "G";
	}
	if(__map_reserved["Ĝ"] != null) {
		_g.setReserved("Ĝ","G");
	} else {
		_g.h["Ĝ"] = "G";
	}
	if(__map_reserved["Ḡ"] != null) {
		_g.setReserved("Ḡ","G");
	} else {
		_g.h["Ḡ"] = "G";
	}
	if(__map_reserved["Ğ"] != null) {
		_g.setReserved("Ğ","G");
	} else {
		_g.h["Ğ"] = "G";
	}
	if(__map_reserved["Ġ"] != null) {
		_g.setReserved("Ġ","G");
	} else {
		_g.h["Ġ"] = "G";
	}
	if(__map_reserved["Ǧ"] != null) {
		_g.setReserved("Ǧ","G");
	} else {
		_g.h["Ǧ"] = "G";
	}
	if(__map_reserved["Ģ"] != null) {
		_g.setReserved("Ģ","G");
	} else {
		_g.h["Ģ"] = "G";
	}
	if(__map_reserved["Ǥ"] != null) {
		_g.setReserved("Ǥ","G");
	} else {
		_g.h["Ǥ"] = "G";
	}
	if(__map_reserved["Ɠ"] != null) {
		_g.setReserved("Ɠ","G");
	} else {
		_g.h["Ɠ"] = "G";
	}
	if(__map_reserved["Ꞡ"] != null) {
		_g.setReserved("Ꞡ","G");
	} else {
		_g.h["Ꞡ"] = "G";
	}
	if(__map_reserved["Ᵹ"] != null) {
		_g.setReserved("Ᵹ","G");
	} else {
		_g.h["Ᵹ"] = "G";
	}
	if(__map_reserved["Ꝿ"] != null) {
		_g.setReserved("Ꝿ","G");
	} else {
		_g.h["Ꝿ"] = "G";
	}
	if(__map_reserved.H != null) {
		_g.setReserved("H","H");
	} else {
		_g.h["H"] = "H";
	}
	if(__map_reserved["Ⓗ"] != null) {
		_g.setReserved("Ⓗ","H");
	} else {
		_g.h["Ⓗ"] = "H";
	}
	if(__map_reserved["Ｈ"] != null) {
		_g.setReserved("Ｈ","H");
	} else {
		_g.h["Ｈ"] = "H";
	}
	if(__map_reserved["Ĥ"] != null) {
		_g.setReserved("Ĥ","H");
	} else {
		_g.h["Ĥ"] = "H";
	}
	if(__map_reserved["Ḣ"] != null) {
		_g.setReserved("Ḣ","H");
	} else {
		_g.h["Ḣ"] = "H";
	}
	if(__map_reserved["Ḧ"] != null) {
		_g.setReserved("Ḧ","H");
	} else {
		_g.h["Ḧ"] = "H";
	}
	if(__map_reserved["Ȟ"] != null) {
		_g.setReserved("Ȟ","H");
	} else {
		_g.h["Ȟ"] = "H";
	}
	if(__map_reserved["Ḥ"] != null) {
		_g.setReserved("Ḥ","H");
	} else {
		_g.h["Ḥ"] = "H";
	}
	if(__map_reserved["Ḩ"] != null) {
		_g.setReserved("Ḩ","H");
	} else {
		_g.h["Ḩ"] = "H";
	}
	if(__map_reserved["Ḫ"] != null) {
		_g.setReserved("Ḫ","H");
	} else {
		_g.h["Ḫ"] = "H";
	}
	if(__map_reserved["Ħ"] != null) {
		_g.setReserved("Ħ","H");
	} else {
		_g.h["Ħ"] = "H";
	}
	if(__map_reserved["Ⱨ"] != null) {
		_g.setReserved("Ⱨ","H");
	} else {
		_g.h["Ⱨ"] = "H";
	}
	if(__map_reserved["Ⱶ"] != null) {
		_g.setReserved("Ⱶ","H");
	} else {
		_g.h["Ⱶ"] = "H";
	}
	if(__map_reserved["Ɥ"] != null) {
		_g.setReserved("Ɥ","H");
	} else {
		_g.h["Ɥ"] = "H";
	}
	if(__map_reserved.I != null) {
		_g.setReserved("I","I");
	} else {
		_g.h["I"] = "I";
	}
	if(__map_reserved["Ⓘ"] != null) {
		_g.setReserved("Ⓘ","I");
	} else {
		_g.h["Ⓘ"] = "I";
	}
	if(__map_reserved["Ｉ"] != null) {
		_g.setReserved("Ｉ","I");
	} else {
		_g.h["Ｉ"] = "I";
	}
	if(__map_reserved["Ì"] != null) {
		_g.setReserved("Ì","I");
	} else {
		_g.h["Ì"] = "I";
	}
	if(__map_reserved["Í"] != null) {
		_g.setReserved("Í","I");
	} else {
		_g.h["Í"] = "I";
	}
	if(__map_reserved["Î"] != null) {
		_g.setReserved("Î","I");
	} else {
		_g.h["Î"] = "I";
	}
	if(__map_reserved["Ĩ"] != null) {
		_g.setReserved("Ĩ","I");
	} else {
		_g.h["Ĩ"] = "I";
	}
	if(__map_reserved["Ī"] != null) {
		_g.setReserved("Ī","I");
	} else {
		_g.h["Ī"] = "I";
	}
	if(__map_reserved["Ĭ"] != null) {
		_g.setReserved("Ĭ","I");
	} else {
		_g.h["Ĭ"] = "I";
	}
	if(__map_reserved["İ"] != null) {
		_g.setReserved("İ","I");
	} else {
		_g.h["İ"] = "I";
	}
	if(__map_reserved["Ï"] != null) {
		_g.setReserved("Ï","I");
	} else {
		_g.h["Ï"] = "I";
	}
	if(__map_reserved["Ḯ"] != null) {
		_g.setReserved("Ḯ","I");
	} else {
		_g.h["Ḯ"] = "I";
	}
	if(__map_reserved["Ỉ"] != null) {
		_g.setReserved("Ỉ","I");
	} else {
		_g.h["Ỉ"] = "I";
	}
	if(__map_reserved["Ǐ"] != null) {
		_g.setReserved("Ǐ","I");
	} else {
		_g.h["Ǐ"] = "I";
	}
	if(__map_reserved["Ȉ"] != null) {
		_g.setReserved("Ȉ","I");
	} else {
		_g.h["Ȉ"] = "I";
	}
	if(__map_reserved["Ȋ"] != null) {
		_g.setReserved("Ȋ","I");
	} else {
		_g.h["Ȋ"] = "I";
	}
	if(__map_reserved["Ị"] != null) {
		_g.setReserved("Ị","I");
	} else {
		_g.h["Ị"] = "I";
	}
	if(__map_reserved["Į"] != null) {
		_g.setReserved("Į","I");
	} else {
		_g.h["Į"] = "I";
	}
	if(__map_reserved["Ḭ"] != null) {
		_g.setReserved("Ḭ","I");
	} else {
		_g.h["Ḭ"] = "I";
	}
	if(__map_reserved["Ɨ"] != null) {
		_g.setReserved("Ɨ","I");
	} else {
		_g.h["Ɨ"] = "I";
	}
	if(__map_reserved.J != null) {
		_g.setReserved("J","J");
	} else {
		_g.h["J"] = "J";
	}
	if(__map_reserved["Ⓙ"] != null) {
		_g.setReserved("Ⓙ","J");
	} else {
		_g.h["Ⓙ"] = "J";
	}
	if(__map_reserved["Ｊ"] != null) {
		_g.setReserved("Ｊ","J");
	} else {
		_g.h["Ｊ"] = "J";
	}
	if(__map_reserved["Ĵ"] != null) {
		_g.setReserved("Ĵ","J");
	} else {
		_g.h["Ĵ"] = "J";
	}
	if(__map_reserved["Ɉ"] != null) {
		_g.setReserved("Ɉ","J");
	} else {
		_g.h["Ɉ"] = "J";
	}
	if(__map_reserved.K != null) {
		_g.setReserved("K","K");
	} else {
		_g.h["K"] = "K";
	}
	if(__map_reserved["Ⓚ"] != null) {
		_g.setReserved("Ⓚ","K");
	} else {
		_g.h["Ⓚ"] = "K";
	}
	if(__map_reserved["Ｋ"] != null) {
		_g.setReserved("Ｋ","K");
	} else {
		_g.h["Ｋ"] = "K";
	}
	if(__map_reserved["Ḱ"] != null) {
		_g.setReserved("Ḱ","K");
	} else {
		_g.h["Ḱ"] = "K";
	}
	if(__map_reserved["Ǩ"] != null) {
		_g.setReserved("Ǩ","K");
	} else {
		_g.h["Ǩ"] = "K";
	}
	if(__map_reserved["Ḳ"] != null) {
		_g.setReserved("Ḳ","K");
	} else {
		_g.h["Ḳ"] = "K";
	}
	if(__map_reserved["Ķ"] != null) {
		_g.setReserved("Ķ","K");
	} else {
		_g.h["Ķ"] = "K";
	}
	if(__map_reserved["Ḵ"] != null) {
		_g.setReserved("Ḵ","K");
	} else {
		_g.h["Ḵ"] = "K";
	}
	if(__map_reserved["Ƙ"] != null) {
		_g.setReserved("Ƙ","K");
	} else {
		_g.h["Ƙ"] = "K";
	}
	if(__map_reserved["Ⱪ"] != null) {
		_g.setReserved("Ⱪ","K");
	} else {
		_g.h["Ⱪ"] = "K";
	}
	if(__map_reserved["Ꝁ"] != null) {
		_g.setReserved("Ꝁ","K");
	} else {
		_g.h["Ꝁ"] = "K";
	}
	if(__map_reserved["Ꝃ"] != null) {
		_g.setReserved("Ꝃ","K");
	} else {
		_g.h["Ꝃ"] = "K";
	}
	if(__map_reserved["Ꝅ"] != null) {
		_g.setReserved("Ꝅ","K");
	} else {
		_g.h["Ꝅ"] = "K";
	}
	if(__map_reserved["Ꞣ"] != null) {
		_g.setReserved("Ꞣ","K");
	} else {
		_g.h["Ꞣ"] = "K";
	}
	if(__map_reserved.L != null) {
		_g.setReserved("L","L");
	} else {
		_g.h["L"] = "L";
	}
	if(__map_reserved["Ⓛ"] != null) {
		_g.setReserved("Ⓛ","L");
	} else {
		_g.h["Ⓛ"] = "L";
	}
	if(__map_reserved["Ｌ"] != null) {
		_g.setReserved("Ｌ","L");
	} else {
		_g.h["Ｌ"] = "L";
	}
	if(__map_reserved["Ŀ"] != null) {
		_g.setReserved("Ŀ","L");
	} else {
		_g.h["Ŀ"] = "L";
	}
	if(__map_reserved["Ĺ"] != null) {
		_g.setReserved("Ĺ","L");
	} else {
		_g.h["Ĺ"] = "L";
	}
	if(__map_reserved["Ľ"] != null) {
		_g.setReserved("Ľ","L");
	} else {
		_g.h["Ľ"] = "L";
	}
	if(__map_reserved["Ḷ"] != null) {
		_g.setReserved("Ḷ","L");
	} else {
		_g.h["Ḷ"] = "L";
	}
	if(__map_reserved["Ḹ"] != null) {
		_g.setReserved("Ḹ","L");
	} else {
		_g.h["Ḹ"] = "L";
	}
	if(__map_reserved["Ļ"] != null) {
		_g.setReserved("Ļ","L");
	} else {
		_g.h["Ļ"] = "L";
	}
	if(__map_reserved["Ḽ"] != null) {
		_g.setReserved("Ḽ","L");
	} else {
		_g.h["Ḽ"] = "L";
	}
	if(__map_reserved["Ḻ"] != null) {
		_g.setReserved("Ḻ","L");
	} else {
		_g.h["Ḻ"] = "L";
	}
	if(__map_reserved["Ł"] != null) {
		_g.setReserved("Ł","L");
	} else {
		_g.h["Ł"] = "L";
	}
	if(__map_reserved["Ƚ"] != null) {
		_g.setReserved("Ƚ","L");
	} else {
		_g.h["Ƚ"] = "L";
	}
	if(__map_reserved["Ɫ"] != null) {
		_g.setReserved("Ɫ","L");
	} else {
		_g.h["Ɫ"] = "L";
	}
	if(__map_reserved["Ⱡ"] != null) {
		_g.setReserved("Ⱡ","L");
	} else {
		_g.h["Ⱡ"] = "L";
	}
	if(__map_reserved["Ꝉ"] != null) {
		_g.setReserved("Ꝉ","L");
	} else {
		_g.h["Ꝉ"] = "L";
	}
	if(__map_reserved["Ꝇ"] != null) {
		_g.setReserved("Ꝇ","L");
	} else {
		_g.h["Ꝇ"] = "L";
	}
	if(__map_reserved["Ꞁ"] != null) {
		_g.setReserved("Ꞁ","L");
	} else {
		_g.h["Ꞁ"] = "L";
	}
	if(__map_reserved["Ǉ"] != null) {
		_g.setReserved("Ǉ","LJ");
	} else {
		_g.h["Ǉ"] = "LJ";
	}
	if(__map_reserved["ǈ"] != null) {
		_g.setReserved("ǈ","Lj");
	} else {
		_g.h["ǈ"] = "Lj";
	}
	if(__map_reserved.M != null) {
		_g.setReserved("M","M");
	} else {
		_g.h["M"] = "M";
	}
	if(__map_reserved["Ⓜ"] != null) {
		_g.setReserved("Ⓜ","M");
	} else {
		_g.h["Ⓜ"] = "M";
	}
	if(__map_reserved["Ｍ"] != null) {
		_g.setReserved("Ｍ","M");
	} else {
		_g.h["Ｍ"] = "M";
	}
	if(__map_reserved["Ḿ"] != null) {
		_g.setReserved("Ḿ","M");
	} else {
		_g.h["Ḿ"] = "M";
	}
	if(__map_reserved["Ṁ"] != null) {
		_g.setReserved("Ṁ","M");
	} else {
		_g.h["Ṁ"] = "M";
	}
	if(__map_reserved["Ṃ"] != null) {
		_g.setReserved("Ṃ","M");
	} else {
		_g.h["Ṃ"] = "M";
	}
	if(__map_reserved["Ɱ"] != null) {
		_g.setReserved("Ɱ","M");
	} else {
		_g.h["Ɱ"] = "M";
	}
	if(__map_reserved["Ɯ"] != null) {
		_g.setReserved("Ɯ","M");
	} else {
		_g.h["Ɯ"] = "M";
	}
	if(__map_reserved.N != null) {
		_g.setReserved("N","N");
	} else {
		_g.h["N"] = "N";
	}
	if(__map_reserved["Ⓝ"] != null) {
		_g.setReserved("Ⓝ","N");
	} else {
		_g.h["Ⓝ"] = "N";
	}
	if(__map_reserved["Ｎ"] != null) {
		_g.setReserved("Ｎ","N");
	} else {
		_g.h["Ｎ"] = "N";
	}
	if(__map_reserved["Ǹ"] != null) {
		_g.setReserved("Ǹ","N");
	} else {
		_g.h["Ǹ"] = "N";
	}
	if(__map_reserved["Ń"] != null) {
		_g.setReserved("Ń","N");
	} else {
		_g.h["Ń"] = "N";
	}
	if(__map_reserved["Ñ"] != null) {
		_g.setReserved("Ñ","N");
	} else {
		_g.h["Ñ"] = "N";
	}
	if(__map_reserved["Ṅ"] != null) {
		_g.setReserved("Ṅ","N");
	} else {
		_g.h["Ṅ"] = "N";
	}
	if(__map_reserved["Ň"] != null) {
		_g.setReserved("Ň","N");
	} else {
		_g.h["Ň"] = "N";
	}
	if(__map_reserved["Ṇ"] != null) {
		_g.setReserved("Ṇ","N");
	} else {
		_g.h["Ṇ"] = "N";
	}
	if(__map_reserved["Ņ"] != null) {
		_g.setReserved("Ņ","N");
	} else {
		_g.h["Ņ"] = "N";
	}
	if(__map_reserved["Ṋ"] != null) {
		_g.setReserved("Ṋ","N");
	} else {
		_g.h["Ṋ"] = "N";
	}
	if(__map_reserved["Ṉ"] != null) {
		_g.setReserved("Ṉ","N");
	} else {
		_g.h["Ṉ"] = "N";
	}
	if(__map_reserved["Ƞ"] != null) {
		_g.setReserved("Ƞ","N");
	} else {
		_g.h["Ƞ"] = "N";
	}
	if(__map_reserved["Ɲ"] != null) {
		_g.setReserved("Ɲ","N");
	} else {
		_g.h["Ɲ"] = "N";
	}
	if(__map_reserved["Ꞑ"] != null) {
		_g.setReserved("Ꞑ","N");
	} else {
		_g.h["Ꞑ"] = "N";
	}
	if(__map_reserved["Ꞥ"] != null) {
		_g.setReserved("Ꞥ","N");
	} else {
		_g.h["Ꞥ"] = "N";
	}
	if(__map_reserved["Ǌ"] != null) {
		_g.setReserved("Ǌ","NJ");
	} else {
		_g.h["Ǌ"] = "NJ";
	}
	if(__map_reserved["ǋ"] != null) {
		_g.setReserved("ǋ","Nj");
	} else {
		_g.h["ǋ"] = "Nj";
	}
	if(__map_reserved.O != null) {
		_g.setReserved("O","O");
	} else {
		_g.h["O"] = "O";
	}
	if(__map_reserved["Ⓞ"] != null) {
		_g.setReserved("Ⓞ","O");
	} else {
		_g.h["Ⓞ"] = "O";
	}
	if(__map_reserved["Ｏ"] != null) {
		_g.setReserved("Ｏ","O");
	} else {
		_g.h["Ｏ"] = "O";
	}
	if(__map_reserved["Ò"] != null) {
		_g.setReserved("Ò","O");
	} else {
		_g.h["Ò"] = "O";
	}
	if(__map_reserved["Ó"] != null) {
		_g.setReserved("Ó","O");
	} else {
		_g.h["Ó"] = "O";
	}
	if(__map_reserved["Ô"] != null) {
		_g.setReserved("Ô","O");
	} else {
		_g.h["Ô"] = "O";
	}
	if(__map_reserved["Ồ"] != null) {
		_g.setReserved("Ồ","O");
	} else {
		_g.h["Ồ"] = "O";
	}
	if(__map_reserved["Ố"] != null) {
		_g.setReserved("Ố","O");
	} else {
		_g.h["Ố"] = "O";
	}
	if(__map_reserved["Ỗ"] != null) {
		_g.setReserved("Ỗ","O");
	} else {
		_g.h["Ỗ"] = "O";
	}
	if(__map_reserved["Ổ"] != null) {
		_g.setReserved("Ổ","O");
	} else {
		_g.h["Ổ"] = "O";
	}
	if(__map_reserved["Õ"] != null) {
		_g.setReserved("Õ","O");
	} else {
		_g.h["Õ"] = "O";
	}
	if(__map_reserved["Ṍ"] != null) {
		_g.setReserved("Ṍ","O");
	} else {
		_g.h["Ṍ"] = "O";
	}
	if(__map_reserved["Ȭ"] != null) {
		_g.setReserved("Ȭ","O");
	} else {
		_g.h["Ȭ"] = "O";
	}
	if(__map_reserved["Ṏ"] != null) {
		_g.setReserved("Ṏ","O");
	} else {
		_g.h["Ṏ"] = "O";
	}
	if(__map_reserved["Ō"] != null) {
		_g.setReserved("Ō","O");
	} else {
		_g.h["Ō"] = "O";
	}
	if(__map_reserved["Ṑ"] != null) {
		_g.setReserved("Ṑ","O");
	} else {
		_g.h["Ṑ"] = "O";
	}
	if(__map_reserved["Ṓ"] != null) {
		_g.setReserved("Ṓ","O");
	} else {
		_g.h["Ṓ"] = "O";
	}
	if(__map_reserved["Ŏ"] != null) {
		_g.setReserved("Ŏ","O");
	} else {
		_g.h["Ŏ"] = "O";
	}
	if(__map_reserved["Ȯ"] != null) {
		_g.setReserved("Ȯ","O");
	} else {
		_g.h["Ȯ"] = "O";
	}
	if(__map_reserved["Ȱ"] != null) {
		_g.setReserved("Ȱ","O");
	} else {
		_g.h["Ȱ"] = "O";
	}
	if(__map_reserved["Ö"] != null) {
		_g.setReserved("Ö","O");
	} else {
		_g.h["Ö"] = "O";
	}
	if(__map_reserved["Ȫ"] != null) {
		_g.setReserved("Ȫ","O");
	} else {
		_g.h["Ȫ"] = "O";
	}
	if(__map_reserved["Ỏ"] != null) {
		_g.setReserved("Ỏ","O");
	} else {
		_g.h["Ỏ"] = "O";
	}
	if(__map_reserved["Ő"] != null) {
		_g.setReserved("Ő","O");
	} else {
		_g.h["Ő"] = "O";
	}
	if(__map_reserved["Ǒ"] != null) {
		_g.setReserved("Ǒ","O");
	} else {
		_g.h["Ǒ"] = "O";
	}
	if(__map_reserved["Ȍ"] != null) {
		_g.setReserved("Ȍ","O");
	} else {
		_g.h["Ȍ"] = "O";
	}
	if(__map_reserved["Ȏ"] != null) {
		_g.setReserved("Ȏ","O");
	} else {
		_g.h["Ȏ"] = "O";
	}
	if(__map_reserved["Ơ"] != null) {
		_g.setReserved("Ơ","O");
	} else {
		_g.h["Ơ"] = "O";
	}
	if(__map_reserved["Ờ"] != null) {
		_g.setReserved("Ờ","O");
	} else {
		_g.h["Ờ"] = "O";
	}
	if(__map_reserved["Ớ"] != null) {
		_g.setReserved("Ớ","O");
	} else {
		_g.h["Ớ"] = "O";
	}
	if(__map_reserved["Ỡ"] != null) {
		_g.setReserved("Ỡ","O");
	} else {
		_g.h["Ỡ"] = "O";
	}
	if(__map_reserved["Ở"] != null) {
		_g.setReserved("Ở","O");
	} else {
		_g.h["Ở"] = "O";
	}
	if(__map_reserved["Ợ"] != null) {
		_g.setReserved("Ợ","O");
	} else {
		_g.h["Ợ"] = "O";
	}
	if(__map_reserved["Ọ"] != null) {
		_g.setReserved("Ọ","O");
	} else {
		_g.h["Ọ"] = "O";
	}
	if(__map_reserved["Ộ"] != null) {
		_g.setReserved("Ộ","O");
	} else {
		_g.h["Ộ"] = "O";
	}
	if(__map_reserved["Ǫ"] != null) {
		_g.setReserved("Ǫ","O");
	} else {
		_g.h["Ǫ"] = "O";
	}
	if(__map_reserved["Ǭ"] != null) {
		_g.setReserved("Ǭ","O");
	} else {
		_g.h["Ǭ"] = "O";
	}
	if(__map_reserved["Ø"] != null) {
		_g.setReserved("Ø","O");
	} else {
		_g.h["Ø"] = "O";
	}
	if(__map_reserved["Ǿ"] != null) {
		_g.setReserved("Ǿ","O");
	} else {
		_g.h["Ǿ"] = "O";
	}
	if(__map_reserved["Ɔ"] != null) {
		_g.setReserved("Ɔ","O");
	} else {
		_g.h["Ɔ"] = "O";
	}
	if(__map_reserved["Ɵ"] != null) {
		_g.setReserved("Ɵ","O");
	} else {
		_g.h["Ɵ"] = "O";
	}
	if(__map_reserved["Ꝋ"] != null) {
		_g.setReserved("Ꝋ","O");
	} else {
		_g.h["Ꝋ"] = "O";
	}
	if(__map_reserved["Ꝍ"] != null) {
		_g.setReserved("Ꝍ","O");
	} else {
		_g.h["Ꝍ"] = "O";
	}
	if(__map_reserved["Ƣ"] != null) {
		_g.setReserved("Ƣ","OI");
	} else {
		_g.h["Ƣ"] = "OI";
	}
	if(__map_reserved["Ꝏ"] != null) {
		_g.setReserved("Ꝏ","OO");
	} else {
		_g.h["Ꝏ"] = "OO";
	}
	if(__map_reserved["Ȣ"] != null) {
		_g.setReserved("Ȣ","OU");
	} else {
		_g.h["Ȣ"] = "OU";
	}
	if(__map_reserved.P != null) {
		_g.setReserved("P","P");
	} else {
		_g.h["P"] = "P";
	}
	if(__map_reserved["Ⓟ"] != null) {
		_g.setReserved("Ⓟ","P");
	} else {
		_g.h["Ⓟ"] = "P";
	}
	if(__map_reserved["Ｐ"] != null) {
		_g.setReserved("Ｐ","P");
	} else {
		_g.h["Ｐ"] = "P";
	}
	if(__map_reserved["Ṕ"] != null) {
		_g.setReserved("Ṕ","P");
	} else {
		_g.h["Ṕ"] = "P";
	}
	if(__map_reserved["Ṗ"] != null) {
		_g.setReserved("Ṗ","P");
	} else {
		_g.h["Ṗ"] = "P";
	}
	if(__map_reserved["Ƥ"] != null) {
		_g.setReserved("Ƥ","P");
	} else {
		_g.h["Ƥ"] = "P";
	}
	if(__map_reserved["Ᵽ"] != null) {
		_g.setReserved("Ᵽ","P");
	} else {
		_g.h["Ᵽ"] = "P";
	}
	if(__map_reserved["Ꝑ"] != null) {
		_g.setReserved("Ꝑ","P");
	} else {
		_g.h["Ꝑ"] = "P";
	}
	if(__map_reserved["Ꝓ"] != null) {
		_g.setReserved("Ꝓ","P");
	} else {
		_g.h["Ꝓ"] = "P";
	}
	if(__map_reserved["Ꝕ"] != null) {
		_g.setReserved("Ꝕ","P");
	} else {
		_g.h["Ꝕ"] = "P";
	}
	if(__map_reserved.Q != null) {
		_g.setReserved("Q","Q");
	} else {
		_g.h["Q"] = "Q";
	}
	if(__map_reserved["Ⓠ"] != null) {
		_g.setReserved("Ⓠ","Q");
	} else {
		_g.h["Ⓠ"] = "Q";
	}
	if(__map_reserved["Ｑ"] != null) {
		_g.setReserved("Ｑ","Q");
	} else {
		_g.h["Ｑ"] = "Q";
	}
	if(__map_reserved["Ꝗ"] != null) {
		_g.setReserved("Ꝗ","Q");
	} else {
		_g.h["Ꝗ"] = "Q";
	}
	if(__map_reserved["Ꝙ"] != null) {
		_g.setReserved("Ꝙ","Q");
	} else {
		_g.h["Ꝙ"] = "Q";
	}
	if(__map_reserved["Ɋ"] != null) {
		_g.setReserved("Ɋ","Q");
	} else {
		_g.h["Ɋ"] = "Q";
	}
	if(__map_reserved.R != null) {
		_g.setReserved("R","R");
	} else {
		_g.h["R"] = "R";
	}
	if(__map_reserved["Ⓡ"] != null) {
		_g.setReserved("Ⓡ","R");
	} else {
		_g.h["Ⓡ"] = "R";
	}
	if(__map_reserved["Ｒ"] != null) {
		_g.setReserved("Ｒ","R");
	} else {
		_g.h["Ｒ"] = "R";
	}
	if(__map_reserved["Ŕ"] != null) {
		_g.setReserved("Ŕ","R");
	} else {
		_g.h["Ŕ"] = "R";
	}
	if(__map_reserved["Ṙ"] != null) {
		_g.setReserved("Ṙ","R");
	} else {
		_g.h["Ṙ"] = "R";
	}
	if(__map_reserved["Ř"] != null) {
		_g.setReserved("Ř","R");
	} else {
		_g.h["Ř"] = "R";
	}
	if(__map_reserved["Ȑ"] != null) {
		_g.setReserved("Ȑ","R");
	} else {
		_g.h["Ȑ"] = "R";
	}
	if(__map_reserved["Ȓ"] != null) {
		_g.setReserved("Ȓ","R");
	} else {
		_g.h["Ȓ"] = "R";
	}
	if(__map_reserved["Ṛ"] != null) {
		_g.setReserved("Ṛ","R");
	} else {
		_g.h["Ṛ"] = "R";
	}
	if(__map_reserved["Ṝ"] != null) {
		_g.setReserved("Ṝ","R");
	} else {
		_g.h["Ṝ"] = "R";
	}
	if(__map_reserved["Ŗ"] != null) {
		_g.setReserved("Ŗ","R");
	} else {
		_g.h["Ŗ"] = "R";
	}
	if(__map_reserved["Ṟ"] != null) {
		_g.setReserved("Ṟ","R");
	} else {
		_g.h["Ṟ"] = "R";
	}
	if(__map_reserved["Ɍ"] != null) {
		_g.setReserved("Ɍ","R");
	} else {
		_g.h["Ɍ"] = "R";
	}
	if(__map_reserved["Ɽ"] != null) {
		_g.setReserved("Ɽ","R");
	} else {
		_g.h["Ɽ"] = "R";
	}
	if(__map_reserved["Ꝛ"] != null) {
		_g.setReserved("Ꝛ","R");
	} else {
		_g.h["Ꝛ"] = "R";
	}
	if(__map_reserved["Ꞧ"] != null) {
		_g.setReserved("Ꞧ","R");
	} else {
		_g.h["Ꞧ"] = "R";
	}
	if(__map_reserved["Ꞃ"] != null) {
		_g.setReserved("Ꞃ","R");
	} else {
		_g.h["Ꞃ"] = "R";
	}
	if(__map_reserved.S != null) {
		_g.setReserved("S","S");
	} else {
		_g.h["S"] = "S";
	}
	if(__map_reserved["Ⓢ"] != null) {
		_g.setReserved("Ⓢ","S");
	} else {
		_g.h["Ⓢ"] = "S";
	}
	if(__map_reserved["Ｓ"] != null) {
		_g.setReserved("Ｓ","S");
	} else {
		_g.h["Ｓ"] = "S";
	}
	if(__map_reserved["ẞ"] != null) {
		_g.setReserved("ẞ","S");
	} else {
		_g.h["ẞ"] = "S";
	}
	if(__map_reserved["Ś"] != null) {
		_g.setReserved("Ś","S");
	} else {
		_g.h["Ś"] = "S";
	}
	if(__map_reserved["Ṥ"] != null) {
		_g.setReserved("Ṥ","S");
	} else {
		_g.h["Ṥ"] = "S";
	}
	if(__map_reserved["Ŝ"] != null) {
		_g.setReserved("Ŝ","S");
	} else {
		_g.h["Ŝ"] = "S";
	}
	if(__map_reserved["Ṡ"] != null) {
		_g.setReserved("Ṡ","S");
	} else {
		_g.h["Ṡ"] = "S";
	}
	if(__map_reserved["Š"] != null) {
		_g.setReserved("Š","S");
	} else {
		_g.h["Š"] = "S";
	}
	if(__map_reserved["Ṧ"] != null) {
		_g.setReserved("Ṧ","S");
	} else {
		_g.h["Ṧ"] = "S";
	}
	if(__map_reserved["Ṣ"] != null) {
		_g.setReserved("Ṣ","S");
	} else {
		_g.h["Ṣ"] = "S";
	}
	if(__map_reserved["Ṩ"] != null) {
		_g.setReserved("Ṩ","S");
	} else {
		_g.h["Ṩ"] = "S";
	}
	if(__map_reserved["Ș"] != null) {
		_g.setReserved("Ș","S");
	} else {
		_g.h["Ș"] = "S";
	}
	if(__map_reserved["Ş"] != null) {
		_g.setReserved("Ş","S");
	} else {
		_g.h["Ş"] = "S";
	}
	if(__map_reserved["Ȿ"] != null) {
		_g.setReserved("Ȿ","S");
	} else {
		_g.h["Ȿ"] = "S";
	}
	if(__map_reserved["Ꞩ"] != null) {
		_g.setReserved("Ꞩ","S");
	} else {
		_g.h["Ꞩ"] = "S";
	}
	if(__map_reserved["Ꞅ"] != null) {
		_g.setReserved("Ꞅ","S");
	} else {
		_g.h["Ꞅ"] = "S";
	}
	if(__map_reserved.T != null) {
		_g.setReserved("T","T");
	} else {
		_g.h["T"] = "T";
	}
	if(__map_reserved["Ⓣ"] != null) {
		_g.setReserved("Ⓣ","T");
	} else {
		_g.h["Ⓣ"] = "T";
	}
	if(__map_reserved["Ｔ"] != null) {
		_g.setReserved("Ｔ","T");
	} else {
		_g.h["Ｔ"] = "T";
	}
	if(__map_reserved["Ṫ"] != null) {
		_g.setReserved("Ṫ","T");
	} else {
		_g.h["Ṫ"] = "T";
	}
	if(__map_reserved["Ť"] != null) {
		_g.setReserved("Ť","T");
	} else {
		_g.h["Ť"] = "T";
	}
	if(__map_reserved["Ṭ"] != null) {
		_g.setReserved("Ṭ","T");
	} else {
		_g.h["Ṭ"] = "T";
	}
	if(__map_reserved["Ț"] != null) {
		_g.setReserved("Ț","T");
	} else {
		_g.h["Ț"] = "T";
	}
	if(__map_reserved["Ţ"] != null) {
		_g.setReserved("Ţ","T");
	} else {
		_g.h["Ţ"] = "T";
	}
	if(__map_reserved["Ṱ"] != null) {
		_g.setReserved("Ṱ","T");
	} else {
		_g.h["Ṱ"] = "T";
	}
	if(__map_reserved["Ṯ"] != null) {
		_g.setReserved("Ṯ","T");
	} else {
		_g.h["Ṯ"] = "T";
	}
	if(__map_reserved["Ŧ"] != null) {
		_g.setReserved("Ŧ","T");
	} else {
		_g.h["Ŧ"] = "T";
	}
	if(__map_reserved["Ƭ"] != null) {
		_g.setReserved("Ƭ","T");
	} else {
		_g.h["Ƭ"] = "T";
	}
	if(__map_reserved["Ʈ"] != null) {
		_g.setReserved("Ʈ","T");
	} else {
		_g.h["Ʈ"] = "T";
	}
	if(__map_reserved["Ⱦ"] != null) {
		_g.setReserved("Ⱦ","T");
	} else {
		_g.h["Ⱦ"] = "T";
	}
	if(__map_reserved["Ꞇ"] != null) {
		_g.setReserved("Ꞇ","T");
	} else {
		_g.h["Ꞇ"] = "T";
	}
	if(__map_reserved["Þ"] != null) {
		_g.setReserved("Þ","Th");
	} else {
		_g.h["Þ"] = "Th";
	}
	if(__map_reserved["Ꜩ"] != null) {
		_g.setReserved("Ꜩ","TZ");
	} else {
		_g.h["Ꜩ"] = "TZ";
	}
	if(__map_reserved.U != null) {
		_g.setReserved("U","U");
	} else {
		_g.h["U"] = "U";
	}
	if(__map_reserved["Ⓤ"] != null) {
		_g.setReserved("Ⓤ","U");
	} else {
		_g.h["Ⓤ"] = "U";
	}
	if(__map_reserved["Ｕ"] != null) {
		_g.setReserved("Ｕ","U");
	} else {
		_g.h["Ｕ"] = "U";
	}
	if(__map_reserved["Ù"] != null) {
		_g.setReserved("Ù","U");
	} else {
		_g.h["Ù"] = "U";
	}
	if(__map_reserved["Ú"] != null) {
		_g.setReserved("Ú","U");
	} else {
		_g.h["Ú"] = "U";
	}
	if(__map_reserved["Û"] != null) {
		_g.setReserved("Û","U");
	} else {
		_g.h["Û"] = "U";
	}
	if(__map_reserved["Ũ"] != null) {
		_g.setReserved("Ũ","U");
	} else {
		_g.h["Ũ"] = "U";
	}
	if(__map_reserved["Ṹ"] != null) {
		_g.setReserved("Ṹ","U");
	} else {
		_g.h["Ṹ"] = "U";
	}
	if(__map_reserved["Ū"] != null) {
		_g.setReserved("Ū","U");
	} else {
		_g.h["Ū"] = "U";
	}
	if(__map_reserved["Ṻ"] != null) {
		_g.setReserved("Ṻ","U");
	} else {
		_g.h["Ṻ"] = "U";
	}
	if(__map_reserved["Ŭ"] != null) {
		_g.setReserved("Ŭ","U");
	} else {
		_g.h["Ŭ"] = "U";
	}
	if(__map_reserved["Ü"] != null) {
		_g.setReserved("Ü","U");
	} else {
		_g.h["Ü"] = "U";
	}
	if(__map_reserved["Ǜ"] != null) {
		_g.setReserved("Ǜ","U");
	} else {
		_g.h["Ǜ"] = "U";
	}
	if(__map_reserved["Ǘ"] != null) {
		_g.setReserved("Ǘ","U");
	} else {
		_g.h["Ǘ"] = "U";
	}
	if(__map_reserved["Ǖ"] != null) {
		_g.setReserved("Ǖ","U");
	} else {
		_g.h["Ǖ"] = "U";
	}
	if(__map_reserved["Ǚ"] != null) {
		_g.setReserved("Ǚ","U");
	} else {
		_g.h["Ǚ"] = "U";
	}
	if(__map_reserved["Ủ"] != null) {
		_g.setReserved("Ủ","U");
	} else {
		_g.h["Ủ"] = "U";
	}
	if(__map_reserved["Ů"] != null) {
		_g.setReserved("Ů","U");
	} else {
		_g.h["Ů"] = "U";
	}
	if(__map_reserved["Ű"] != null) {
		_g.setReserved("Ű","U");
	} else {
		_g.h["Ű"] = "U";
	}
	if(__map_reserved["Ǔ"] != null) {
		_g.setReserved("Ǔ","U");
	} else {
		_g.h["Ǔ"] = "U";
	}
	if(__map_reserved["Ȕ"] != null) {
		_g.setReserved("Ȕ","U");
	} else {
		_g.h["Ȕ"] = "U";
	}
	if(__map_reserved["Ȗ"] != null) {
		_g.setReserved("Ȗ","U");
	} else {
		_g.h["Ȗ"] = "U";
	}
	if(__map_reserved["Ư"] != null) {
		_g.setReserved("Ư","U");
	} else {
		_g.h["Ư"] = "U";
	}
	if(__map_reserved["Ừ"] != null) {
		_g.setReserved("Ừ","U");
	} else {
		_g.h["Ừ"] = "U";
	}
	if(__map_reserved["Ứ"] != null) {
		_g.setReserved("Ứ","U");
	} else {
		_g.h["Ứ"] = "U";
	}
	if(__map_reserved["Ữ"] != null) {
		_g.setReserved("Ữ","U");
	} else {
		_g.h["Ữ"] = "U";
	}
	if(__map_reserved["Ử"] != null) {
		_g.setReserved("Ử","U");
	} else {
		_g.h["Ử"] = "U";
	}
	if(__map_reserved["Ự"] != null) {
		_g.setReserved("Ự","U");
	} else {
		_g.h["Ự"] = "U";
	}
	if(__map_reserved["Ụ"] != null) {
		_g.setReserved("Ụ","U");
	} else {
		_g.h["Ụ"] = "U";
	}
	if(__map_reserved["Ṳ"] != null) {
		_g.setReserved("Ṳ","U");
	} else {
		_g.h["Ṳ"] = "U";
	}
	if(__map_reserved["Ų"] != null) {
		_g.setReserved("Ų","U");
	} else {
		_g.h["Ų"] = "U";
	}
	if(__map_reserved["Ṷ"] != null) {
		_g.setReserved("Ṷ","U");
	} else {
		_g.h["Ṷ"] = "U";
	}
	if(__map_reserved["Ṵ"] != null) {
		_g.setReserved("Ṵ","U");
	} else {
		_g.h["Ṵ"] = "U";
	}
	if(__map_reserved["Ʉ"] != null) {
		_g.setReserved("Ʉ","U");
	} else {
		_g.h["Ʉ"] = "U";
	}
	if(__map_reserved.V != null) {
		_g.setReserved("V","V");
	} else {
		_g.h["V"] = "V";
	}
	if(__map_reserved["Ⓥ"] != null) {
		_g.setReserved("Ⓥ","V");
	} else {
		_g.h["Ⓥ"] = "V";
	}
	if(__map_reserved["Ｖ"] != null) {
		_g.setReserved("Ｖ","V");
	} else {
		_g.h["Ｖ"] = "V";
	}
	if(__map_reserved["Ṽ"] != null) {
		_g.setReserved("Ṽ","V");
	} else {
		_g.h["Ṽ"] = "V";
	}
	if(__map_reserved["Ṿ"] != null) {
		_g.setReserved("Ṿ","V");
	} else {
		_g.h["Ṿ"] = "V";
	}
	if(__map_reserved["Ʋ"] != null) {
		_g.setReserved("Ʋ","V");
	} else {
		_g.h["Ʋ"] = "V";
	}
	if(__map_reserved["Ꝟ"] != null) {
		_g.setReserved("Ꝟ","V");
	} else {
		_g.h["Ꝟ"] = "V";
	}
	if(__map_reserved["Ʌ"] != null) {
		_g.setReserved("Ʌ","V");
	} else {
		_g.h["Ʌ"] = "V";
	}
	if(__map_reserved["Ꝡ"] != null) {
		_g.setReserved("Ꝡ","VY");
	} else {
		_g.h["Ꝡ"] = "VY";
	}
	if(__map_reserved.W != null) {
		_g.setReserved("W","W");
	} else {
		_g.h["W"] = "W";
	}
	if(__map_reserved["Ⓦ"] != null) {
		_g.setReserved("Ⓦ","W");
	} else {
		_g.h["Ⓦ"] = "W";
	}
	if(__map_reserved["Ｗ"] != null) {
		_g.setReserved("Ｗ","W");
	} else {
		_g.h["Ｗ"] = "W";
	}
	if(__map_reserved["Ẁ"] != null) {
		_g.setReserved("Ẁ","W");
	} else {
		_g.h["Ẁ"] = "W";
	}
	if(__map_reserved["Ẃ"] != null) {
		_g.setReserved("Ẃ","W");
	} else {
		_g.h["Ẃ"] = "W";
	}
	if(__map_reserved["Ŵ"] != null) {
		_g.setReserved("Ŵ","W");
	} else {
		_g.h["Ŵ"] = "W";
	}
	if(__map_reserved["Ẇ"] != null) {
		_g.setReserved("Ẇ","W");
	} else {
		_g.h["Ẇ"] = "W";
	}
	if(__map_reserved["Ẅ"] != null) {
		_g.setReserved("Ẅ","W");
	} else {
		_g.h["Ẅ"] = "W";
	}
	if(__map_reserved["Ẉ"] != null) {
		_g.setReserved("Ẉ","W");
	} else {
		_g.h["Ẉ"] = "W";
	}
	if(__map_reserved["Ⱳ"] != null) {
		_g.setReserved("Ⱳ","W");
	} else {
		_g.h["Ⱳ"] = "W";
	}
	if(__map_reserved.X != null) {
		_g.setReserved("X","X");
	} else {
		_g.h["X"] = "X";
	}
	if(__map_reserved["Ⓧ"] != null) {
		_g.setReserved("Ⓧ","X");
	} else {
		_g.h["Ⓧ"] = "X";
	}
	if(__map_reserved["Ｘ"] != null) {
		_g.setReserved("Ｘ","X");
	} else {
		_g.h["Ｘ"] = "X";
	}
	if(__map_reserved["Ẋ"] != null) {
		_g.setReserved("Ẋ","X");
	} else {
		_g.h["Ẋ"] = "X";
	}
	if(__map_reserved["Ẍ"] != null) {
		_g.setReserved("Ẍ","X");
	} else {
		_g.h["Ẍ"] = "X";
	}
	if(__map_reserved.Y != null) {
		_g.setReserved("Y","Y");
	} else {
		_g.h["Y"] = "Y";
	}
	if(__map_reserved["Ⓨ"] != null) {
		_g.setReserved("Ⓨ","Y");
	} else {
		_g.h["Ⓨ"] = "Y";
	}
	if(__map_reserved["Ｙ"] != null) {
		_g.setReserved("Ｙ","Y");
	} else {
		_g.h["Ｙ"] = "Y";
	}
	if(__map_reserved["Ỳ"] != null) {
		_g.setReserved("Ỳ","Y");
	} else {
		_g.h["Ỳ"] = "Y";
	}
	if(__map_reserved["Ý"] != null) {
		_g.setReserved("Ý","Y");
	} else {
		_g.h["Ý"] = "Y";
	}
	if(__map_reserved["Ŷ"] != null) {
		_g.setReserved("Ŷ","Y");
	} else {
		_g.h["Ŷ"] = "Y";
	}
	if(__map_reserved["Ỹ"] != null) {
		_g.setReserved("Ỹ","Y");
	} else {
		_g.h["Ỹ"] = "Y";
	}
	if(__map_reserved["Ȳ"] != null) {
		_g.setReserved("Ȳ","Y");
	} else {
		_g.h["Ȳ"] = "Y";
	}
	if(__map_reserved["Ẏ"] != null) {
		_g.setReserved("Ẏ","Y");
	} else {
		_g.h["Ẏ"] = "Y";
	}
	if(__map_reserved["Ÿ"] != null) {
		_g.setReserved("Ÿ","Y");
	} else {
		_g.h["Ÿ"] = "Y";
	}
	if(__map_reserved["Ỷ"] != null) {
		_g.setReserved("Ỷ","Y");
	} else {
		_g.h["Ỷ"] = "Y";
	}
	if(__map_reserved["Ỵ"] != null) {
		_g.setReserved("Ỵ","Y");
	} else {
		_g.h["Ỵ"] = "Y";
	}
	if(__map_reserved["Ƴ"] != null) {
		_g.setReserved("Ƴ","Y");
	} else {
		_g.h["Ƴ"] = "Y";
	}
	if(__map_reserved["Ɏ"] != null) {
		_g.setReserved("Ɏ","Y");
	} else {
		_g.h["Ɏ"] = "Y";
	}
	if(__map_reserved["Ỿ"] != null) {
		_g.setReserved("Ỿ","Y");
	} else {
		_g.h["Ỿ"] = "Y";
	}
	if(__map_reserved.Z != null) {
		_g.setReserved("Z","Z");
	} else {
		_g.h["Z"] = "Z";
	}
	if(__map_reserved["Ⓩ"] != null) {
		_g.setReserved("Ⓩ","Z");
	} else {
		_g.h["Ⓩ"] = "Z";
	}
	if(__map_reserved["Ｚ"] != null) {
		_g.setReserved("Ｚ","Z");
	} else {
		_g.h["Ｚ"] = "Z";
	}
	if(__map_reserved["Ź"] != null) {
		_g.setReserved("Ź","Z");
	} else {
		_g.h["Ź"] = "Z";
	}
	if(__map_reserved["Ẑ"] != null) {
		_g.setReserved("Ẑ","Z");
	} else {
		_g.h["Ẑ"] = "Z";
	}
	if(__map_reserved["Ż"] != null) {
		_g.setReserved("Ż","Z");
	} else {
		_g.h["Ż"] = "Z";
	}
	if(__map_reserved["Ž"] != null) {
		_g.setReserved("Ž","Z");
	} else {
		_g.h["Ž"] = "Z";
	}
	if(__map_reserved["Ẓ"] != null) {
		_g.setReserved("Ẓ","Z");
	} else {
		_g.h["Ẓ"] = "Z";
	}
	if(__map_reserved["Ẕ"] != null) {
		_g.setReserved("Ẕ","Z");
	} else {
		_g.h["Ẕ"] = "Z";
	}
	if(__map_reserved["Ƶ"] != null) {
		_g.setReserved("Ƶ","Z");
	} else {
		_g.h["Ƶ"] = "Z";
	}
	if(__map_reserved["Ȥ"] != null) {
		_g.setReserved("Ȥ","Z");
	} else {
		_g.h["Ȥ"] = "Z";
	}
	if(__map_reserved["Ɀ"] != null) {
		_g.setReserved("Ɀ","Z");
	} else {
		_g.h["Ɀ"] = "Z";
	}
	if(__map_reserved["Ⱬ"] != null) {
		_g.setReserved("Ⱬ","Z");
	} else {
		_g.h["Ⱬ"] = "Z";
	}
	if(__map_reserved["Ꝣ"] != null) {
		_g.setReserved("Ꝣ","Z");
	} else {
		_g.h["Ꝣ"] = "Z";
	}
	if(__map_reserved.a != null) {
		_g.setReserved("a","a");
	} else {
		_g.h["a"] = "a";
	}
	if(__map_reserved["ⓐ"] != null) {
		_g.setReserved("ⓐ","a");
	} else {
		_g.h["ⓐ"] = "a";
	}
	if(__map_reserved["ａ"] != null) {
		_g.setReserved("ａ","a");
	} else {
		_g.h["ａ"] = "a";
	}
	if(__map_reserved["ẚ"] != null) {
		_g.setReserved("ẚ","a");
	} else {
		_g.h["ẚ"] = "a";
	}
	if(__map_reserved["à"] != null) {
		_g.setReserved("à","a");
	} else {
		_g.h["à"] = "a";
	}
	if(__map_reserved["á"] != null) {
		_g.setReserved("á","a");
	} else {
		_g.h["á"] = "a";
	}
	if(__map_reserved["â"] != null) {
		_g.setReserved("â","a");
	} else {
		_g.h["â"] = "a";
	}
	if(__map_reserved["ầ"] != null) {
		_g.setReserved("ầ","a");
	} else {
		_g.h["ầ"] = "a";
	}
	if(__map_reserved["ấ"] != null) {
		_g.setReserved("ấ","a");
	} else {
		_g.h["ấ"] = "a";
	}
	if(__map_reserved["ẫ"] != null) {
		_g.setReserved("ẫ","a");
	} else {
		_g.h["ẫ"] = "a";
	}
	if(__map_reserved["ẩ"] != null) {
		_g.setReserved("ẩ","a");
	} else {
		_g.h["ẩ"] = "a";
	}
	if(__map_reserved["ã"] != null) {
		_g.setReserved("ã","a");
	} else {
		_g.h["ã"] = "a";
	}
	if(__map_reserved["ā"] != null) {
		_g.setReserved("ā","a");
	} else {
		_g.h["ā"] = "a";
	}
	if(__map_reserved["ă"] != null) {
		_g.setReserved("ă","a");
	} else {
		_g.h["ă"] = "a";
	}
	if(__map_reserved["ằ"] != null) {
		_g.setReserved("ằ","a");
	} else {
		_g.h["ằ"] = "a";
	}
	if(__map_reserved["ắ"] != null) {
		_g.setReserved("ắ","a");
	} else {
		_g.h["ắ"] = "a";
	}
	if(__map_reserved["ẵ"] != null) {
		_g.setReserved("ẵ","a");
	} else {
		_g.h["ẵ"] = "a";
	}
	if(__map_reserved["ẳ"] != null) {
		_g.setReserved("ẳ","a");
	} else {
		_g.h["ẳ"] = "a";
	}
	if(__map_reserved["ȧ"] != null) {
		_g.setReserved("ȧ","a");
	} else {
		_g.h["ȧ"] = "a";
	}
	if(__map_reserved["ǡ"] != null) {
		_g.setReserved("ǡ","a");
	} else {
		_g.h["ǡ"] = "a";
	}
	if(__map_reserved["ä"] != null) {
		_g.setReserved("ä","a");
	} else {
		_g.h["ä"] = "a";
	}
	if(__map_reserved["ǟ"] != null) {
		_g.setReserved("ǟ","a");
	} else {
		_g.h["ǟ"] = "a";
	}
	if(__map_reserved["ả"] != null) {
		_g.setReserved("ả","a");
	} else {
		_g.h["ả"] = "a";
	}
	if(__map_reserved["å"] != null) {
		_g.setReserved("å","a");
	} else {
		_g.h["å"] = "a";
	}
	if(__map_reserved["ǻ"] != null) {
		_g.setReserved("ǻ","a");
	} else {
		_g.h["ǻ"] = "a";
	}
	if(__map_reserved["ǎ"] != null) {
		_g.setReserved("ǎ","a");
	} else {
		_g.h["ǎ"] = "a";
	}
	if(__map_reserved["ȁ"] != null) {
		_g.setReserved("ȁ","a");
	} else {
		_g.h["ȁ"] = "a";
	}
	if(__map_reserved["ȃ"] != null) {
		_g.setReserved("ȃ","a");
	} else {
		_g.h["ȃ"] = "a";
	}
	if(__map_reserved["ạ"] != null) {
		_g.setReserved("ạ","a");
	} else {
		_g.h["ạ"] = "a";
	}
	if(__map_reserved["ậ"] != null) {
		_g.setReserved("ậ","a");
	} else {
		_g.h["ậ"] = "a";
	}
	if(__map_reserved["ặ"] != null) {
		_g.setReserved("ặ","a");
	} else {
		_g.h["ặ"] = "a";
	}
	if(__map_reserved["ḁ"] != null) {
		_g.setReserved("ḁ","a");
	} else {
		_g.h["ḁ"] = "a";
	}
	if(__map_reserved["ą"] != null) {
		_g.setReserved("ą","a");
	} else {
		_g.h["ą"] = "a";
	}
	if(__map_reserved["ⱥ"] != null) {
		_g.setReserved("ⱥ","a");
	} else {
		_g.h["ⱥ"] = "a";
	}
	if(__map_reserved["ɐ"] != null) {
		_g.setReserved("ɐ","a");
	} else {
		_g.h["ɐ"] = "a";
	}
	if(__map_reserved["ɑ"] != null) {
		_g.setReserved("ɑ","a");
	} else {
		_g.h["ɑ"] = "a";
	}
	if(__map_reserved["ꜳ"] != null) {
		_g.setReserved("ꜳ","aa");
	} else {
		_g.h["ꜳ"] = "aa";
	}
	if(__map_reserved["æ"] != null) {
		_g.setReserved("æ","ae");
	} else {
		_g.h["æ"] = "ae";
	}
	if(__map_reserved["ǽ"] != null) {
		_g.setReserved("ǽ","ae");
	} else {
		_g.h["ǽ"] = "ae";
	}
	if(__map_reserved["ǣ"] != null) {
		_g.setReserved("ǣ","ae");
	} else {
		_g.h["ǣ"] = "ae";
	}
	if(__map_reserved["ꜵ"] != null) {
		_g.setReserved("ꜵ","ao");
	} else {
		_g.h["ꜵ"] = "ao";
	}
	if(__map_reserved["ꜷ"] != null) {
		_g.setReserved("ꜷ","au");
	} else {
		_g.h["ꜷ"] = "au";
	}
	if(__map_reserved["ꜹ"] != null) {
		_g.setReserved("ꜹ","av");
	} else {
		_g.h["ꜹ"] = "av";
	}
	if(__map_reserved["ꜻ"] != null) {
		_g.setReserved("ꜻ","av");
	} else {
		_g.h["ꜻ"] = "av";
	}
	if(__map_reserved["ꜽ"] != null) {
		_g.setReserved("ꜽ","ay");
	} else {
		_g.h["ꜽ"] = "ay";
	}
	if(__map_reserved.b != null) {
		_g.setReserved("b","b");
	} else {
		_g.h["b"] = "b";
	}
	if(__map_reserved["ⓑ"] != null) {
		_g.setReserved("ⓑ","b");
	} else {
		_g.h["ⓑ"] = "b";
	}
	if(__map_reserved["ｂ"] != null) {
		_g.setReserved("ｂ","b");
	} else {
		_g.h["ｂ"] = "b";
	}
	if(__map_reserved["ḃ"] != null) {
		_g.setReserved("ḃ","b");
	} else {
		_g.h["ḃ"] = "b";
	}
	if(__map_reserved["ḅ"] != null) {
		_g.setReserved("ḅ","b");
	} else {
		_g.h["ḅ"] = "b";
	}
	if(__map_reserved["ḇ"] != null) {
		_g.setReserved("ḇ","b");
	} else {
		_g.h["ḇ"] = "b";
	}
	if(__map_reserved["ƀ"] != null) {
		_g.setReserved("ƀ","b");
	} else {
		_g.h["ƀ"] = "b";
	}
	if(__map_reserved["ƃ"] != null) {
		_g.setReserved("ƃ","b");
	} else {
		_g.h["ƃ"] = "b";
	}
	if(__map_reserved["ɓ"] != null) {
		_g.setReserved("ɓ","b");
	} else {
		_g.h["ɓ"] = "b";
	}
	if(__map_reserved.c != null) {
		_g.setReserved("c","c");
	} else {
		_g.h["c"] = "c";
	}
	if(__map_reserved["ⓒ"] != null) {
		_g.setReserved("ⓒ","c");
	} else {
		_g.h["ⓒ"] = "c";
	}
	if(__map_reserved["ｃ"] != null) {
		_g.setReserved("ｃ","c");
	} else {
		_g.h["ｃ"] = "c";
	}
	if(__map_reserved["ć"] != null) {
		_g.setReserved("ć","c");
	} else {
		_g.h["ć"] = "c";
	}
	if(__map_reserved["ĉ"] != null) {
		_g.setReserved("ĉ","c");
	} else {
		_g.h["ĉ"] = "c";
	}
	if(__map_reserved["ċ"] != null) {
		_g.setReserved("ċ","c");
	} else {
		_g.h["ċ"] = "c";
	}
	if(__map_reserved["č"] != null) {
		_g.setReserved("č","c");
	} else {
		_g.h["č"] = "c";
	}
	if(__map_reserved["ç"] != null) {
		_g.setReserved("ç","c");
	} else {
		_g.h["ç"] = "c";
	}
	if(__map_reserved["ḉ"] != null) {
		_g.setReserved("ḉ","c");
	} else {
		_g.h["ḉ"] = "c";
	}
	if(__map_reserved["ƈ"] != null) {
		_g.setReserved("ƈ","c");
	} else {
		_g.h["ƈ"] = "c";
	}
	if(__map_reserved["ȼ"] != null) {
		_g.setReserved("ȼ","c");
	} else {
		_g.h["ȼ"] = "c";
	}
	if(__map_reserved["ꜿ"] != null) {
		_g.setReserved("ꜿ","c");
	} else {
		_g.h["ꜿ"] = "c";
	}
	if(__map_reserved["ↄ"] != null) {
		_g.setReserved("ↄ","c");
	} else {
		_g.h["ↄ"] = "c";
	}
	if(__map_reserved.d != null) {
		_g.setReserved("d","d");
	} else {
		_g.h["d"] = "d";
	}
	if(__map_reserved["ⓓ"] != null) {
		_g.setReserved("ⓓ","d");
	} else {
		_g.h["ⓓ"] = "d";
	}
	if(__map_reserved["ｄ"] != null) {
		_g.setReserved("ｄ","d");
	} else {
		_g.h["ｄ"] = "d";
	}
	if(__map_reserved["ḋ"] != null) {
		_g.setReserved("ḋ","d");
	} else {
		_g.h["ḋ"] = "d";
	}
	if(__map_reserved["ď"] != null) {
		_g.setReserved("ď","d");
	} else {
		_g.h["ď"] = "d";
	}
	if(__map_reserved["ḍ"] != null) {
		_g.setReserved("ḍ","d");
	} else {
		_g.h["ḍ"] = "d";
	}
	if(__map_reserved["ḑ"] != null) {
		_g.setReserved("ḑ","d");
	} else {
		_g.h["ḑ"] = "d";
	}
	if(__map_reserved["ḓ"] != null) {
		_g.setReserved("ḓ","d");
	} else {
		_g.h["ḓ"] = "d";
	}
	if(__map_reserved["ḏ"] != null) {
		_g.setReserved("ḏ","d");
	} else {
		_g.h["ḏ"] = "d";
	}
	if(__map_reserved["đ"] != null) {
		_g.setReserved("đ","d");
	} else {
		_g.h["đ"] = "d";
	}
	if(__map_reserved["ƌ"] != null) {
		_g.setReserved("ƌ","d");
	} else {
		_g.h["ƌ"] = "d";
	}
	if(__map_reserved["ɖ"] != null) {
		_g.setReserved("ɖ","d");
	} else {
		_g.h["ɖ"] = "d";
	}
	if(__map_reserved["ɗ"] != null) {
		_g.setReserved("ɗ","d");
	} else {
		_g.h["ɗ"] = "d";
	}
	if(__map_reserved["ꝺ"] != null) {
		_g.setReserved("ꝺ","d");
	} else {
		_g.h["ꝺ"] = "d";
	}
	if(__map_reserved["ǳ"] != null) {
		_g.setReserved("ǳ","dz");
	} else {
		_g.h["ǳ"] = "dz";
	}
	if(__map_reserved["ǆ"] != null) {
		_g.setReserved("ǆ","dz");
	} else {
		_g.h["ǆ"] = "dz";
	}
	if(__map_reserved.e != null) {
		_g.setReserved("e","e");
	} else {
		_g.h["e"] = "e";
	}
	if(__map_reserved["ⓔ"] != null) {
		_g.setReserved("ⓔ","e");
	} else {
		_g.h["ⓔ"] = "e";
	}
	if(__map_reserved["ｅ"] != null) {
		_g.setReserved("ｅ","e");
	} else {
		_g.h["ｅ"] = "e";
	}
	if(__map_reserved["è"] != null) {
		_g.setReserved("è","e");
	} else {
		_g.h["è"] = "e";
	}
	if(__map_reserved["é"] != null) {
		_g.setReserved("é","e");
	} else {
		_g.h["é"] = "e";
	}
	if(__map_reserved["ê"] != null) {
		_g.setReserved("ê","e");
	} else {
		_g.h["ê"] = "e";
	}
	if(__map_reserved["ề"] != null) {
		_g.setReserved("ề","e");
	} else {
		_g.h["ề"] = "e";
	}
	if(__map_reserved["ế"] != null) {
		_g.setReserved("ế","e");
	} else {
		_g.h["ế"] = "e";
	}
	if(__map_reserved["ễ"] != null) {
		_g.setReserved("ễ","e");
	} else {
		_g.h["ễ"] = "e";
	}
	if(__map_reserved["ể"] != null) {
		_g.setReserved("ể","e");
	} else {
		_g.h["ể"] = "e";
	}
	if(__map_reserved["ẽ"] != null) {
		_g.setReserved("ẽ","e");
	} else {
		_g.h["ẽ"] = "e";
	}
	if(__map_reserved["ē"] != null) {
		_g.setReserved("ē","e");
	} else {
		_g.h["ē"] = "e";
	}
	if(__map_reserved["ḕ"] != null) {
		_g.setReserved("ḕ","e");
	} else {
		_g.h["ḕ"] = "e";
	}
	if(__map_reserved["ḗ"] != null) {
		_g.setReserved("ḗ","e");
	} else {
		_g.h["ḗ"] = "e";
	}
	if(__map_reserved["ĕ"] != null) {
		_g.setReserved("ĕ","e");
	} else {
		_g.h["ĕ"] = "e";
	}
	if(__map_reserved["ė"] != null) {
		_g.setReserved("ė","e");
	} else {
		_g.h["ė"] = "e";
	}
	if(__map_reserved["ë"] != null) {
		_g.setReserved("ë","e");
	} else {
		_g.h["ë"] = "e";
	}
	if(__map_reserved["ẻ"] != null) {
		_g.setReserved("ẻ","e");
	} else {
		_g.h["ẻ"] = "e";
	}
	if(__map_reserved["ě"] != null) {
		_g.setReserved("ě","e");
	} else {
		_g.h["ě"] = "e";
	}
	if(__map_reserved["ȅ"] != null) {
		_g.setReserved("ȅ","e");
	} else {
		_g.h["ȅ"] = "e";
	}
	if(__map_reserved["ȇ"] != null) {
		_g.setReserved("ȇ","e");
	} else {
		_g.h["ȇ"] = "e";
	}
	if(__map_reserved["ẹ"] != null) {
		_g.setReserved("ẹ","e");
	} else {
		_g.h["ẹ"] = "e";
	}
	if(__map_reserved["ệ"] != null) {
		_g.setReserved("ệ","e");
	} else {
		_g.h["ệ"] = "e";
	}
	if(__map_reserved["ȩ"] != null) {
		_g.setReserved("ȩ","e");
	} else {
		_g.h["ȩ"] = "e";
	}
	if(__map_reserved["ḝ"] != null) {
		_g.setReserved("ḝ","e");
	} else {
		_g.h["ḝ"] = "e";
	}
	if(__map_reserved["ę"] != null) {
		_g.setReserved("ę","e");
	} else {
		_g.h["ę"] = "e";
	}
	if(__map_reserved["ḙ"] != null) {
		_g.setReserved("ḙ","e");
	} else {
		_g.h["ḙ"] = "e";
	}
	if(__map_reserved["ḛ"] != null) {
		_g.setReserved("ḛ","e");
	} else {
		_g.h["ḛ"] = "e";
	}
	if(__map_reserved["ɇ"] != null) {
		_g.setReserved("ɇ","e");
	} else {
		_g.h["ɇ"] = "e";
	}
	if(__map_reserved["ɛ"] != null) {
		_g.setReserved("ɛ","e");
	} else {
		_g.h["ɛ"] = "e";
	}
	if(__map_reserved["ǝ"] != null) {
		_g.setReserved("ǝ","e");
	} else {
		_g.h["ǝ"] = "e";
	}
	if(__map_reserved.f != null) {
		_g.setReserved("f","f");
	} else {
		_g.h["f"] = "f";
	}
	if(__map_reserved["ⓕ"] != null) {
		_g.setReserved("ⓕ","f");
	} else {
		_g.h["ⓕ"] = "f";
	}
	if(__map_reserved["ｆ"] != null) {
		_g.setReserved("ｆ","f");
	} else {
		_g.h["ｆ"] = "f";
	}
	if(__map_reserved["ḟ"] != null) {
		_g.setReserved("ḟ","f");
	} else {
		_g.h["ḟ"] = "f";
	}
	if(__map_reserved["ƒ"] != null) {
		_g.setReserved("ƒ","f");
	} else {
		_g.h["ƒ"] = "f";
	}
	if(__map_reserved["ꝼ"] != null) {
		_g.setReserved("ꝼ","f");
	} else {
		_g.h["ꝼ"] = "f";
	}
	if(__map_reserved["ﬀ"] != null) {
		_g.setReserved("ﬀ","ff");
	} else {
		_g.h["ﬀ"] = "ff";
	}
	if(__map_reserved["ﬁ"] != null) {
		_g.setReserved("ﬁ","fi");
	} else {
		_g.h["ﬁ"] = "fi";
	}
	if(__map_reserved["ﬂ"] != null) {
		_g.setReserved("ﬂ","fl");
	} else {
		_g.h["ﬂ"] = "fl";
	}
	if(__map_reserved["ﬃ"] != null) {
		_g.setReserved("ﬃ","ffi");
	} else {
		_g.h["ﬃ"] = "ffi";
	}
	if(__map_reserved["ﬄ"] != null) {
		_g.setReserved("ﬄ","ffl");
	} else {
		_g.h["ﬄ"] = "ffl";
	}
	if(__map_reserved.g != null) {
		_g.setReserved("g","g");
	} else {
		_g.h["g"] = "g";
	}
	if(__map_reserved["ⓖ"] != null) {
		_g.setReserved("ⓖ","g");
	} else {
		_g.h["ⓖ"] = "g";
	}
	if(__map_reserved["ｇ"] != null) {
		_g.setReserved("ｇ","g");
	} else {
		_g.h["ｇ"] = "g";
	}
	if(__map_reserved["ǵ"] != null) {
		_g.setReserved("ǵ","g");
	} else {
		_g.h["ǵ"] = "g";
	}
	if(__map_reserved["ĝ"] != null) {
		_g.setReserved("ĝ","g");
	} else {
		_g.h["ĝ"] = "g";
	}
	if(__map_reserved["ḡ"] != null) {
		_g.setReserved("ḡ","g");
	} else {
		_g.h["ḡ"] = "g";
	}
	if(__map_reserved["ğ"] != null) {
		_g.setReserved("ğ","g");
	} else {
		_g.h["ğ"] = "g";
	}
	if(__map_reserved["ġ"] != null) {
		_g.setReserved("ġ","g");
	} else {
		_g.h["ġ"] = "g";
	}
	if(__map_reserved["ǧ"] != null) {
		_g.setReserved("ǧ","g");
	} else {
		_g.h["ǧ"] = "g";
	}
	if(__map_reserved["ģ"] != null) {
		_g.setReserved("ģ","g");
	} else {
		_g.h["ģ"] = "g";
	}
	if(__map_reserved["ǥ"] != null) {
		_g.setReserved("ǥ","g");
	} else {
		_g.h["ǥ"] = "g";
	}
	if(__map_reserved["ɠ"] != null) {
		_g.setReserved("ɠ","g");
	} else {
		_g.h["ɠ"] = "g";
	}
	if(__map_reserved["ꞡ"] != null) {
		_g.setReserved("ꞡ","g");
	} else {
		_g.h["ꞡ"] = "g";
	}
	if(__map_reserved["ᵹ"] != null) {
		_g.setReserved("ᵹ","g");
	} else {
		_g.h["ᵹ"] = "g";
	}
	if(__map_reserved["ꝿ"] != null) {
		_g.setReserved("ꝿ","g");
	} else {
		_g.h["ꝿ"] = "g";
	}
	if(__map_reserved.h != null) {
		_g.setReserved("h","h");
	} else {
		_g.h["h"] = "h";
	}
	if(__map_reserved["ⓗ"] != null) {
		_g.setReserved("ⓗ","h");
	} else {
		_g.h["ⓗ"] = "h";
	}
	if(__map_reserved["ｈ"] != null) {
		_g.setReserved("ｈ","h");
	} else {
		_g.h["ｈ"] = "h";
	}
	if(__map_reserved["ĥ"] != null) {
		_g.setReserved("ĥ","h");
	} else {
		_g.h["ĥ"] = "h";
	}
	if(__map_reserved["ḣ"] != null) {
		_g.setReserved("ḣ","h");
	} else {
		_g.h["ḣ"] = "h";
	}
	if(__map_reserved["ḧ"] != null) {
		_g.setReserved("ḧ","h");
	} else {
		_g.h["ḧ"] = "h";
	}
	if(__map_reserved["ȟ"] != null) {
		_g.setReserved("ȟ","h");
	} else {
		_g.h["ȟ"] = "h";
	}
	if(__map_reserved["ḥ"] != null) {
		_g.setReserved("ḥ","h");
	} else {
		_g.h["ḥ"] = "h";
	}
	if(__map_reserved["ḩ"] != null) {
		_g.setReserved("ḩ","h");
	} else {
		_g.h["ḩ"] = "h";
	}
	if(__map_reserved["ḫ"] != null) {
		_g.setReserved("ḫ","h");
	} else {
		_g.h["ḫ"] = "h";
	}
	if(__map_reserved["ẖ"] != null) {
		_g.setReserved("ẖ","h");
	} else {
		_g.h["ẖ"] = "h";
	}
	if(__map_reserved["ħ"] != null) {
		_g.setReserved("ħ","h");
	} else {
		_g.h["ħ"] = "h";
	}
	if(__map_reserved["ⱨ"] != null) {
		_g.setReserved("ⱨ","h");
	} else {
		_g.h["ⱨ"] = "h";
	}
	if(__map_reserved["ⱶ"] != null) {
		_g.setReserved("ⱶ","h");
	} else {
		_g.h["ⱶ"] = "h";
	}
	if(__map_reserved["ɥ"] != null) {
		_g.setReserved("ɥ","h");
	} else {
		_g.h["ɥ"] = "h";
	}
	if(__map_reserved["ƕ"] != null) {
		_g.setReserved("ƕ","hv");
	} else {
		_g.h["ƕ"] = "hv";
	}
	if(__map_reserved.i != null) {
		_g.setReserved("i","i");
	} else {
		_g.h["i"] = "i";
	}
	if(__map_reserved["ⓘ"] != null) {
		_g.setReserved("ⓘ","i");
	} else {
		_g.h["ⓘ"] = "i";
	}
	if(__map_reserved["ｉ"] != null) {
		_g.setReserved("ｉ","i");
	} else {
		_g.h["ｉ"] = "i";
	}
	if(__map_reserved["ì"] != null) {
		_g.setReserved("ì","i");
	} else {
		_g.h["ì"] = "i";
	}
	if(__map_reserved["í"] != null) {
		_g.setReserved("í","i");
	} else {
		_g.h["í"] = "i";
	}
	if(__map_reserved["î"] != null) {
		_g.setReserved("î","i");
	} else {
		_g.h["î"] = "i";
	}
	if(__map_reserved["ĩ"] != null) {
		_g.setReserved("ĩ","i");
	} else {
		_g.h["ĩ"] = "i";
	}
	if(__map_reserved["ī"] != null) {
		_g.setReserved("ī","i");
	} else {
		_g.h["ī"] = "i";
	}
	if(__map_reserved["ĭ"] != null) {
		_g.setReserved("ĭ","i");
	} else {
		_g.h["ĭ"] = "i";
	}
	if(__map_reserved["ï"] != null) {
		_g.setReserved("ï","i");
	} else {
		_g.h["ï"] = "i";
	}
	if(__map_reserved["ḯ"] != null) {
		_g.setReserved("ḯ","i");
	} else {
		_g.h["ḯ"] = "i";
	}
	if(__map_reserved["ỉ"] != null) {
		_g.setReserved("ỉ","i");
	} else {
		_g.h["ỉ"] = "i";
	}
	if(__map_reserved["ǐ"] != null) {
		_g.setReserved("ǐ","i");
	} else {
		_g.h["ǐ"] = "i";
	}
	if(__map_reserved["ȉ"] != null) {
		_g.setReserved("ȉ","i");
	} else {
		_g.h["ȉ"] = "i";
	}
	if(__map_reserved["ȋ"] != null) {
		_g.setReserved("ȋ","i");
	} else {
		_g.h["ȋ"] = "i";
	}
	if(__map_reserved["ị"] != null) {
		_g.setReserved("ị","i");
	} else {
		_g.h["ị"] = "i";
	}
	if(__map_reserved["į"] != null) {
		_g.setReserved("į","i");
	} else {
		_g.h["į"] = "i";
	}
	if(__map_reserved["ḭ"] != null) {
		_g.setReserved("ḭ","i");
	} else {
		_g.h["ḭ"] = "i";
	}
	if(__map_reserved["ɨ"] != null) {
		_g.setReserved("ɨ","i");
	} else {
		_g.h["ɨ"] = "i";
	}
	if(__map_reserved["ı"] != null) {
		_g.setReserved("ı","i");
	} else {
		_g.h["ı"] = "i";
	}
	if(__map_reserved.j != null) {
		_g.setReserved("j","j");
	} else {
		_g.h["j"] = "j";
	}
	if(__map_reserved["ⓙ"] != null) {
		_g.setReserved("ⓙ","j");
	} else {
		_g.h["ⓙ"] = "j";
	}
	if(__map_reserved["ｊ"] != null) {
		_g.setReserved("ｊ","j");
	} else {
		_g.h["ｊ"] = "j";
	}
	if(__map_reserved["ĵ"] != null) {
		_g.setReserved("ĵ","j");
	} else {
		_g.h["ĵ"] = "j";
	}
	if(__map_reserved["ǰ"] != null) {
		_g.setReserved("ǰ","j");
	} else {
		_g.h["ǰ"] = "j";
	}
	if(__map_reserved["ɉ"] != null) {
		_g.setReserved("ɉ","j");
	} else {
		_g.h["ɉ"] = "j";
	}
	if(__map_reserved.k != null) {
		_g.setReserved("k","k");
	} else {
		_g.h["k"] = "k";
	}
	if(__map_reserved["ⓚ"] != null) {
		_g.setReserved("ⓚ","k");
	} else {
		_g.h["ⓚ"] = "k";
	}
	if(__map_reserved["ｋ"] != null) {
		_g.setReserved("ｋ","k");
	} else {
		_g.h["ｋ"] = "k";
	}
	if(__map_reserved["ḱ"] != null) {
		_g.setReserved("ḱ","k");
	} else {
		_g.h["ḱ"] = "k";
	}
	if(__map_reserved["ǩ"] != null) {
		_g.setReserved("ǩ","k");
	} else {
		_g.h["ǩ"] = "k";
	}
	if(__map_reserved["ḳ"] != null) {
		_g.setReserved("ḳ","k");
	} else {
		_g.h["ḳ"] = "k";
	}
	if(__map_reserved["ķ"] != null) {
		_g.setReserved("ķ","k");
	} else {
		_g.h["ķ"] = "k";
	}
	if(__map_reserved["ḵ"] != null) {
		_g.setReserved("ḵ","k");
	} else {
		_g.h["ḵ"] = "k";
	}
	if(__map_reserved["ƙ"] != null) {
		_g.setReserved("ƙ","k");
	} else {
		_g.h["ƙ"] = "k";
	}
	if(__map_reserved["ⱪ"] != null) {
		_g.setReserved("ⱪ","k");
	} else {
		_g.h["ⱪ"] = "k";
	}
	if(__map_reserved["ꝁ"] != null) {
		_g.setReserved("ꝁ","k");
	} else {
		_g.h["ꝁ"] = "k";
	}
	if(__map_reserved["ꝃ"] != null) {
		_g.setReserved("ꝃ","k");
	} else {
		_g.h["ꝃ"] = "k";
	}
	if(__map_reserved["ꝅ"] != null) {
		_g.setReserved("ꝅ","k");
	} else {
		_g.h["ꝅ"] = "k";
	}
	if(__map_reserved["ꞣ"] != null) {
		_g.setReserved("ꞣ","k");
	} else {
		_g.h["ꞣ"] = "k";
	}
	if(__map_reserved.l != null) {
		_g.setReserved("l","l");
	} else {
		_g.h["l"] = "l";
	}
	if(__map_reserved["ⓛ"] != null) {
		_g.setReserved("ⓛ","l");
	} else {
		_g.h["ⓛ"] = "l";
	}
	if(__map_reserved["ｌ"] != null) {
		_g.setReserved("ｌ","l");
	} else {
		_g.h["ｌ"] = "l";
	}
	if(__map_reserved["ŀ"] != null) {
		_g.setReserved("ŀ","l");
	} else {
		_g.h["ŀ"] = "l";
	}
	if(__map_reserved["ĺ"] != null) {
		_g.setReserved("ĺ","l");
	} else {
		_g.h["ĺ"] = "l";
	}
	if(__map_reserved["ľ"] != null) {
		_g.setReserved("ľ","l");
	} else {
		_g.h["ľ"] = "l";
	}
	if(__map_reserved["ḷ"] != null) {
		_g.setReserved("ḷ","l");
	} else {
		_g.h["ḷ"] = "l";
	}
	if(__map_reserved["ḹ"] != null) {
		_g.setReserved("ḹ","l");
	} else {
		_g.h["ḹ"] = "l";
	}
	if(__map_reserved["ļ"] != null) {
		_g.setReserved("ļ","l");
	} else {
		_g.h["ļ"] = "l";
	}
	if(__map_reserved["ḽ"] != null) {
		_g.setReserved("ḽ","l");
	} else {
		_g.h["ḽ"] = "l";
	}
	if(__map_reserved["ḻ"] != null) {
		_g.setReserved("ḻ","l");
	} else {
		_g.h["ḻ"] = "l";
	}
	if(__map_reserved["ſ"] != null) {
		_g.setReserved("ſ","l");
	} else {
		_g.h["ſ"] = "l";
	}
	if(__map_reserved["ł"] != null) {
		_g.setReserved("ł","l");
	} else {
		_g.h["ł"] = "l";
	}
	if(__map_reserved["ƚ"] != null) {
		_g.setReserved("ƚ","l");
	} else {
		_g.h["ƚ"] = "l";
	}
	if(__map_reserved["ɫ"] != null) {
		_g.setReserved("ɫ","l");
	} else {
		_g.h["ɫ"] = "l";
	}
	if(__map_reserved["ⱡ"] != null) {
		_g.setReserved("ⱡ","l");
	} else {
		_g.h["ⱡ"] = "l";
	}
	if(__map_reserved["ꝉ"] != null) {
		_g.setReserved("ꝉ","l");
	} else {
		_g.h["ꝉ"] = "l";
	}
	if(__map_reserved["ꞁ"] != null) {
		_g.setReserved("ꞁ","l");
	} else {
		_g.h["ꞁ"] = "l";
	}
	if(__map_reserved["ꝇ"] != null) {
		_g.setReserved("ꝇ","l");
	} else {
		_g.h["ꝇ"] = "l";
	}
	if(__map_reserved["ǉ"] != null) {
		_g.setReserved("ǉ","lj");
	} else {
		_g.h["ǉ"] = "lj";
	}
	if(__map_reserved.m != null) {
		_g.setReserved("m","m");
	} else {
		_g.h["m"] = "m";
	}
	if(__map_reserved["ⓜ"] != null) {
		_g.setReserved("ⓜ","m");
	} else {
		_g.h["ⓜ"] = "m";
	}
	if(__map_reserved["ｍ"] != null) {
		_g.setReserved("ｍ","m");
	} else {
		_g.h["ｍ"] = "m";
	}
	if(__map_reserved["ḿ"] != null) {
		_g.setReserved("ḿ","m");
	} else {
		_g.h["ḿ"] = "m";
	}
	if(__map_reserved["ṁ"] != null) {
		_g.setReserved("ṁ","m");
	} else {
		_g.h["ṁ"] = "m";
	}
	if(__map_reserved["ṃ"] != null) {
		_g.setReserved("ṃ","m");
	} else {
		_g.h["ṃ"] = "m";
	}
	if(__map_reserved["ɱ"] != null) {
		_g.setReserved("ɱ","m");
	} else {
		_g.h["ɱ"] = "m";
	}
	if(__map_reserved["ɯ"] != null) {
		_g.setReserved("ɯ","m");
	} else {
		_g.h["ɯ"] = "m";
	}
	if(__map_reserved.n != null) {
		_g.setReserved("n","n");
	} else {
		_g.h["n"] = "n";
	}
	if(__map_reserved["�"] != null) {
		_g.setReserved("�","ss");
	} else {
		_g.h["�"] = "ss";
	}
	if(__map_reserved["ⓝ"] != null) {
		_g.setReserved("ⓝ","n");
	} else {
		_g.h["ⓝ"] = "n";
	}
	if(__map_reserved["ｎ"] != null) {
		_g.setReserved("ｎ","n");
	} else {
		_g.h["ｎ"] = "n";
	}
	if(__map_reserved["ǹ"] != null) {
		_g.setReserved("ǹ","n");
	} else {
		_g.h["ǹ"] = "n";
	}
	if(__map_reserved["ń"] != null) {
		_g.setReserved("ń","n");
	} else {
		_g.h["ń"] = "n";
	}
	if(__map_reserved["ñ"] != null) {
		_g.setReserved("ñ","n");
	} else {
		_g.h["ñ"] = "n";
	}
	if(__map_reserved["ṅ"] != null) {
		_g.setReserved("ṅ","n");
	} else {
		_g.h["ṅ"] = "n";
	}
	if(__map_reserved["ň"] != null) {
		_g.setReserved("ň","n");
	} else {
		_g.h["ň"] = "n";
	}
	if(__map_reserved["ṇ"] != null) {
		_g.setReserved("ṇ","n");
	} else {
		_g.h["ṇ"] = "n";
	}
	if(__map_reserved["ņ"] != null) {
		_g.setReserved("ņ","n");
	} else {
		_g.h["ņ"] = "n";
	}
	if(__map_reserved["ṋ"] != null) {
		_g.setReserved("ṋ","n");
	} else {
		_g.h["ṋ"] = "n";
	}
	if(__map_reserved["ṉ"] != null) {
		_g.setReserved("ṉ","n");
	} else {
		_g.h["ṉ"] = "n";
	}
	if(__map_reserved["ƞ"] != null) {
		_g.setReserved("ƞ","n");
	} else {
		_g.h["ƞ"] = "n";
	}
	if(__map_reserved["ɲ"] != null) {
		_g.setReserved("ɲ","n");
	} else {
		_g.h["ɲ"] = "n";
	}
	if(__map_reserved["ŉ"] != null) {
		_g.setReserved("ŉ","n");
	} else {
		_g.h["ŉ"] = "n";
	}
	if(__map_reserved["ꞑ"] != null) {
		_g.setReserved("ꞑ","n");
	} else {
		_g.h["ꞑ"] = "n";
	}
	if(__map_reserved["ꞥ"] != null) {
		_g.setReserved("ꞥ","n");
	} else {
		_g.h["ꞥ"] = "n";
	}
	if(__map_reserved["л"] != null) {
		_g.setReserved("л","n");
	} else {
		_g.h["л"] = "n";
	}
	if(__map_reserved["ԉ"] != null) {
		_g.setReserved("ԉ","n");
	} else {
		_g.h["ԉ"] = "n";
	}
	if(__map_reserved["ǌ"] != null) {
		_g.setReserved("ǌ","nj");
	} else {
		_g.h["ǌ"] = "nj";
	}
	if(__map_reserved["߀"] != null) {
		_g.setReserved("߀","o");
	} else {
		_g.h["߀"] = "o";
	}
	if(__map_reserved.o != null) {
		_g.setReserved("o","o");
	} else {
		_g.h["o"] = "o";
	}
	if(__map_reserved["ⓞ"] != null) {
		_g.setReserved("ⓞ","o");
	} else {
		_g.h["ⓞ"] = "o";
	}
	if(__map_reserved["ｏ"] != null) {
		_g.setReserved("ｏ","o");
	} else {
		_g.h["ｏ"] = "o";
	}
	if(__map_reserved["ò"] != null) {
		_g.setReserved("ò","o");
	} else {
		_g.h["ò"] = "o";
	}
	if(__map_reserved["ó"] != null) {
		_g.setReserved("ó","o");
	} else {
		_g.h["ó"] = "o";
	}
	if(__map_reserved["ô"] != null) {
		_g.setReserved("ô","o");
	} else {
		_g.h["ô"] = "o";
	}
	if(__map_reserved["ồ"] != null) {
		_g.setReserved("ồ","o");
	} else {
		_g.h["ồ"] = "o";
	}
	if(__map_reserved["ố"] != null) {
		_g.setReserved("ố","o");
	} else {
		_g.h["ố"] = "o";
	}
	if(__map_reserved["ỗ"] != null) {
		_g.setReserved("ỗ","o");
	} else {
		_g.h["ỗ"] = "o";
	}
	if(__map_reserved["ổ"] != null) {
		_g.setReserved("ổ","o");
	} else {
		_g.h["ổ"] = "o";
	}
	if(__map_reserved["õ"] != null) {
		_g.setReserved("õ","o");
	} else {
		_g.h["õ"] = "o";
	}
	if(__map_reserved["ṍ"] != null) {
		_g.setReserved("ṍ","o");
	} else {
		_g.h["ṍ"] = "o";
	}
	if(__map_reserved["ȭ"] != null) {
		_g.setReserved("ȭ","o");
	} else {
		_g.h["ȭ"] = "o";
	}
	if(__map_reserved["ṏ"] != null) {
		_g.setReserved("ṏ","o");
	} else {
		_g.h["ṏ"] = "o";
	}
	if(__map_reserved["ō"] != null) {
		_g.setReserved("ō","o");
	} else {
		_g.h["ō"] = "o";
	}
	if(__map_reserved["ṑ"] != null) {
		_g.setReserved("ṑ","o");
	} else {
		_g.h["ṑ"] = "o";
	}
	if(__map_reserved["ṓ"] != null) {
		_g.setReserved("ṓ","o");
	} else {
		_g.h["ṓ"] = "o";
	}
	if(__map_reserved["ŏ"] != null) {
		_g.setReserved("ŏ","o");
	} else {
		_g.h["ŏ"] = "o";
	}
	if(__map_reserved["ȯ"] != null) {
		_g.setReserved("ȯ","o");
	} else {
		_g.h["ȯ"] = "o";
	}
	if(__map_reserved["ȱ"] != null) {
		_g.setReserved("ȱ","o");
	} else {
		_g.h["ȱ"] = "o";
	}
	if(__map_reserved["ö"] != null) {
		_g.setReserved("ö","o");
	} else {
		_g.h["ö"] = "o";
	}
	if(__map_reserved["ȫ"] != null) {
		_g.setReserved("ȫ","o");
	} else {
		_g.h["ȫ"] = "o";
	}
	if(__map_reserved["ỏ"] != null) {
		_g.setReserved("ỏ","o");
	} else {
		_g.h["ỏ"] = "o";
	}
	if(__map_reserved["ő"] != null) {
		_g.setReserved("ő","o");
	} else {
		_g.h["ő"] = "o";
	}
	if(__map_reserved["ǒ"] != null) {
		_g.setReserved("ǒ","o");
	} else {
		_g.h["ǒ"] = "o";
	}
	if(__map_reserved["ȍ"] != null) {
		_g.setReserved("ȍ","o");
	} else {
		_g.h["ȍ"] = "o";
	}
	if(__map_reserved["ȏ"] != null) {
		_g.setReserved("ȏ","o");
	} else {
		_g.h["ȏ"] = "o";
	}
	if(__map_reserved["ơ"] != null) {
		_g.setReserved("ơ","o");
	} else {
		_g.h["ơ"] = "o";
	}
	if(__map_reserved["ờ"] != null) {
		_g.setReserved("ờ","o");
	} else {
		_g.h["ờ"] = "o";
	}
	if(__map_reserved["ớ"] != null) {
		_g.setReserved("ớ","o");
	} else {
		_g.h["ớ"] = "o";
	}
	if(__map_reserved["ỡ"] != null) {
		_g.setReserved("ỡ","o");
	} else {
		_g.h["ỡ"] = "o";
	}
	if(__map_reserved["ở"] != null) {
		_g.setReserved("ở","o");
	} else {
		_g.h["ở"] = "o";
	}
	if(__map_reserved["ợ"] != null) {
		_g.setReserved("ợ","o");
	} else {
		_g.h["ợ"] = "o";
	}
	if(__map_reserved["ọ"] != null) {
		_g.setReserved("ọ","o");
	} else {
		_g.h["ọ"] = "o";
	}
	if(__map_reserved["ộ"] != null) {
		_g.setReserved("ộ","o");
	} else {
		_g.h["ộ"] = "o";
	}
	if(__map_reserved["ǫ"] != null) {
		_g.setReserved("ǫ","o");
	} else {
		_g.h["ǫ"] = "o";
	}
	if(__map_reserved["ǭ"] != null) {
		_g.setReserved("ǭ","o");
	} else {
		_g.h["ǭ"] = "o";
	}
	if(__map_reserved["ø"] != null) {
		_g.setReserved("ø","o");
	} else {
		_g.h["ø"] = "o";
	}
	if(__map_reserved["ǿ"] != null) {
		_g.setReserved("ǿ","o");
	} else {
		_g.h["ǿ"] = "o";
	}
	if(__map_reserved["ɔ"] != null) {
		_g.setReserved("ɔ","o");
	} else {
		_g.h["ɔ"] = "o";
	}
	if(__map_reserved["ꝋ"] != null) {
		_g.setReserved("ꝋ","o");
	} else {
		_g.h["ꝋ"] = "o";
	}
	if(__map_reserved["ꝍ"] != null) {
		_g.setReserved("ꝍ","o");
	} else {
		_g.h["ꝍ"] = "o";
	}
	if(__map_reserved["ɵ"] != null) {
		_g.setReserved("ɵ","o");
	} else {
		_g.h["ɵ"] = "o";
	}
	if(__map_reserved["Œ"] != null) {
		_g.setReserved("Œ","oe");
	} else {
		_g.h["Œ"] = "oe";
	}
	if(__map_reserved["œ"] != null) {
		_g.setReserved("œ","oe");
	} else {
		_g.h["œ"] = "oe";
	}
	if(__map_reserved["ƣ"] != null) {
		_g.setReserved("ƣ","oi");
	} else {
		_g.h["ƣ"] = "oi";
	}
	if(__map_reserved["ȣ"] != null) {
		_g.setReserved("ȣ","ou");
	} else {
		_g.h["ȣ"] = "ou";
	}
	if(__map_reserved["ꝏ"] != null) {
		_g.setReserved("ꝏ","oo");
	} else {
		_g.h["ꝏ"] = "oo";
	}
	if(__map_reserved.p != null) {
		_g.setReserved("p","p");
	} else {
		_g.h["p"] = "p";
	}
	if(__map_reserved["ⓟ"] != null) {
		_g.setReserved("ⓟ","p");
	} else {
		_g.h["ⓟ"] = "p";
	}
	if(__map_reserved["ｐ"] != null) {
		_g.setReserved("ｐ","p");
	} else {
		_g.h["ｐ"] = "p";
	}
	if(__map_reserved["ṕ"] != null) {
		_g.setReserved("ṕ","p");
	} else {
		_g.h["ṕ"] = "p";
	}
	if(__map_reserved["ṗ"] != null) {
		_g.setReserved("ṗ","p");
	} else {
		_g.h["ṗ"] = "p";
	}
	if(__map_reserved["ƥ"] != null) {
		_g.setReserved("ƥ","p");
	} else {
		_g.h["ƥ"] = "p";
	}
	if(__map_reserved["ᵽ"] != null) {
		_g.setReserved("ᵽ","p");
	} else {
		_g.h["ᵽ"] = "p";
	}
	if(__map_reserved["ꝑ"] != null) {
		_g.setReserved("ꝑ","p");
	} else {
		_g.h["ꝑ"] = "p";
	}
	if(__map_reserved["ꝓ"] != null) {
		_g.setReserved("ꝓ","p");
	} else {
		_g.h["ꝓ"] = "p";
	}
	if(__map_reserved["ꝕ"] != null) {
		_g.setReserved("ꝕ","p");
	} else {
		_g.h["ꝕ"] = "p";
	}
	if(__map_reserved.q != null) {
		_g.setReserved("q","q");
	} else {
		_g.h["q"] = "q";
	}
	if(__map_reserved["ⓠ"] != null) {
		_g.setReserved("ⓠ","q");
	} else {
		_g.h["ⓠ"] = "q";
	}
	if(__map_reserved["ｑ"] != null) {
		_g.setReserved("ｑ","q");
	} else {
		_g.h["ｑ"] = "q";
	}
	if(__map_reserved["ɋ"] != null) {
		_g.setReserved("ɋ","q");
	} else {
		_g.h["ɋ"] = "q";
	}
	if(__map_reserved["ꝗ"] != null) {
		_g.setReserved("ꝗ","q");
	} else {
		_g.h["ꝗ"] = "q";
	}
	if(__map_reserved["ꝙ"] != null) {
		_g.setReserved("ꝙ","q");
	} else {
		_g.h["ꝙ"] = "q";
	}
	if(__map_reserved.r != null) {
		_g.setReserved("r","r");
	} else {
		_g.h["r"] = "r";
	}
	if(__map_reserved["ⓡ"] != null) {
		_g.setReserved("ⓡ","r");
	} else {
		_g.h["ⓡ"] = "r";
	}
	if(__map_reserved["ｒ"] != null) {
		_g.setReserved("ｒ","r");
	} else {
		_g.h["ｒ"] = "r";
	}
	if(__map_reserved["ŕ"] != null) {
		_g.setReserved("ŕ","r");
	} else {
		_g.h["ŕ"] = "r";
	}
	if(__map_reserved["ṙ"] != null) {
		_g.setReserved("ṙ","r");
	} else {
		_g.h["ṙ"] = "r";
	}
	if(__map_reserved["ř"] != null) {
		_g.setReserved("ř","r");
	} else {
		_g.h["ř"] = "r";
	}
	if(__map_reserved["ȑ"] != null) {
		_g.setReserved("ȑ","r");
	} else {
		_g.h["ȑ"] = "r";
	}
	if(__map_reserved["ȓ"] != null) {
		_g.setReserved("ȓ","r");
	} else {
		_g.h["ȓ"] = "r";
	}
	if(__map_reserved["ṛ"] != null) {
		_g.setReserved("ṛ","r");
	} else {
		_g.h["ṛ"] = "r";
	}
	if(__map_reserved["ṝ"] != null) {
		_g.setReserved("ṝ","r");
	} else {
		_g.h["ṝ"] = "r";
	}
	if(__map_reserved["ŗ"] != null) {
		_g.setReserved("ŗ","r");
	} else {
		_g.h["ŗ"] = "r";
	}
	if(__map_reserved["ṟ"] != null) {
		_g.setReserved("ṟ","r");
	} else {
		_g.h["ṟ"] = "r";
	}
	if(__map_reserved["ɍ"] != null) {
		_g.setReserved("ɍ","r");
	} else {
		_g.h["ɍ"] = "r";
	}
	if(__map_reserved["ɽ"] != null) {
		_g.setReserved("ɽ","r");
	} else {
		_g.h["ɽ"] = "r";
	}
	if(__map_reserved["ꝛ"] != null) {
		_g.setReserved("ꝛ","r");
	} else {
		_g.h["ꝛ"] = "r";
	}
	if(__map_reserved["ꞧ"] != null) {
		_g.setReserved("ꞧ","r");
	} else {
		_g.h["ꞧ"] = "r";
	}
	if(__map_reserved["ꞃ"] != null) {
		_g.setReserved("ꞃ","r");
	} else {
		_g.h["ꞃ"] = "r";
	}
	if(__map_reserved.s != null) {
		_g.setReserved("s","s");
	} else {
		_g.h["s"] = "s";
	}
	if(__map_reserved["ⓢ"] != null) {
		_g.setReserved("ⓢ","s");
	} else {
		_g.h["ⓢ"] = "s";
	}
	if(__map_reserved["ｓ"] != null) {
		_g.setReserved("ｓ","s");
	} else {
		_g.h["ｓ"] = "s";
	}
	if(__map_reserved["ß"] != null) {
		_g.setReserved("ß","s");
	} else {
		_g.h["ß"] = "s";
	}
	if(__map_reserved["ś"] != null) {
		_g.setReserved("ś","s");
	} else {
		_g.h["ś"] = "s";
	}
	if(__map_reserved["ṥ"] != null) {
		_g.setReserved("ṥ","s");
	} else {
		_g.h["ṥ"] = "s";
	}
	if(__map_reserved["ŝ"] != null) {
		_g.setReserved("ŝ","s");
	} else {
		_g.h["ŝ"] = "s";
	}
	if(__map_reserved["ṡ"] != null) {
		_g.setReserved("ṡ","s");
	} else {
		_g.h["ṡ"] = "s";
	}
	if(__map_reserved["š"] != null) {
		_g.setReserved("š","s");
	} else {
		_g.h["š"] = "s";
	}
	if(__map_reserved["ṧ"] != null) {
		_g.setReserved("ṧ","s");
	} else {
		_g.h["ṧ"] = "s";
	}
	if(__map_reserved["ṣ"] != null) {
		_g.setReserved("ṣ","s");
	} else {
		_g.h["ṣ"] = "s";
	}
	if(__map_reserved["ṩ"] != null) {
		_g.setReserved("ṩ","s");
	} else {
		_g.h["ṩ"] = "s";
	}
	if(__map_reserved["ș"] != null) {
		_g.setReserved("ș","s");
	} else {
		_g.h["ș"] = "s";
	}
	if(__map_reserved["ş"] != null) {
		_g.setReserved("ş","s");
	} else {
		_g.h["ş"] = "s";
	}
	if(__map_reserved["ȿ"] != null) {
		_g.setReserved("ȿ","s");
	} else {
		_g.h["ȿ"] = "s";
	}
	if(__map_reserved["ꞩ"] != null) {
		_g.setReserved("ꞩ","s");
	} else {
		_g.h["ꞩ"] = "s";
	}
	if(__map_reserved["ꞅ"] != null) {
		_g.setReserved("ꞅ","s");
	} else {
		_g.h["ꞅ"] = "s";
	}
	if(__map_reserved["ẛ"] != null) {
		_g.setReserved("ẛ","s");
	} else {
		_g.h["ẛ"] = "s";
	}
	if(__map_reserved.t != null) {
		_g.setReserved("t","t");
	} else {
		_g.h["t"] = "t";
	}
	if(__map_reserved["ⓣ"] != null) {
		_g.setReserved("ⓣ","t");
	} else {
		_g.h["ⓣ"] = "t";
	}
	if(__map_reserved["ｔ"] != null) {
		_g.setReserved("ｔ","t");
	} else {
		_g.h["ｔ"] = "t";
	}
	if(__map_reserved["ṫ"] != null) {
		_g.setReserved("ṫ","t");
	} else {
		_g.h["ṫ"] = "t";
	}
	if(__map_reserved["ẗ"] != null) {
		_g.setReserved("ẗ","t");
	} else {
		_g.h["ẗ"] = "t";
	}
	if(__map_reserved["ť"] != null) {
		_g.setReserved("ť","t");
	} else {
		_g.h["ť"] = "t";
	}
	if(__map_reserved["ṭ"] != null) {
		_g.setReserved("ṭ","t");
	} else {
		_g.h["ṭ"] = "t";
	}
	if(__map_reserved["ț"] != null) {
		_g.setReserved("ț","t");
	} else {
		_g.h["ț"] = "t";
	}
	if(__map_reserved["ţ"] != null) {
		_g.setReserved("ţ","t");
	} else {
		_g.h["ţ"] = "t";
	}
	if(__map_reserved["ṱ"] != null) {
		_g.setReserved("ṱ","t");
	} else {
		_g.h["ṱ"] = "t";
	}
	if(__map_reserved["ṯ"] != null) {
		_g.setReserved("ṯ","t");
	} else {
		_g.h["ṯ"] = "t";
	}
	if(__map_reserved["ŧ"] != null) {
		_g.setReserved("ŧ","t");
	} else {
		_g.h["ŧ"] = "t";
	}
	if(__map_reserved["ƭ"] != null) {
		_g.setReserved("ƭ","t");
	} else {
		_g.h["ƭ"] = "t";
	}
	if(__map_reserved["ʈ"] != null) {
		_g.setReserved("ʈ","t");
	} else {
		_g.h["ʈ"] = "t";
	}
	if(__map_reserved["ⱦ"] != null) {
		_g.setReserved("ⱦ","t");
	} else {
		_g.h["ⱦ"] = "t";
	}
	if(__map_reserved["ꞇ"] != null) {
		_g.setReserved("ꞇ","t");
	} else {
		_g.h["ꞇ"] = "t";
	}
	if(__map_reserved["þ"] != null) {
		_g.setReserved("þ","th");
	} else {
		_g.h["þ"] = "th";
	}
	if(__map_reserved["ꜩ"] != null) {
		_g.setReserved("ꜩ","tz");
	} else {
		_g.h["ꜩ"] = "tz";
	}
	if(__map_reserved.u != null) {
		_g.setReserved("u","u");
	} else {
		_g.h["u"] = "u";
	}
	if(__map_reserved["ⓤ"] != null) {
		_g.setReserved("ⓤ","u");
	} else {
		_g.h["ⓤ"] = "u";
	}
	if(__map_reserved["ｕ"] != null) {
		_g.setReserved("ｕ","u");
	} else {
		_g.h["ｕ"] = "u";
	}
	if(__map_reserved["ù"] != null) {
		_g.setReserved("ù","u");
	} else {
		_g.h["ù"] = "u";
	}
	if(__map_reserved["ú"] != null) {
		_g.setReserved("ú","u");
	} else {
		_g.h["ú"] = "u";
	}
	if(__map_reserved["û"] != null) {
		_g.setReserved("û","u");
	} else {
		_g.h["û"] = "u";
	}
	if(__map_reserved["ũ"] != null) {
		_g.setReserved("ũ","u");
	} else {
		_g.h["ũ"] = "u";
	}
	if(__map_reserved["ṹ"] != null) {
		_g.setReserved("ṹ","u");
	} else {
		_g.h["ṹ"] = "u";
	}
	if(__map_reserved["ū"] != null) {
		_g.setReserved("ū","u");
	} else {
		_g.h["ū"] = "u";
	}
	if(__map_reserved["ṻ"] != null) {
		_g.setReserved("ṻ","u");
	} else {
		_g.h["ṻ"] = "u";
	}
	if(__map_reserved["ŭ"] != null) {
		_g.setReserved("ŭ","u");
	} else {
		_g.h["ŭ"] = "u";
	}
	if(__map_reserved["ü"] != null) {
		_g.setReserved("ü","u");
	} else {
		_g.h["ü"] = "u";
	}
	if(__map_reserved["ǜ"] != null) {
		_g.setReserved("ǜ","u");
	} else {
		_g.h["ǜ"] = "u";
	}
	if(__map_reserved["ǘ"] != null) {
		_g.setReserved("ǘ","u");
	} else {
		_g.h["ǘ"] = "u";
	}
	if(__map_reserved["ǖ"] != null) {
		_g.setReserved("ǖ","u");
	} else {
		_g.h["ǖ"] = "u";
	}
	if(__map_reserved["ǚ"] != null) {
		_g.setReserved("ǚ","u");
	} else {
		_g.h["ǚ"] = "u";
	}
	if(__map_reserved["ủ"] != null) {
		_g.setReserved("ủ","u");
	} else {
		_g.h["ủ"] = "u";
	}
	if(__map_reserved["ů"] != null) {
		_g.setReserved("ů","u");
	} else {
		_g.h["ů"] = "u";
	}
	if(__map_reserved["ű"] != null) {
		_g.setReserved("ű","u");
	} else {
		_g.h["ű"] = "u";
	}
	if(__map_reserved["ǔ"] != null) {
		_g.setReserved("ǔ","u");
	} else {
		_g.h["ǔ"] = "u";
	}
	if(__map_reserved["ȕ"] != null) {
		_g.setReserved("ȕ","u");
	} else {
		_g.h["ȕ"] = "u";
	}
	if(__map_reserved["ȗ"] != null) {
		_g.setReserved("ȗ","u");
	} else {
		_g.h["ȗ"] = "u";
	}
	if(__map_reserved["ư"] != null) {
		_g.setReserved("ư","u");
	} else {
		_g.h["ư"] = "u";
	}
	if(__map_reserved["ừ"] != null) {
		_g.setReserved("ừ","u");
	} else {
		_g.h["ừ"] = "u";
	}
	if(__map_reserved["ứ"] != null) {
		_g.setReserved("ứ","u");
	} else {
		_g.h["ứ"] = "u";
	}
	if(__map_reserved["ữ"] != null) {
		_g.setReserved("ữ","u");
	} else {
		_g.h["ữ"] = "u";
	}
	if(__map_reserved["ử"] != null) {
		_g.setReserved("ử","u");
	} else {
		_g.h["ử"] = "u";
	}
	if(__map_reserved["ự"] != null) {
		_g.setReserved("ự","u");
	} else {
		_g.h["ự"] = "u";
	}
	if(__map_reserved["ụ"] != null) {
		_g.setReserved("ụ","u");
	} else {
		_g.h["ụ"] = "u";
	}
	if(__map_reserved["ṳ"] != null) {
		_g.setReserved("ṳ","u");
	} else {
		_g.h["ṳ"] = "u";
	}
	if(__map_reserved["ų"] != null) {
		_g.setReserved("ų","u");
	} else {
		_g.h["ų"] = "u";
	}
	if(__map_reserved["ṷ"] != null) {
		_g.setReserved("ṷ","u");
	} else {
		_g.h["ṷ"] = "u";
	}
	if(__map_reserved["ṵ"] != null) {
		_g.setReserved("ṵ","u");
	} else {
		_g.h["ṵ"] = "u";
	}
	if(__map_reserved["ʉ"] != null) {
		_g.setReserved("ʉ","u");
	} else {
		_g.h["ʉ"] = "u";
	}
	if(__map_reserved.v != null) {
		_g.setReserved("v","v");
	} else {
		_g.h["v"] = "v";
	}
	if(__map_reserved["ⓥ"] != null) {
		_g.setReserved("ⓥ","v");
	} else {
		_g.h["ⓥ"] = "v";
	}
	if(__map_reserved["ｖ"] != null) {
		_g.setReserved("ｖ","v");
	} else {
		_g.h["ｖ"] = "v";
	}
	if(__map_reserved["ṽ"] != null) {
		_g.setReserved("ṽ","v");
	} else {
		_g.h["ṽ"] = "v";
	}
	if(__map_reserved["ṿ"] != null) {
		_g.setReserved("ṿ","v");
	} else {
		_g.h["ṿ"] = "v";
	}
	if(__map_reserved["ʋ"] != null) {
		_g.setReserved("ʋ","v");
	} else {
		_g.h["ʋ"] = "v";
	}
	if(__map_reserved["ꝟ"] != null) {
		_g.setReserved("ꝟ","v");
	} else {
		_g.h["ꝟ"] = "v";
	}
	if(__map_reserved["ʌ"] != null) {
		_g.setReserved("ʌ","v");
	} else {
		_g.h["ʌ"] = "v";
	}
	if(__map_reserved["ꝡ"] != null) {
		_g.setReserved("ꝡ","vy");
	} else {
		_g.h["ꝡ"] = "vy";
	}
	if(__map_reserved.w != null) {
		_g.setReserved("w","w");
	} else {
		_g.h["w"] = "w";
	}
	if(__map_reserved["ⓦ"] != null) {
		_g.setReserved("ⓦ","w");
	} else {
		_g.h["ⓦ"] = "w";
	}
	if(__map_reserved["ｗ"] != null) {
		_g.setReserved("ｗ","w");
	} else {
		_g.h["ｗ"] = "w";
	}
	if(__map_reserved["ẁ"] != null) {
		_g.setReserved("ẁ","w");
	} else {
		_g.h["ẁ"] = "w";
	}
	if(__map_reserved["ẃ"] != null) {
		_g.setReserved("ẃ","w");
	} else {
		_g.h["ẃ"] = "w";
	}
	if(__map_reserved["ŵ"] != null) {
		_g.setReserved("ŵ","w");
	} else {
		_g.h["ŵ"] = "w";
	}
	if(__map_reserved["ẇ"] != null) {
		_g.setReserved("ẇ","w");
	} else {
		_g.h["ẇ"] = "w";
	}
	if(__map_reserved["ẅ"] != null) {
		_g.setReserved("ẅ","w");
	} else {
		_g.h["ẅ"] = "w";
	}
	if(__map_reserved["ẘ"] != null) {
		_g.setReserved("ẘ","w");
	} else {
		_g.h["ẘ"] = "w";
	}
	if(__map_reserved["ẉ"] != null) {
		_g.setReserved("ẉ","w");
	} else {
		_g.h["ẉ"] = "w";
	}
	if(__map_reserved["ⱳ"] != null) {
		_g.setReserved("ⱳ","w");
	} else {
		_g.h["ⱳ"] = "w";
	}
	if(__map_reserved.x != null) {
		_g.setReserved("x","x");
	} else {
		_g.h["x"] = "x";
	}
	if(__map_reserved["ⓧ"] != null) {
		_g.setReserved("ⓧ","x");
	} else {
		_g.h["ⓧ"] = "x";
	}
	if(__map_reserved["ｘ"] != null) {
		_g.setReserved("ｘ","x");
	} else {
		_g.h["ｘ"] = "x";
	}
	if(__map_reserved["ẋ"] != null) {
		_g.setReserved("ẋ","x");
	} else {
		_g.h["ẋ"] = "x";
	}
	if(__map_reserved["ẍ"] != null) {
		_g.setReserved("ẍ","x");
	} else {
		_g.h["ẍ"] = "x";
	}
	if(__map_reserved.y != null) {
		_g.setReserved("y","y");
	} else {
		_g.h["y"] = "y";
	}
	if(__map_reserved["ⓨ"] != null) {
		_g.setReserved("ⓨ","y");
	} else {
		_g.h["ⓨ"] = "y";
	}
	if(__map_reserved["ｙ"] != null) {
		_g.setReserved("ｙ","y");
	} else {
		_g.h["ｙ"] = "y";
	}
	if(__map_reserved["ỳ"] != null) {
		_g.setReserved("ỳ","y");
	} else {
		_g.h["ỳ"] = "y";
	}
	if(__map_reserved["ý"] != null) {
		_g.setReserved("ý","y");
	} else {
		_g.h["ý"] = "y";
	}
	if(__map_reserved["ŷ"] != null) {
		_g.setReserved("ŷ","y");
	} else {
		_g.h["ŷ"] = "y";
	}
	if(__map_reserved["ỹ"] != null) {
		_g.setReserved("ỹ","y");
	} else {
		_g.h["ỹ"] = "y";
	}
	if(__map_reserved["ȳ"] != null) {
		_g.setReserved("ȳ","y");
	} else {
		_g.h["ȳ"] = "y";
	}
	if(__map_reserved["ẏ"] != null) {
		_g.setReserved("ẏ","y");
	} else {
		_g.h["ẏ"] = "y";
	}
	if(__map_reserved["ÿ"] != null) {
		_g.setReserved("ÿ","y");
	} else {
		_g.h["ÿ"] = "y";
	}
	if(__map_reserved["ỷ"] != null) {
		_g.setReserved("ỷ","y");
	} else {
		_g.h["ỷ"] = "y";
	}
	if(__map_reserved["ẙ"] != null) {
		_g.setReserved("ẙ","y");
	} else {
		_g.h["ẙ"] = "y";
	}
	if(__map_reserved["ỵ"] != null) {
		_g.setReserved("ỵ","y");
	} else {
		_g.h["ỵ"] = "y";
	}
	if(__map_reserved["ƴ"] != null) {
		_g.setReserved("ƴ","y");
	} else {
		_g.h["ƴ"] = "y";
	}
	if(__map_reserved["ɏ"] != null) {
		_g.setReserved("ɏ","y");
	} else {
		_g.h["ɏ"] = "y";
	}
	if(__map_reserved["ỿ"] != null) {
		_g.setReserved("ỿ","y");
	} else {
		_g.h["ỿ"] = "y";
	}
	if(__map_reserved.z != null) {
		_g.setReserved("z","z");
	} else {
		_g.h["z"] = "z";
	}
	if(__map_reserved["ⓩ"] != null) {
		_g.setReserved("ⓩ","z");
	} else {
		_g.h["ⓩ"] = "z";
	}
	if(__map_reserved["ｚ"] != null) {
		_g.setReserved("ｚ","z");
	} else {
		_g.h["ｚ"] = "z";
	}
	if(__map_reserved["ź"] != null) {
		_g.setReserved("ź","z");
	} else {
		_g.h["ź"] = "z";
	}
	if(__map_reserved["ẑ"] != null) {
		_g.setReserved("ẑ","z");
	} else {
		_g.h["ẑ"] = "z";
	}
	if(__map_reserved["ż"] != null) {
		_g.setReserved("ż","z");
	} else {
		_g.h["ż"] = "z";
	}
	if(__map_reserved["ž"] != null) {
		_g.setReserved("ž","z");
	} else {
		_g.h["ž"] = "z";
	}
	if(__map_reserved["ẓ"] != null) {
		_g.setReserved("ẓ","z");
	} else {
		_g.h["ẓ"] = "z";
	}
	if(__map_reserved["ẕ"] != null) {
		_g.setReserved("ẕ","z");
	} else {
		_g.h["ẕ"] = "z";
	}
	if(__map_reserved["ƶ"] != null) {
		_g.setReserved("ƶ","z");
	} else {
		_g.h["ƶ"] = "z";
	}
	if(__map_reserved["ȥ"] != null) {
		_g.setReserved("ȥ","z");
	} else {
		_g.h["ȥ"] = "z";
	}
	if(__map_reserved["ɀ"] != null) {
		_g.setReserved("ɀ","z");
	} else {
		_g.h["ɀ"] = "z";
	}
	if(__map_reserved["ⱬ"] != null) {
		_g.setReserved("ⱬ","z");
	} else {
		_g.h["ⱬ"] = "z";
	}
	if(__map_reserved["ꝣ"] != null) {
		_g.setReserved("ꝣ","z");
	} else {
		_g.h["ꝣ"] = "z";
	}
	$r = _g;
	return $r;
}(this));
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
